cscope 15 $HOME/xen-4.11-experiment/tools/xl               0000598994
	@_paths.h

1 
	#sbödú
 "/u§/loˇl/sbö"

	)

2 
	#bödú
 "/u§/loˇl/bö"

	)

3 
	#LIBEXEC
 "/u§/loˇl/lib/xí"

	)

4 
	#LIBEXEC_BIN
 "/u§/loˇl/lib/xí/bö"

	)

5 
	#libdú
 "/u§/loˇl/lib"

	)

6 
	#SHAREDIR
 "/u§/loˇl/sh¨e"

	)

7 
	#XENFIRMWAREDIR
 "/u§/loˇl/lib/xí/boŸ"

	)

8 
	#XEN_CONFIG_DIR
 "/ëc/xí"

	)

9 
	#XEN_SCRIPT_DIR
 "/ëc/xí/s¸ùts"

	)

10 
	#XEN_LOCK_DIR
 "/v¨/lock"

	)

11 
	#XEN_RUN_DIR
 "/v¨/run/xí"

	)

12 
	#XEN_PAGING_DIR
 "/v¨/lib/xí/xí∑gög"

	)

13 
	#XEN_DUMP_DIR
 "/v¨/lib/xí/dump"

	)

14 
	#XEN_LOG_DIR
 "/v¨/log/xí"

	)

15 
	#XEN_LIB_DIR
 "/v¨/lib/xí"

	)

16 
	#XEN_RUN_STORED
 "/v¨/run/xí°‹ed"

	)

	@xl.c

15 
	~<°dio.h
>

16 
	~<°dlib.h
>

17 
	~<°rög.h
>

18 
	~<uni°d.h
>

19 
	~<time.h
>

20 
	~<sys/ty≥s.h
>

21 
	~<sys/°©.h
>

22 
	~<f˙é.h
>

23 
	~<˘y≥.h
>

24 
	~<öây≥s.h
>

25 
	~<ªgex.h
>

27 
	~<libxl.h
>

28 
	~<libxl_utûs.h
>

29 
	~<libxlutû.h
>

30 
	~"xl.h
"

32 
xítoﬁlog_loggî_°dio°ªam
 *
	gloggî
;

33 
	gdryrun_⁄ly
;

34 
	gf‹˚_executi⁄
;

35 
	gautobÆlo⁄
 = -1;

36 *
	gblkdev_°¨t
;

37 
	grun_hŸ∂ug_s¸ùts
 = 1;

38 *
	glockfûe
;

39 *
	gdeÁu…_vifs¸ùt
 = 
NULL
;

40 *
	gdeÁu…_bridge
 = 
NULL
;

41 *
	gdeÁu…_g©ewaydev
 = 
NULL
;

42 *
	gdeÁu…_vifbackíd
 = 
NULL
;

43 *
	gdeÁu…_ªmus_√tbufs¸ùt
 = 
NULL
;

44 *
	gdeÁu…_cﬁo_¥oxy_s¸ùt
 = 
NULL
;

45 
ouçut_f‹m©
 
	gdeÁu…_ouçut_f‹m©
 = 
OUTPUT_FORMAT_JSON
;

46 
	g˛aim_mode
 = 1;

47 
boﬁ
 
	g¥ogªss_u£_¸
 = 0;

48 
	gmax_gø¡_‰ames
 = -1;

49 
	gmax_m≠åack_‰ames
 = -1;

51 
xítoﬁlog_Àvñ
 
	gmömsgÀvñ
 = 
mömsgÀvñ_deÁu…
;

53 
	glogfûe
 = 2;

56 
libxl_˘x
 *
	g˘x
;

58 
xlchûd
 
	gchûdªn
[
chûd_max
];

60 c⁄° *
	gcomm⁄_dom«me
;

64 
	$auto_autobÆlo⁄
()

66 c⁄° 
libxl_vîsi⁄_öfo
 *
öfo
;

67 
ªgex_t
 
ªgex
;

68 
ªt
;

70 
öfo
 = 
	`libxl_gë_vîsi⁄_öfo
(
˘x
);

71 i‡(!
öfo
)

74 
ªt
 = 
	`ªgcomp
(&
ªgex
,

76 
REG_NOSUB
 | 
REG_EXTENDED
);

77 i‡(
ªt
)

80 
ªt
 = 
	`ªgexec
(&
ªgex
, 
öfo
->
comm™dlöe
, 0, 
NULL
, 0);

81 
	`ªg‰ì
(&
ªgex
);

82  
ªt
 =
REG_NOMATCH
;

83 
	}
}

85 
	$∑r£_globÆ_c⁄fig
(c⁄° *
c⁄figfûe
,

86 c⁄° *
c⁄figfûe_d©a
,

87 
c⁄figfûe_Àn
)

89 
l
;

90 
XLU_C⁄fig
 *
c⁄fig
;

91 
e
;

92 c⁄° *
buf
;

93 
libxl_physöfo
 
physöfo
;

95 
c⁄fig
 = 
	`xlu_cfg_öô
(
°dîr
, 
c⁄figfûe
);

96 i‡(!
c⁄fig
) {

97 
	`Ârötf
(
°dîr
, "FailedÅoállocate for configuration\n");

98 
	`exô
(1);

101 
e
 = 
	`xlu_cfg_ªadd©a
(
c⁄fig
, 
c⁄figfûe_d©a
, 
c⁄figfûe_Àn
);

102 i‡(
e
) {

103 
	`Ârötf
(
°dîr
, "FaûedÅÿ∑r£ c⁄fig fûe: %s\n", 
	`°ªº‹
(
e
));

104 
	`exô
(1);

107 i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "autobÆlo⁄", &
buf
, 0)) {

108 i‡(!
	`°rcmp
(
buf
, "on") || !strcmp(buf, "1"))

109 
autobÆlo⁄
 = 1;

110 i‡(!
	`°rcmp
(
buf
, "off") || !strcmp(buf, "0"))

111 
autobÆlo⁄
 = 0;

112 i‡(!
	`°rcmp
(
buf
, "auto"))

113 
autobÆlo⁄
 = -1;

115 
	`Ârötf
(
°dîr
, "invalidáutoballoon option");

117 i‡(
autobÆlo⁄
 == -1)

118 
autobÆlo⁄
 = 
	`auto_autobÆlo⁄
();

120 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "run_hŸ∂ug_s¸ùts", &
l
, 0))

121 
run_hŸ∂ug_s¸ùts
 = 
l
;

123 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "lockfûe", &
buf
, 0))

124 
lockfûe
 = 
	`°rdup
(
buf
);

126 
lockfûe
 = 
	`°rdup
(
XL_LOCK_FILE
);

129 i‡(!
lockfûe
) {

130 
	`Ârötf
(
°dîr
, "failedÅoállocateÜockfile\n");

131 
	`exô
(1);

144 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "vifs¸ùt", &
buf
, 0)) {

145 
	`Ârötf
(
°dîr
, "the global config option vifscript is deprecated, "

147 
	`‰ì
(
deÁu…_vifs¸ùt
);

148 
deÁu…_vifs¸ùt
 = 
	`°rdup
(
buf
);

151 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "vif.deÁu….s¸ùt", &
buf
, 0)) {

152 
	`‰ì
(
deÁu…_vifs¸ùt
);

153 
deÁu…_vifs¸ùt
 = 
	`°rdup
(
buf
);

156 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "deÁu…bridge", &
buf
, 0)) {

157 
	`Ârötf
(
°dîr
, "the global config option defaultbridge is deprecated, "

159 
	`‰ì
(
deÁu…_bridge
);

160 
deÁu…_bridge
 = 
	`°rdup
(
buf
);

163 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "vif.deÁu….bridge", &
buf
, 0)) {

164 
	`‰ì
(
deÁu…_bridge
);

165 
deÁu…_bridge
 = 
	`°rdup
(
buf
);

168 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "vif.deÁu….g©ewaydev", &
buf
, 0))

169 
deÁu…_g©ewaydev
 = 
	`°rdup
(
buf
);

171 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "vif.deÁu….backíd", &
buf
, 0))

172 
deÁu…_vifbackíd
 = 
	`°rdup
(
buf
);

174 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "ouçut_f‹m©", &
buf
, 0)) {

175 i‡(!
	`°rcmp
(
buf
, "json"))

176 
deÁu…_ouçut_f‹m©
 = 
OUTPUT_FORMAT_JSON
;

177 i‡(!
	`°rcmp
(
buf
, "sxp"))

178 
deÁu…_ouçut_f‹m©
 = 
OUTPUT_FORMAT_SXP
;

180 
	`Ârötf
(
°dîr
, "övÆid deÁu… ouçuàf‹m© \"%s\"\n", 
buf
);

183 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "blkdev_°¨t", &
buf
, 0))

184 
blkdev_°¨t
 = 
	`°rdup
(
buf
);

186 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "˛aim_mode", &
l
, 0))

187 
˛aim_mode
 = 
l
;

189 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "remus.default.netbufscript",

190 &
deÁu…_ªmus_√tbufs¸ùt
, 0);

191 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "colo.default.proxyscript",

192 &
deÁu…_cﬁo_¥oxy_s¸ùt
, 0);

194 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "max_gø¡_‰ames", &
l
, 0))

195 
max_gø¡_‰ames
 = 
l
;

197 
	`libxl_physöfo_öô
(&
physöfo
);

198 
max_gø¡_‰ames
 = (
	`libxl_gë_physöfo
(
˘x
, &
physöfo
) != 0 ||

199 !(
physöfo
.
max_possibÀ_m‚
 >> 32))

201 
	`libxl_physöfo_di•o£
(&
physöfo
);

203 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "max_m≠åack_‰ames", &
l
, 0))

204 
max_m≠åack_‰ames
 = 
l
;

206 
	`xlu_cfg_de°roy
(
c⁄fig
);

207 
	}
}

209 
	$po°f‹k
()

211 
	`libxl_po°f‹k_chûd_n€xec
(
˘x
);

212 
˘x
 = 0;

214 
	`xl_˘x_Æloc
();

215 
	}
}

217 
pid_t
 
	$xl_f‹k
(
xlchûdnum
 
chûd
, c⁄° *
des¸ùti⁄
) {

218 
xlchûd
 *
ch
 = &
chûdªn
[
chûd
];

219 
i
;

221 
	`as£π
(!
ch
->
pid
);

222 
ch
->
ª≠ed
 = 0;

223 
ch
->
des¸ùti⁄
 = description;

225 
ch
->
pid
 = 
	`f‹k
();

226 i‡(
ch
->
pid
 == -1) {

227 
	`≥º‹
("fork failed");

228 
	`exô
(-1);

231 i‡(!
ch
->
pid
) {

233 
i
=0; i<
chûd_max
; i++)

234 
chûdªn
[
i
].
pid
 = 0;

237  
ch
->
pid
;

238 
	}
}

240 
pid_t
 
	$xl_waôpid
(
xlchûdnum
 
chûd
, *
°©us
, 
Êags
)

242 
xlchûd
 *
ch
 = &
chûdªn
[
chûd
];

243 
pid_t
 
gŸ
 = 
ch
->
pid
;

244 
	`as£π
(
gŸ
);

245 i‡(
ch
->
ª≠ed
) {

246 *
°©us
 = 
ch
->status;

247 
ch
->
pid
 = 0;

248  
gŸ
;

251 
gŸ
 = 
	`waôpid
(
ch
->
pid
, 
°©us
, 
Êags
);

252 i‡(
gŸ
 < 0 && 
î∫o
 =
EINTR
) ;

253 i‡(
gŸ
 > 0) {

254 
	`as£π
(
gŸ
 =
ch
->
pid
);

255 
ch
->
pid
 = 0;

257  
gŸ
;

259 
	}
}

261 
	$xl_chûd_pid
(
xlchûdnum
 
chûd
)

263 
xlchûd
 *
ch
 = &
chûdªn
[
chûd
];

264  
ch
->
pid
;

265 
	}
}

267 
	$xl_ªp‹t_chûd_exô°©us
(
xítoﬁlog_Àvñ
 
Àvñ
,

268 
xlchûdnum
 
chûd
, 
pid_t
 
pid
, 
°©us
)

270 
	`libxl_ªp‹t_chûd_exô°©us
(
˘x
, 
Àvñ
, 
chûdªn
[
chûd
].
des¸ùti⁄
,

271 
pid
, 
°©us
);

272 
	}
}

274 
	$xl_ª≠ed_ˇŒback
(
pid_t
 
gŸ
, 
°©us
, *
u£r
)

276 
i
;

277 
	`as£π
(
gŸ
);

278 
i
=0; i<
chûd_max
; i++) {

279 
xlchûd
 *
ch
 = &
chûdªn
[
i
];

280 i‡(
ch
->
pid
 =
gŸ
) {

281 
ch
->
ª≠ed
 = 1;

282 
ch
->
°©us
 = status;

286  
ERROR_UNKNOWN_CHILD
;

287 
	}
}

289 c⁄° 
libxl_chûd¥oc_hooks
 
	gchûd¥oc_hooks
 = {

290 .
chldow√r
 = 
libxl_sigchld_ow√r_libxl
,

291 .
	gª≠ed_ˇŒback
 = 
xl_ª≠ed_ˇŒback
,

294 
	$xl_˘x_Æloc
() {

295 i‡(
	`libxl_˘x_Æloc
(&
˘x
, 
LIBXL_VERSION
, 0, (
xítoﬁlog_loggî
*)
loggî
)) {

296 
	`Ârötf
(
°dîr
, "cannot init xl context\n");

297 
	`exô
(1);

300 
	`libxl_chûd¥oc_£tmode
(
˘x
, &
chûd¥oc_hooks
, 0);

301 
	}
}

303 
	$xl_˘x_‰ì
()

305 i‡(
˘x
) {

306 
	`libxl_˘x_‰ì
(
˘x
);

307 
˘x
 = 
NULL
;

309 i‡(
loggî
) {

310 
	`xé_loggî_de°roy
((
xítoﬁlog_loggî
*)
loggî
);

311 
loggî
 = 
NULL
;

313 i‡(
lockfûe
) {

314 
	`‰ì
(
lockfûe
);

315 
lockfûe
 = 
NULL
;

317 
	}
}

319 
	$maö
(
¨gc
, **
¨gv
)

321 
›t
 = 0;

322 *
cmd
 = 0;

323 
cmd_•ec
 *
c•ec
;

324 
ªt
;

325 *
c⁄fig_d©a
 = 0;

326 
c⁄fig_Àn
 = 0;

328 (
›t
 = 
	`gë›t
(
¨gc
, 
¨gv
, "+vftN")) >= 0) {

329 
›t
) {

331 i‡(
mömsgÀvñ
 > 0) minmsglevel--;

334 
dryrun_⁄ly
 = 1;

337 
f‹˚_executi⁄
 = 1;

340 
¥ogªss_u£_¸
 = 1;

343 
	`Ârötf
(
°dîr
, "unknown global option\n");

344 
	`exô
(
EXIT_FAILURE
);

348 
cmd
 = 
¨gv
[
›töd
];

350 i‡(!
cmd
) {

351 
	`hñp
(
NULL
);

352 
	`exô
(
EXIT_FAILURE
);

354 
›ãº
 = 0;

356 
loggî
 = 
	`xé_¸óãloggî_°dio°ªam
(
°dîr
, 
mömsgÀvñ
,

357 (
¥ogªss_u£_¸
 ? 
XTL_STDIOSTREAM_PROGRESS_USE_CR
 : 0));

358 i‡(!
loggî
Ë
	`exô
(
EXIT_FAILURE
);

360 
	`©exô
(
xl_˘x_‰ì
);

362 
	`xl_˘x_Æloc
();

364 
ªt
 = 
	`libxl_ªad_fûe_c⁄ã¡s
(
˘x
, 
XL_GLOBAL_CONFIG
,

365 &
c⁄fig_d©a
, &
c⁄fig_Àn
);

366 i‡(
ªt
)

367 
	`Ârötf
(
°dîr
, "FailedÅoÑead config file: %s: %s\n",

368 
XL_GLOBAL_CONFIG
, 
	`°ªº‹
(
î∫o
));

369 
	`∑r£_globÆ_c⁄fig
(
XL_GLOBAL_CONFIG
, 
c⁄fig_d©a
, 
c⁄fig_Àn
);

370 
	`‰ì
(
c⁄fig_d©a
);

373 
¨gv
 +
›töd
;

374 
¨gc
 -
›töd
;

375 
›töd
 = 1;

377 
c•ec
 = 
	`cmdèbÀ_lookup
(
cmd
);

378 i‡(
c•ec
) {

379 i‡(
dryrun_⁄ly
 && !
c•ec
->
ˇn_dryrun
) {

380 
	`Ârötf
(
°dîr
, "command doesÇot implement -N (dryrun) option\n");

381 
ªt
 = 
EXIT_FAILURE
;

382 
xô
;

384 
ªt
 = 
c•ec
->
	`cmd_im∂
(
¨gc
, 
¨gv
);

385 } i‡(!
	`°rcmp
(
cmd
, "help")) {

386 
	`hñp
(
¨gv
[1]);

387 
ªt
 = 
EXIT_SUCCESS
;

389 
	`Ârötf
(
°dîr
, "commandÇot implemented\n");

390 
ªt
 = 
EXIT_FAILURE
;

393 
xô
:

394  
ªt
;

395 
	}
}

397 
	$chûd_ªp‹t
(
xlchûdnum
 
chûd
)

399 
°©us
;

400 
pid_t
 
gŸ
 = 
	`xl_waôpid
(
chûd
, &
°©us
, 0);

401 i‡(
gŸ
 < 0) {

402 
	`Ârötf
(
°dîr
, "xl: warning, failedÅo waitpid for %s: %s\n",

403 
chûdªn
[
chûd
].
des¸ùti⁄
, 
	`°ªº‹
(
î∫o
));

404  
ERROR_FAIL
;

405 } i‡(
°©us
) {

406 
	`xl_ªp‹t_chûd_exô°©us
(
XTL_ERROR
, 
chûd
, 
gŸ
, 
°©us
);

407  
ERROR_FAIL
;

411 
	}
}

413 
	$hñp
(c⁄° *
comm™d
)

415 
i
;

416 
cmd_•ec
 *
cmd
;

418 i‡(!
comm™d
 || !
	`°rcmp
(command, "help")) {

419 
	`¥ötf
("Usage xl [-vfN] <subcommand> [args]\n\n");

420 
	`¥ötf
("xl fullÜist of subcommands:\n\n");

421 
i
 = 0; i < 
cmdèbÀ_Àn
; i++) {

422 
	`¥ötf
(" %-19†", 
cmd_èbÀ
[
i
].
cmd_«me
);

423 i‡(
	`°æí
(
cmd_èbÀ
[
i
].
cmd_«me
) > 19)

424 
	`¥ötf
("\n %-19s ", "");

425 
	`¥ötf
("%s\n", 
cmd_èbÀ
[
i
].
cmd_desc
);

428 
cmd
 = 
	`cmdèbÀ_lookup
(
comm™d
);

429 i‡(
cmd
) {

430 
	`¥ötf
("Usage: xl [-v%s%s] %s %s\n\n%s.\n\n",

431 
cmd
->
modifõs
 ? "f" : "",

432 
cmd
->
ˇn_dryrun
 ? "N" : "",

433 
cmd
->
cmd_«me
,

434 
cmd
->
cmd_ußge
,

435 
cmd
->
cmd_desc
);

436 i‡(
cmd
->
cmd_›ti⁄
)

437 
	`¥ötf
("O±i⁄s:\n\n%s\n", 
cmd
->
cmd_›ti⁄
);

440 
	`¥ötf
("comm™d \"%s\"ÇŸ im∂emíãd\n", 
comm™d
);

443 
	}
}

	@xl.h

15 #i‚de‡
XL_H


16 
	#XL_H


	)

18 
	~<as£π.h
>

20 
	~"_∑ths.h
"

21 
	~<xítoﬁlog.h
>

23 
	scmd_•ec
 {

24 *
	mcmd_«me
;

25 (*
	mcmd_im∂
)(
	m¨gc
, **
	m¨gv
);

26 
	mˇn_dryrun
;

27 
	mmodifõs
;

28 *
	mcmd_desc
;

29 *
	mcmd_ußge
;

30 *
	mcmd_›ti⁄
;

33 
	sdomaö_¸óã
 {

34 
	mdebug
;

35 
	md´m⁄ize
;

36 
	mm⁄ô‹
;

37 
	m∑u£d
;

38 
	mdryrun
;

39 
	mquõt
;

40 
	mvnc
;

41 
	mvnˇut›ass
;

42 
	mc⁄sﬁe_autoc⁄√˘
;

43 
	mcheckpoöãd_°ªam
;

44 c⁄° *
	mc⁄fig_fûe
;

45 *
	mexåa_c⁄fig
;

46 c⁄° *
	mª°‹e_fûe
;

47 *
	mcﬁo_¥oxy_s¸ùt
;

48 
boﬁ
 
	mu£r•a˚_cﬁo_¥oxy
;

49 
	mmigøã_fd
;

50 
	m£nd_back_fd
;

51 **
	mmigøti⁄_dom«me_r
;

54 
¸óã_domaö
(
domaö_¸óã
 *
dom_öfo
);

57 c⁄° 
	gßvefûehódî_magic
[32]=

60 #i‚de‡
LIBXL_HAVE_NO_SUSPEND_RESUME


61 c⁄° 
	gmigøã_ª˚ivî_b™√r
[]=

63 c⁄° 
	gmigøã_ª˚ivî_ªady
[]=

65 c⁄° 
	gmigøã_≥rmissi⁄_to_go
[]=

67 c⁄° 
	gmigøã_ªp‹t
[]=

79 
	#XL_MANDATORY_FLAG_JSON
 (1U << 0Ë

	)

80 
	#XL_MANDATORY_FLAG_STREAMv2
 (1U << 1Ë

	)

81 
	#XL_MANDATORY_FLAG_ALL
 (
XL_MANDATORY_FLAG_JSON
 | \

82 
XL_MANDATORY_FLAG_STREAMv2
)

	)

84 
	sßve_fûe_hódî
 {

85 
	mmagic
[32];

87 
uöt32_t
 
	mbyã‹dî
;

88 
uöt32_t
 
	mm™d©‹y_Êags
;

89 
uöt32_t
 
	m›ti⁄Æ_Êags
;

90 
uöt32_t
 
	m›ti⁄Æ_d©a_Àn
;

98 
	#SAVEFILE_BYTEORDER_VALUE
 ((
uöt32_t
)0x01020304UL)

	)

100 
ßve_domaö_c‹e_begö
(
uöt32_t
 
domid
,

101 c⁄° *
ovîride_c⁄fig_fûe
,

102 
uöt8_t
 **
c⁄fig_d©a_r
,

103 *
c⁄fig_Àn_r
);

104 
ßve_domaö_c‹e_wrôec⁄fig
(
fd
, c⁄° *
sour˚
,

105 c⁄° 
uöt8_t
 *
c⁄fig_d©a
, 
c⁄fig_Àn
);

114 
maö_v˝uli°
(
¨gc
, **
¨gv
);

115 
maö_öfo
(
¨gc
, **
¨gv
);

116 
maö_sh¨ög
(
¨gc
, **
¨gv
);

117 
maö_cd_eje˘
(
¨gc
, **
¨gv
);

118 
maö_cd_ö£π
(
¨gc
, **
¨gv
);

119 
maö_c⁄sﬁe
(
¨gc
, **
¨gv
);

120 
maö_vncvõwî
(
¨gc
, **
¨gv
);

121 
maö_pcûi°
(
¨gc
, **
¨gv
);

122 
maö_pcidëach
(
¨gc
, **
¨gv
);

123 
maö_pcüâach
(
¨gc
, **
¨gv
);

124 
maö_pcüssig«bÀ_add
(
¨gc
, **
¨gv
);

125 
maö_pcüssig«bÀ_ªmove
(
¨gc
, **
¨gv
);

126 
maö_pcüssig«bÀ_li°
(
¨gc
, **
¨gv
);

127 #i‚de‡
LIBXL_HAVE_NO_SUSPEND_RESUME


128 
maö_ª°‹e
(
¨gc
, **
¨gv
);

129 
maö_migøã_ª˚ive
(
¨gc
, **
¨gv
);

130 
maö_ßve
(
¨gc
, **
¨gv
);

131 
maö_migøã
(
¨gc
, **
¨gv
);

133 
maö_dump_c‹e
(
¨gc
, **
¨gv
);

134 
maö_∑u£
(
¨gc
, **
¨gv
);

135 
maö_u≈au£
(
¨gc
, **
¨gv
);

136 
maö_de°roy
(
¨gc
, **
¨gv
);

137 
maö_shutdown
(
¨gc
, **
¨gv
);

138 
maö_ªboŸ
(
¨gc
, **
¨gv
);

139 
maö_li°
(
¨gc
, **
¨gv
);

140 
maö_vm_li°
(
¨gc
, **
¨gv
);

141 
maö_¸óã
(
¨gc
, **
¨gv
);

142 
maö_c⁄fig_upd©e
(
¨gc
, **
¨gv
);

143 
maö_buâ⁄_¥ess
(
¨gc
, **
¨gv
);

144 
maö_v˝upö
(
¨gc
, **
¨gv
);

145 
maö_v˝u£t
(
¨gc
, **
¨gv
);

146 
maö_memmax
(
¨gc
, **
¨gv
);

147 
maö_mem£t
(
¨gc
, **
¨gv
);

148 
maö_sched_¸edô
(
¨gc
, **
¨gv
);

149 
maö_sched_¸edô2
(
¨gc
, **
¨gv
);

150 
maö_sched_πds
(
¨gc
, **
¨gv
);

151 
maö_domid
(
¨gc
, **
¨gv
);

152 
maö_dom«me
(
¨gc
, **
¨gv
);

153 
maö_ª«me
(
¨gc
, **
¨gv
);

154 
maö_åiggî
(
¨gc
, **
¨gv
);

155 
maö_sy§q
(
¨gc
, **
¨gv
);

156 
maö_debug_keys
(
¨gc
, **
¨gv
);

157 
maö_£t_∑ømëîs
(
¨gc
, **
¨gv
);

158 
maö_dmesg
(
¨gc
, **
¨gv
);

159 
maö_t›
(
¨gc
, **
¨gv
);

160 
maö_√tw‹k©èch
(
¨gc
, **
¨gv
);

161 
maö_√tw‹kli°
(
¨gc
, **
¨gv
);

162 
maö_√tw‹kdëach
(
¨gc
, **
¨gv
);

163 
maö_ch™√Œi°
(
¨gc
, **
¨gv
);

164 
maö_block©èch
(
¨gc
, **
¨gv
);

165 
maö_blockli°
(
¨gc
, **
¨gv
);

166 
maö_blockdëach
(
¨gc
, **
¨gv
);

167 
maö_vçm©èch
(
¨gc
, **
¨gv
);

168 
maö_vçmli°
(
¨gc
, **
¨gv
);

169 
maö_vçmdëach
(
¨gc
, **
¨gv
);

170 
maö_vdi•œâach
(
¨gc
, **
¨gv
);

171 
maö_vdi•Œi°
(
¨gc
, **
¨gv
);

172 
maö_vdi•ldëach
(
¨gc
, **
¨gv
);

173 
maö_usb˘æ_©èch
(
¨gc
, **
¨gv
);

174 
maö_usb˘æ_dëach
(
¨gc
, **
¨gv
);

175 
maö_usbdev_©èch
(
¨gc
, **
¨gv
);

176 
maö_usbdev_dëach
(
¨gc
, **
¨gv
);

177 
maö_usbli°
(
¨gc
, **
¨gv
);

178 
maö_u±ime
(
¨gc
, **
¨gv
);

179 
maö_˛aims
(
¨gc
, **
¨gv
);

180 
maö_tmem_li°
(
¨gc
, **
¨gv
);

181 
maö_tmem_‰ìze
(
¨gc
, **
¨gv
);

182 
maö_tmem_thaw
(
¨gc
, **
¨gv
);

183 
maö_tmem_£t
(
¨gc
, **
¨gv
);

184 
maö_tmem_sh¨ed_auth
(
¨gc
, **
¨gv
);

185 
maö_tmem_‰ìabÀ
(
¨gc
, **
¨gv
);

186 
maö_√tw‹k2©èch
(
¨gc
, **
¨gv
);

187 
maö_√tw‹k2li°
(
¨gc
, **
¨gv
);

188 
maö_√tw‹k2dëach
(
¨gc
, **
¨gv
);

189 
maö_˝upoﬁ¸óã
(
¨gc
, **
¨gv
);

190 
maö_˝upoﬁli°
(
¨gc
, **
¨gv
);

191 
maö_˝upoﬁde°roy
(
¨gc
, **
¨gv
);

192 
maö_˝upoﬁª«me
(
¨gc
, **
¨gv
);

193 
maö_˝upoﬁ˝uadd
(
¨gc
, **
¨gv
);

194 
maö_˝upoﬁ˝uªmove
(
¨gc
, **
¨gv
);

195 
maö_˝upoﬁmigøã
(
¨gc
, **
¨gv
);

196 
maö_˝upoﬁnuma•lô
(
¨gc
, **
¨gv
);

197 
maö_gëíf‹˚
(
¨gc
, **
¨gv
);

198 
maö_£ãnf‹˚
(
¨gc
, **
¨gv
);

199 
maö_lﬂdpﬁicy
(
¨gc
, **
¨gv
);

200 #i‚de‡
LIBXL_HAVE_NO_SUSPEND_RESUME


201 
maö_ªmus
(
¨gc
, **
¨gv
);

203 
maö_devd
(
¨gc
, **
¨gv
);

204 #i‡
deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

205 
maö_p§_hwöfo
(
¨gc
, **
¨gv
);

206 
maö_p§_cmt_©èch
(
¨gc
, **
¨gv
);

207 
maö_p§_cmt_dëach
(
¨gc
, **
¨gv
);

208 
maö_p§_cmt_show
(
¨gc
, **
¨gv
);

209 
maö_p§_ˇt_cbm_£t
(
¨gc
, **
¨gv
);

210 
maö_p§_ˇt_show
(
¨gc
, **
¨gv
);

211 
maö_p§_mba_£t
(
¨gc
, **
¨gv
);

212 
maö_p§_mba_show
(
¨gc
, **
¨gv
);

214 
maö_qemu_m⁄ô‹_comm™d
(
¨gc
, **
¨gv
);

216 
hñp
(c⁄° *
comm™d
);

218 c⁄° *
comm⁄_dom«me
;

219 
cmd_•ec
 
cmd_èbÀ
[];

220 
cmdèbÀ_Àn
;

222 
cmd_•ec
 *
cmdèbÀ_lookup
(c⁄° *
s
);

224 
libxl_˘x
 *
˘x
;

225 
xítoﬁlog_loggî_°dio°ªam
 *
loggî
;

226 
logfûe
;

228 
xl_˘x_Æloc
();

234 
pid_t
 
	mpid
;

235 
	mª≠ed
;

236 
	m°©us
;

237 c⁄° *
	mdes¸ùti⁄
;

238 } 
	txlchûd
;

241 
	mchûd_c⁄sﬁe
, 
	mchûd_waôd´m⁄
, 
	mchûd_migøti⁄
, 
	mchûd_vncvõwî
,

242 
	mchûd_max


243 } 
	txlchûdnum
;

245 
xlchûd
 
chûdªn
[
chûd_max
];

247 
pid_t
 
xl_f‹k
(
xlchûdnum
, c⁄° *
des¸ùti⁄
);

249 
po°f‹k
();

252 
pid_t
 
xl_waôpid
(
xlchûdnum
, *
°©us
, 
Êags
);

254 
xl_chûd_pid
(
xlchûdnum
);

256 
xl_ªp‹t_chûd_exô°©us
(
xítoﬁlog_Àvñ
 
Àvñ
,

257 
xlchûdnum
 
chûd
, 
pid_t
 
pid
, 
°©us
);

260 
chûd_ªp‹t
(
xlchûdnum
 
chûd
);

265 
autobÆlo⁄
;

266 
run_hŸ∂ug_s¸ùts
;

267 
dryrun_⁄ly
;

268 
˛aim_mode
;

269 
boﬁ
 
¥ogªss_u£_¸
;

270 
xítoﬁlog_Àvñ
 
mömsgÀvñ
;

271 
	#mömsgÀvñ_deÁu…
 
XTL_PROGRESS


	)

272 *
lockfûe
;

273 *
deÁu…_vifs¸ùt
;

274 *
deÁu…_bridge
;

275 *
deÁu…_g©ewaydev
;

276 *
deÁu…_vifbackíd
;

277 *
deÁu…_ªmus_√tbufs¸ùt
;

278 *
deÁu…_cﬁo_¥oxy_s¸ùt
;

279 *
blkdev_°¨t
;

280 
max_gø¡_‰ames
;

281 
max_m≠åack_‰ames
;

283 
	eouçut_f‹m©
 {

284 
	mOUTPUT_FORMAT_JSON
,

285 
	mOUTPUT_FORMAT_SXP
,

287 
ouçut_f‹m©
 
deÁu…_ouçut_f‹m©
;

290 
	mDOMAIN_RESTART_NONE
 = 0,

291 
	mDOMAIN_RESTART_NORMAL
,

292 
	mDOMAIN_RESTART_RENAME
,

293 
	mDOMAIN_RESTART_SOFT_RESET
,

294 } 
	tdomaö_ª°¨t_ty≥
;

296 
¥ötf_öfo_£xp
(
domid
, 
libxl_domaö_c⁄fig
 *
d_c⁄fig
, 
FILE
 *
fh
);

298 
	#XL_GLOBAL_CONFIG
 
XEN_CONFIG_DIR
 "/xl.c⁄f"

	)

299 
	#XL_LOCK_FILE
 
XEN_LOCK_DIR
 "/xl"

	)

	@xl_block.c

15 
	~<°dlib.h
>

17 
	~<libxl.h
>

18 
	~<libxl_utûs.h
>

19 
	~<libxlutû.h
>

21 
	~"xl.h
"

22 
	~"xl_utûs.h
"

23 
	~"xl_∑r£.h
"

25 
	$maö_block©èch
(
¨gc
, **
¨gv
)

27 
›t
;

28 
uöt32_t
 
„_domid
;

29 
libxl_devi˚_disk
 
disk
;

30 
XLU_C⁄fig
 *
c⁄fig
 = 0;

32 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "block-attach", 2) {

36 i‡(
	`libxl_domaö_quÆifõr_to_domid
(
˘x
, 
¨gv
[
›töd
], &
„_domid
) < 0) {

37 
	`Ârötf
(
°dîr
, "%†i†™ invÆid domaö idítifõr\n", 
¨gv
[
›töd
]);

40 
›töd
++;

42 
∑r£_disk_c⁄fig_mu…i°rög


43 (&
c⁄fig
, 
¨gc
-
›töd
, (c⁄° * c⁄°*)
¨gv
 + o±öd, &
disk
);

45 i‡(
dryrun_⁄ly
) {

46 *
js⁄
 = 
	`libxl_devi˚_disk_to_js⁄
(
˘x
, &
disk
);

47 
	`¥ötf
("disk: %s\n", 
js⁄
);

48 
	`‰ì
(
js⁄
);

49 i‡(
	`„º‹
(
°dout
Ë|| 
	`fÊush
(°dout)Ë{ 
	`≥º‹
("°dout"); 
	`exô
(-1); }

53 i‡(
	`libxl_devi˚_disk_add
(
˘x
, 
„_domid
, &
disk
, 0)) {

54 
	`Ârötf
(
°dîr
, "libxl_device_disk_add failed.\n");

58 
	}
}

60 
	$maö_blockli°
(
¨gc
, **
¨gv
)

62 
›t
;

63 
i
, 
nb
;

64 
libxl_devi˚_disk
 *
disks
;

65 
libxl_disköfo
 
disköfo
;

67 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "block-list", 1) {

71 
	`¥ötf
("%-5s %-3s %-6s %-5s %-6s %-8s %-30s\n",

73 
¨gv
 +
›töd
, 
¨gc
 -= optind;árgc > 0; --argc, ++argv) {

74 
uöt32_t
 
domid
;

75 i‡(
	`libxl_domaö_quÆifõr_to_domid
(
˘x
, *
¨gv
, &
domid
) < 0) {

76 
	`Ârötf
(
°dîr
, "%†i†™ invÆid domaö idítifõr\n", *
¨gv
);

79 
disks
 = 
	`libxl_devi˚_disk_li°
(
˘x
, 
domid
, &
nb
);

80 i‡(!
disks
) {

83 
i
=0; i<
nb
; i++) {

84 i‡(!
	`libxl_devi˚_disk_gëöfo
(
˘x
, 
domid
, &
disks
[
i
], &
disköfo
)) {

86 
	`¥ötf
("%-5d %-3d %-6d %-5d %-6d %-8d %-30s\n",

87 
disköfo
.
devid
, disköfo.
backíd_id
, disköfo.
‰⁄ãnd_id
,

88 
disköfo
.
°©e
, disköfo.
evtch
, disköfo.
ºef
, disköfo.
backíd
);

89 
	`libxl_disköfo_di•o£
(&
disköfo
);

92 
	`libxl_devi˚_disk_li°_‰ì
(
disks
, 
nb
);

95 
	}
}

97 
	$maö_blockdëach
(
¨gc
, **
¨gv
)

99 
uöt32_t
 
domid
;

100 
›t
, 
rc
 = 0;

101 
libxl_devi˚_disk
 
disk
;

103 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "block-detach", 2) {

107 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

109 i‡(
	`libxl_vdev_to_devi˚_disk
(
˘x
, 
domid
, 
¨gv
[
›töd
+1], &
disk
)) {

110 
	`Ârötf
(
°dîr
, "Eº‹: Devi˚ %†nŸ c⁄√˘ed.\n", 
¨gv
[
›töd
+1]);

113 
rc
 = 
	`libxl_devi˚_disk_ªmove
(
˘x
, 
domid
, &
disk
, 0);

114 i‡(
rc
) {

115 
	`Ârötf
(
°dîr
, "libxl_device_disk_remove failed.\n");

118 
	`libxl_devi˚_disk_di•o£
(&
disk
);

119  
rc
;

120 
	}
}

	@xl_cdrom.c

15 
	~<°dlib.h
>

16 
	~<sys/ty≥s.h
>

17 
	~<sys/°©.h
>

18 
	~<uni°d.h
>

20 
	~<libxl.h
>

21 
	~<libxl_utûs.h
>

22 
	~<libxlutû.h
>

24 
	~"xl.h
"

25 
	~"xl_utûs.h
"

26 
	~"xl_∑r£.h
"

28 
	$cd_ö£π
(
uöt32_t
 
domid
, c⁄° *
vútdev
, *
phys
)

30 
libxl_devi˚_disk
 
disk
;

31 *
buf
 = 
NULL
;

32 
XLU_C⁄fig
 *
c⁄fig
 = 0;

33 
°©
 
b
;

34 
r
;

36 
	`xa•rötf
(&
buf
, "vdev=%s,access=r,devtype=cdrom,target=%s",

37 
vútdev
, 
phys
 ?Öhys : "");

39 
	`∑r£_disk_c⁄fig
(&
c⁄fig
, 
buf
, &
disk
);

46 i‡(
disk
.
f‹m©
 !
LIBXL_DISK_FORMAT_EMPTY


47 && 
	`°©
(
disk
.
pdev_∑th
, &
b
)) {

48 
	`Ârötf
(
°dîr
, "Cannot stat file: %s\n",

49 
disk
.
pdev_∑th
);

50 
r
 = 1;

51 
out
;

54 i‡(
	`libxl_cdrom_ö£π
(
˘x
, 
domid
, &
disk
, 
NULL
)) {

55 
r
 = 1;

56 
out
;

59 
r
 = 0;

61 
out
:

62 
	`libxl_devi˚_disk_di•o£
(&
disk
);

63 
	`‰ì
(
buf
);

65  
r
;

66 
	}
}

68 
	$maö_cd_eje˘
(
¨gc
, **
¨gv
)

70 
uöt32_t
 
domid
;

71 
›t
 = 0;

72 c⁄° *
vútdev
;

74 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "cd-eject", 2) {

78 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

79 
vútdev
 = 
¨gv
[
›töd
 + 1];

81 i‡(
	`cd_ö£π
(
domid
, 
vútdev
, 
NULL
))

82  
EXIT_FAILURE
;

84  
EXIT_SUCCESS
;

85 
	}
}

87 
	$maö_cd_ö£π
(
¨gc
, **
¨gv
)

89 
uöt32_t
 
domid
;

90 
›t
 = 0;

91 c⁄° *
vútdev
;

92 *
fûe
 = 
NULL
;

94 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "cd-insert", 3) {

98 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

99 
vútdev
 = 
¨gv
[
›töd
 + 1];

100 
fûe
 = 
¨gv
[
›töd
 + 2];

102 i‡(
	`cd_ö£π
(
domid
, 
vútdev
, 
fûe
))

103  
EXIT_FAILURE
;

105  
EXIT_SUCCESS
;

106 
	}
}

	@xl_cmdtable.c

15 
	~<°rög.h
>

17 
	~<libxl.h
>

18 
	~"xl.h
"

20 
cmd_•ec
 
	gcmd_èbÀ
[] = {

22 &
maö_¸óã
, 1, 1,

40 &
maö_c⁄fig_upd©e
, 1, 1,

51 &
maö_li°
, 0, 0,

61 &
maö_de°roy
, 0, 1,

69 &
maö_shutdown
, 0, 1,

79 &
maö_ªboŸ
, 0, 1,

89 &
maö_pcüâach
, 0, 1,

94 &
maö_pcidëach
, 0, 1,

99 &
maö_pcûi°
, 0, 0,

104 &
maö_pcüssig«bÀ_add
, 0, 1,

110 &
maö_pcüssig«bÀ_ªmove
, 0, 1,

118 &
maö_pcüssig«bÀ_li°
, 0, 0,

123 &
maö_∑u£
, 0, 1,

128 &
maö_u≈au£
, 0, 1,

133 &
maö_c⁄sﬁe
, 0, 0,

140 &
maö_vncvõwî
, 0, 0,

147 #i‚de‡
LIBXL_HAVE_NO_SUSPEND_RESUME


149 &
maö_ßve
, 0, 1,

157 &
maö_migøã
, 0, 1,

171 &
maö_ª°‹e
, 0, 1,

182 &
maö_migøã_ª˚ive
, 0, 1,

188 &
maö_dump_c‹e
, 0, 1,

193 &
maö_cd_ö£π
, 1, 1,

198 &
maö_cd_eje˘
, 1, 1,

203 &
maö_memmax
, 0, 1,

208 &
maö_mem£t
, 0, 1,

213 &
maö_buâ⁄_¥ess
, 0, 1,

219 &
maö_v˝uli°
, 0, 0,

224 &
maö_v˝upö
, 1, 1,

230 &
maö_v˝u£t
, 0, 1,

236 &
maö_vm_li°
, 0, 0,

241 &
maö_öfo
, 0, 0,

246 &
maö_sh¨ög
, 0, 0,

251 &
maö_sched_¸edô
, 0, 1,

264 &
maö_sched_¸edô2
, 0, 1,

275 &
maö_sched_πds
, 0, 1,

286 &
maö_domid
, 0, 0,

291 &
maö_dom«me
, 0, 0,

296 &
maö_ª«me
, 0, 1,

301 &
maö_åiggî
, 0, 1,

306 &
maö_sy§q
, 0, 1,

311 &
maö_debug_keys
, 0, 1,

316 &
maö_£t_∑ømëîs
, 0, 1,

321 &
maö_dmesg
, 0, 0,

327 &
maö_t›
, 0, 0,

332 &
maö_√tw‹k©èch
, 1, 1,

339 &
maö_√tw‹kli°
, 0, 0,

344 &
maö_√tw‹kdëach
, 0, 1,

349 &
maö_ch™√Œi°
, 0, 0,

354 &
maö_block©èch
, 1, 1,

359 &
maö_blockli°
, 0, 0,

364 &
maö_blockdëach
, 0, 1,

369 &
maö_vçm©èch
, 1, 1,

374 &
maö_vçmli°
, 0, 0,

379 &
maö_vçmdëach
, 0, 1,

384 &
maö_vdi•œâach
, 1, 1,

393 &
maö_vdi•Œi°
, 0, 0,

398 &
maö_vdi•ldëach
, 0, 1,

403 &
maö_u±ime
, 0, 0,

408 &
maö_˛aims
, 0, 0,

414 &
maö_tmem_li°
, 0, 0,

420 &
maö_tmem_‰ìze
, 0, 1,

426 &
maö_tmem_thaw
, 0, 1,

432 &
maö_tmem_£t
, 0, 1,

440 &
maö_tmem_sh¨ed_auth
, 0, 1,

449 &
maö_tmem_‰ìabÀ
, 0, 0,

454 &
maö_˝upoﬁ¸óã
, 1, 1,

465 &
maö_˝upoﬁli°
, 0, 0,

471 &
maö_˝upoﬁde°roy
, 0, 1,

476 &
maö_˝upoﬁª«me
, 0, 1,

481 &
maö_˝upoﬁ˝uadd
, 0, 1,

486 &
maö_˝upoﬁ˝uªmove
, 0, 1,

491 &
maö_˝upoﬁmigøã
, 0, 1,

496 &
maö_˝upoﬁnuma•lô
, 0, 1,

501 &
maö_gëíf‹˚
, 0, 0,

506 &
maö_£ãnf‹˚
, 0, 1,

511 &
maö_lﬂdpﬁicy
, 0, 1,

515 #i‚de‡
LIBXL_HAVE_NO_SUSPEND_RESUME


517 &
maö_ªmus
, 0, 1,

541 &
maö_devd
, 0, 1,

547 #i‡
deföed
(
__i386__
Ë|| deföed(
__x86_64__
)

549 &
maö_p§_hwöfo
, 0, 1,

557 &
maö_p§_cmt_©èch
, 0, 1,

562 &
maö_p§_cmt_dëach
, 0, 1,

567 &
maö_p§_cmt_show
, 0, 1,

576 &
maö_p§_ˇt_cbm_£t
, 0, 1,

585 &
maö_p§_ˇt_show
, 0, 1,

591 &
maö_p§_mba_£t
, 0, 1,

597 &
maö_p§_mba_show
, 0, 1,

603 &
maö_usb˘æ_©èch
, 0, 1,

608 &
maö_usb˘æ_dëach
, 0, 1,

613 &
maö_usbdev_©èch
, 0, 1,

618 &
maö_usbdev_dëach
, 0, 1,

623 &
maö_usbli°
, 0, 0,

628 &
maö_qemu_m⁄ô‹_comm™d
, 0, 1,

634 
	gcmdèbÀ_Àn
 = (
cmd_èbÀ
)/(
cmd_•ec
);

637 
cmd_•ec
 *
	$cmdèbÀ_lookup
(c⁄° *
s
)

639 
cmd_•ec
 *
cmd
 = 
NULL
;

640 
size_t
 
Àn
;

641 
i
, 
cou¡
 = 0;

643 i‡(!
s
)

644  
NULL
;

645 
Àn
 = 
	`°æí
(
s
);

646 
i
 = 0; i < 
cmdèbÀ_Àn
; i++) {

647 i‡(!
	`°∫cmp
(
s
, 
cmd_èbÀ
[
i
].
cmd_«me
, 
Àn
)) {

648 
cmd
 = &
cmd_èbÀ
[
i
];

650 i‡(
Àn
 =
	`°æí
(
cmd
->
cmd_«me
))

651  
cmd
;

652 
cou¡
++;

655  (
cou¡
 =1Ë? 
cmd
 : 
NULL
;

656 
	}
}

	@xl_console.c

15 
	~<°dlib.h
>

17 
	~<libxl.h
>

18 
	~<libxl_utûs.h
>

19 
	~<libxlutû.h
>

21 
	~"xl.h
"

22 
	~"xl_utûs.h
"

23 
	~"xl_∑r£.h
"

25 
	$maö_c⁄sﬁe
(
¨gc
, **
¨gv
)

27 
uöt32_t
 
domid
;

28 
›t
 = 0, 
num
 = 0;

29 
libxl_c⁄sﬁe_ty≥
 
ty≥
 = 0;

30 *
c⁄sﬁe_«mes
 = "pv, serial, vuart";

32 
	`SWITCH_FOREACH_OPT
(
›t
, "n:t:", 
NULL
, "console", 1) {

34 i‡(!
	`°rcmp
(
›èrg
, "pv"))

35 
ty≥
 = 
LIBXL_CONSOLE_TYPE_PV
;

36 i‡(!
	`°rcmp
(
›èrg
, "serial"))

37 
ty≥
 = 
LIBXL_CONSOLE_TYPE_SERIAL
;

38 i‡(!
	`°rcmp
(
›èrg
, "vuart"))

39 
ty≥
 = 
LIBXL_CONSOLE_TYPE_VUART
;

41 
	`Ârötf
(
°dîr
, "c⁄sﬁêty≥ suµ‹ãdáª: %s\n", 
c⁄sﬁe_«mes
);

42  
EXIT_FAILURE
;

46 
num
 = 
	`©oi
(
›èrg
);

50 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

51 i‡(!
ty≥
)

52 
	`libxl_¥im¨y_c⁄sﬁe_exec
(
˘x
, 
domid
, -1);

54 
	`libxl_c⁄sﬁe_exec
(
˘x
, 
domid
, 
num
, 
ty≥
, -1);

55 
	`Ârötf
(
°dîr
, "UnableÅoáttach console\n");

56  
EXIT_FAILURE
;

57 
	}
}

59 
	$maö_vncvõwî
(
¨gc
, **
¨gv
)

61 c⁄° 
›ti⁄
 
›ts
[] = {

64 
COMMON_LONG_OPTS


66 
uöt32_t
 
domid
;

67 
›t
, 
aut›ass
 = 0;

69 
	`SWITCH_FOREACH_OPT
(
›t
, "a", 
›ts
, "vncviewer", 1) {

71 
aut›ass
 = 1;

75 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

77 
	`libxl_vncvõwî_exec
(
˘x
, 
domid
, 
aut›ass
);

79  
EXIT_FAILURE
;

80 
	}
}

83 
	$maö_ch™√Œi°
(
¨gc
, **
¨gv
)

85 
›t
;

86 
libxl_devi˚_ch™√l
 *
ch™√ls
;

87 
libxl_ch™√löfo
 
ch™√löfo
;

88 
nb
, 
i
;

90 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "channel-list", 1) {

95 
	`¥ötf
("%-3s %-2s %-5s %-6s %8s %-10s %-30s\n",

97 
¨gv
 +
›töd
, 
¨gc
 -= optind;árgc > 0; --argc, ++argv) {

98 
uöt32_t
 
domid
 = 
	`föd_domaö
(*
¨gv
);

99 
ch™√ls
 = 
	`libxl_devi˚_ch™√l_li°
(
˘x
, 
domid
, &
nb
);

100 i‡(!
ch™√ls
)

102 
i
 = 0; i < 
nb
; ++i) {

103 i‡(!
	`libxl_devi˚_ch™√l_gëöfo
(
˘x
, 
domid
, &
ch™√ls
[
i
],

104 &
ch™√löfo
)) {

105 
	`¥ötf
("%-3d %-2d ", 
ch™√ls
[
i
].
devid
, 
ch™√löfo
.
backíd_id
);

106 
	`¥ötf
("%-5d ", 
ch™√löfo
.
°©e
);

107 
	`¥ötf
("%-6d %-8d ", 
ch™√löfo
.
evtch
, ch™√löfo.
ºef
);

108 
	`¥ötf
("%-10†", 
	`libxl_ch™√l_c⁄√˘i⁄_to_°rög
(

109 
ch™√ls
[
i
].
c⁄√˘i⁄
));

110 
ch™√ls
[
i
].
c⁄√˘i⁄
) {

111 
LIBXL_CHANNEL_CONNECTION_PTY
:

112 
	`¥ötf
("%-30†", 
ch™√löfo
.
u
.
±y
.
∑th
);

117 
	`¥ötf
("\n");

118 
	`libxl_ch™√löfo_di•o£
(&
ch™√löfo
);

120 
	`libxl_devi˚_ch™√l_di•o£
(&
ch™√ls
[
i
]);

122 
	`‰ì
(
ch™√ls
);

125 
	}
}

	@xl_cpupool.c

15 
	~<limôs.h
>

16 
	~<°dlib.h
>

17 
	~<uni°d.h
>

19 
	~<libxl.h
>

20 
	~<libxl_utûs.h
>

21 
	~<libxlutû.h
>

23 
	~"xl.h
"

24 
	~"xl_utûs.h
"

25 
	~"xl_∑r£.h
"

27 
	$maö_˝upoﬁ¸óã
(
¨gc
, **
¨gv
)

29 c⁄° *
fûíame
 = 
NULL
, *
c⁄fig_§c
=NULL;

30 c⁄° *
p
;

31 *
exåa_c⁄fig
 = 
NULL
;

32 
›t
;

33 
›ti⁄
 
›ts
[] = {

36 
COMMON_LONG_OPTS


38 
ªt
;

39 *
c⁄fig_d©a
 = 0;

40 
c⁄fig_Àn
 = 0;

41 
XLU_C⁄fig
 *
c⁄fig
;

42 c⁄° *
buf
;

43 *
«me
 = 
NULL
;

44 
uöt32_t
 
poﬁid
;

45 
libxl_scheduÀr
 
sched
 = 0;

46 
XLU_C⁄figLi°
 *
˝us
;

47 
XLU_C⁄figLi°
 *
nodes
;

48 
n_˝us
, 
n_nodes
, 
i
, 
n
;

49 
libxl_bôm≠
 
‰ìm≠
;

50 
libxl_bôm≠
 
˝um≠
;

51 
libxl_uuid
 
uuid
;

52 
libxl_˝ut›ﬁogy
 *
t›ﬁogy
;

53 
rc
 = 
EXIT_FAILURE
;

55 
	`SWITCH_FOREACH_OPT
(
›t
, "nf:", 
›ts
, "cpupool-create", 0) {

57 
fûíame
 = 
›èrg
;

60 
dryrun_⁄ly
 = 1;

64 
	`libxl_bôm≠_öô
(&
‰ìm≠
);

65 
	`libxl_bôm≠_öô
(&
˝um≠
);

67 
›töd
 < 
¨gc
) {

68 i‡((
p
 = 
	`°rchr
(
¨gv
[
›töd
], '='))) {

69 
	`°rög_ªÆloc_≠≥nd
(&
exåa_c⁄fig
, "\n");

70 
	`°rög_ªÆloc_≠≥nd
(&
exåa_c⁄fig
, 
¨gv
[
›töd
]);

71 } i‡(!
fûíame
) {

72 
fûíame
 = 
¨gv
[
›töd
];

74 
	`hñp
("cpupool-create");

75 
out
;

77 
›töd
++;

80 i‡(
fûíame
)

82 i‡(
	`libxl_ªad_fûe_c⁄ã¡s
(
˘x
, 
fûíame
, (**)&
c⁄fig_d©a
,

83 &
c⁄fig_Àn
)) {

84 
	`Ârötf
(
°dîr
, "FailedÅoÑead config file: %s: %s\n",

85 
fûíame
, 
	`°ªº‹
(
î∫o
));

86 
out
;

88 
c⁄fig_§c
=
fûíame
;

91 
c⁄fig_§c
="commandÜine";

93 i‡(
exåa_c⁄fig
 && 
	`°æí
(extra_config)) {

94 i‡(
c⁄fig_Àn
 > 
INT_MAX
 - (
	`°æí
(
exåa_c⁄fig
) + 2)) {

95 
	`Ârötf
(
°dîr
, "FailedÅoáttachÉxtra configuration\n");

96 
out
;

98 
c⁄fig_d©a
 = 
	`xªÆloc
(config_data,

99 
c⁄fig_Àn
 + 
	`°æí
(
exåa_c⁄fig
) + 2);

100 i‡(!
c⁄fig_d©a
) {

101 
	`Ârötf
(
°dîr
, "FailedÅoÑealloc config_data\n");

102 
out
;

104 
c⁄fig_d©a
[
c⁄fig_Àn
] = 0;

105 
	`°rˇt
(
c⁄fig_d©a
, 
exåa_c⁄fig
);

106 
	`°rˇt
(
c⁄fig_d©a
, "\n");

107 
c⁄fig_Àn
 +
	`°æí
(
exåa_c⁄fig
) + 1;

110 
c⁄fig
 = 
	`xlu_cfg_öô
(
°dîr
, 
c⁄fig_§c
);

111 i‡(!
c⁄fig
) {

112 
	`Ârötf
(
°dîr
, "FailedÅoállocate for configuration\n");

113 
out
;

116 
ªt
 = 
	`xlu_cfg_ªadd©a
(
c⁄fig
, 
c⁄fig_d©a
, 
c⁄fig_Àn
);

117 i‡(
ªt
) {

118 
	`Ârötf
(
°dîr
, "FaûedÅÿ∑r£ c⁄fig fûe: %s\n", 
	`°ªº‹
(
ªt
));

119 
out_cfg
;

122 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "«me", &
buf
, 0))

123 
«me
 = 
	`°rdup
(
buf
);

124 i‡(
fûíame
)

125 
«me
 = 
	`libxl_ba£«me
(
fûíame
);

127 
	`Ârötf
(
°dîr
, "Missing cpupoolÇame!\n");

128 
out_cfg
;

130 i‡(!
	`libxl_«me_to_˝upoﬁid
(
˘x
, 
«me
, &
poﬁid
)) {

131 
	`Ârötf
(
°dîr
, "PoﬁÇamê\"%s\"áÃódyÉxi°s\n", 
«me
);

132 
out_cfg
;

135 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "sched", &
buf
, 0)) {

136 i‡((
	`libxl_scheduÀr_‰om_°rög
(
buf
, &
sched
)) < 0) {

137 
	`Ârötf
(
°dîr
, "Unknown scheduler\n");

138 
out_cfg
;

141 
rc
 = 
	`libxl_gë_scheduÀr
(
˘x
);

142 i‡(
rc
 < 0) {

143 
	`Ârötf
(
°dîr
, "get_scheduler sysctl failed.\n");

144 
out_cfg
;

146 
sched
 = 
rc
;

149 i‡(
	`libxl_gë_‰ì˝us
(
˘x
, &
‰ìm≠
)) {

150 
	`Ârötf
(
°dîr
, "libxl_get_freecpus failed\n");

151 
out_cfg
;

153 i‡(
	`libxl_˝u_bôm≠_Æloc
(
˘x
, &
˝um≠
, 0)) {

154 
	`Ârötf
(
°dîr
, "FailedÅoállocate cpumap\n");

155 
out_cfg
;

157 i‡(!
	`xlu_cfg_gë_li°
(
c⁄fig
, "nodes", &
nodes
, 0, 0)) {

158 
ƒ
;

159 
n_˝us
 = 0;

160 
n_nodes
 = 0;

161 
t›ﬁogy
 = 
	`libxl_gë_˝u_t›ﬁogy
(
˘x
, &
ƒ
);

162 i‡(
t›ﬁogy
 =
NULL
) {

163 
	`Ârötf
(
°dîr
, "libxl_get_topologyinfo failed\n");

164 
out_cfg
;

166 (
buf
 = 
	`xlu_cfg_gë_li°ôem
(
nodes
, 
n_nodes
)Ë!
NULL
) {

167 
n
 = 
	`©oi
(
buf
);

168 
i
 = 0; i < 
ƒ
; i++) {

169 i‡((
t›ﬁogy
[
i
].
node
 =
n
) &&

170 
	`libxl_bôm≠_ã°
(&
‰ìm≠
, 
i
)) {

171 
	`libxl_bôm≠_£t
(&
˝um≠
, 
i
);

172 
n_˝us
++;

175 
n_nodes
++;

178 
	`libxl_˝ut›ﬁogy_li°_‰ì
(
t›ﬁogy
, 
ƒ
);

180 i‡(
n_˝us
 == 0) {

181 
	`Ârötf
(
°dîr
, "no free cpu found\n");

182 
out_cfg
;

184 } i‡(!
	`xlu_cfg_gë_li°
(
c⁄fig
, "˝us", &
˝us
, 0, 1)) {

185 
n_˝us
 = 0;

186 (
buf
 = 
	`xlu_cfg_gë_li°ôem
(
˝us
, 
n_˝us
)Ë!
NULL
) {

187 
i
 = 
	`©oi
(
buf
);

188 i‡((
i
 < 0Ë|| !
	`libxl_bôm≠_ã°
(&
‰ìm≠
, i)) {

189 
	`Ârötf
(
°dîr
, "˝u %d iŒegÆ o∏nŸ fªe\n", 
i
);

190 
out_cfg
;

192 
	`libxl_bôm≠_£t
(&
˝um≠
, 
i
);

193 
n_˝us
++;

195 } i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "˝us", &
buf
, 0)) {

196 i‡(
	`∑r£_˝uønge
(
buf
, &
˝um≠
))

197 
out_cfg
;

199 
n_˝us
 = 0;

200 
	`libxl_f‹_óch_£t_bô
(
i
, 
˝um≠
) {

201 i‡(!
	`libxl_bôm≠_ã°
(&
‰ìm≠
, 
i
)) {

202 
	`Ârötf
(
°dîr
, "˝u %d iŒegÆ o∏nŸ fªe\n", 
i
);

203 
out_cfg
;

205 
n_˝us
++;

208 
n_˝us
 = 0;

210 
	`libxl_uuid_gíî©e
(&
uuid
);

212 
	`¥ötf
("Usög c⁄fig fûê\"%s\"\n", 
c⁄fig_§c
);

213 
	`¥ötf
("˝upoﬁÇame: %s\n", 
«me
);

214 
	`¥ötf
("scheduÀr: %s\n", 
	`libxl_scheduÀr_to_°rög
(
sched
));

215 
	`¥ötf
("numbî o‡˝us: %d\n", 
n_˝us
);

217 i‡(!
dryrun_⁄ly
) {

218 
poﬁid
 = 
LIBXL_CPUPOOL_POOLID_ANY
;

219 i‡(
	`libxl_˝upoﬁ_¸óã
(
˘x
, 
«me
, 
sched
, 
˝um≠
, &
uuid
, &
poﬁid
)) {

220 
	`Ârötf
(
°dîr
, "error on creating cpupool\n");

221 
out_cfg
;

225 
rc
 = 
EXIT_SUCCESS
;

227 
out_cfg
:

228 
	`xlu_cfg_de°roy
(
c⁄fig
);

229 
out
:

230 
	`libxl_bôm≠_di•o£
(&
‰ìm≠
);

231 
	`libxl_bôm≠_di•o£
(&
˝um≠
);

232 
	`‰ì
(
«me
);

233 
	`‰ì
(
c⁄fig_d©a
);

234 
	`‰ì
(
exåa_c⁄fig
);

235  
rc
;

236 
	}
}

238 
	$maö_˝upoﬁli°
(
¨gc
, **
¨gv
)

240 
›t
;

241 
›ti⁄
 
›ts
[] = {

243 
COMMON_LONG_OPTS


245 
›t_˝us
 = 0;

246 c⁄° *
poﬁ
 = 
NULL
;

247 
libxl_˝upoﬁöfo
 *
poﬁöfo
;

248 
n_poﬁs
, 
p
, 
c
, 
n
;

249 
uöt32_t
 
poﬁid
;

250 *
«me
;

252 
	`SWITCH_FOREACH_OPT
(
›t
, "c", 
›ts
, "cpupool-list", 0) {

254 
›t_˝us
 = 1;

258 i‡(
›töd
 < 
¨gc
) {

259 
poﬁ
 = 
¨gv
[
›töd
];

260 i‡(
	`libxl_«me_to_˝upoﬁid
(
˘x
, 
poﬁ
, &
poﬁid
)) {

261 
	`Ârötf
(
°dîr
, "Poﬁ \'%s\' d€†nŸÉxi°\n", 
poﬁ
);

262  
EXIT_FAILURE
;

266 
poﬁöfo
 = 
	`libxl_li°_˝upoﬁ
(
˘x
, &
n_poﬁs
);

267 i‡(!
poﬁöfo
) {

268 
	`Ârötf
(
°dîr
, "error getting cpupool info\n");

269  
EXIT_FAILURE
;

272 
	`¥ötf
("%-19s", "Name");

273 i‡(
›t_˝us
)

274 
	`¥ötf
("CPUÜist\n");

276 
	`¥ötf
("CPUs Sched Active Domain count\n");

278 
p
 = 0;Ö < 
n_poﬁs
;Ö++) {

279 i‡(!
poﬁ
 || (
poﬁöfo
[
p
].
poﬁid
 ==Öoolid)) {

280 
«me
 = 
poﬁöfo
[
p
].
poﬁ_«me
;

281 
	`¥ötf
("%-19s", 
«me
);

282 
n
 = 0;

283 
	`libxl_f‹_óch_bô
(
c
, 
poﬁöfo
[
p
].
˝um≠
)

284 i‡(
	`libxl_bôm≠_ã°
(&
poﬁöfo
[
p
].
˝um≠
, 
c
)) {

285 i‡(
n
 && 
›t_˝us
Ë
	`¥ötf
(",");

286 i‡(
›t_˝us
Ë
	`¥ötf
("%d", 
c
);

287 
n
++;

289 i‡(!
›t_˝us
) {

290 
	`¥ötf
("%3d %9† y %4d", 
n
,

291 
	`libxl_scheduÀr_to_°rög
(
poﬁöfo
[
p
].
sched
),

292 
poﬁöfo
[
p
].
n_dom
);

294 
	`¥ötf
("\n");

298 
	`libxl_˝upoﬁöfo_li°_‰ì
(
poﬁöfo
, 
n_poﬁs
);

300  
EXIT_SUCCESS
;

301 
	}
}

303 
	$maö_˝upoﬁde°roy
(
¨gc
, **
¨gv
)

305 
›t
;

306 c⁄° *
poﬁ
;

307 
uöt32_t
 
poﬁid
;

309 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "cpupool-destroy", 1) {

313 
poﬁ
 = 
¨gv
[
›töd
];

315 i‡(
	`libxl_˝upoﬁ_quÆifõr_to_˝upoﬁid
(
˘x
, 
poﬁ
, &
poﬁid
, 
NULL
) ||

316 !
	`libxl_˝upoﬁid_is_vÆid
(
˘x
, 
poﬁid
)) {

317 
	`Ârötf
(
°dîr
, "unknow¿˝upoﬁ '%s'\n", 
poﬁ
);

318  
EXIT_FAILURE
;

321 i‡(
	`libxl_˝upoﬁ_de°roy
(
˘x
, 
poﬁid
)) {

322 
	`Ârötf
(
°dîr
, "C™'àde°roy cpupoﬁ '%s'\n", 
poﬁ
);

323  
EXIT_FAILURE
;

326  
EXIT_SUCCESS
;

327 
	}
}

329 
	$maö_˝upoﬁª«me
(
¨gc
, **
¨gv
)

331 
›t
;

332 c⁄° *
poﬁ
;

333 c⁄° *
√w_«me
;

334 
uöt32_t
 
poﬁid
;

336 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "cpupool-rename", 2) {

340 
poﬁ
 = 
¨gv
[
›töd
++];

342 i‡(
	`libxl_˝upoﬁ_quÆifõr_to_˝upoﬁid
(
˘x
, 
poﬁ
, &
poﬁid
, 
NULL
) ||

343 !
	`libxl_˝upoﬁid_is_vÆid
(
˘x
, 
poﬁid
)) {

344 
	`Ârötf
(
°dîr
, "unknow¿˝upoﬁ '%s'\n", 
poﬁ
);

345  
EXIT_FAILURE
;

348 
√w_«me
 = 
¨gv
[
›töd
];

350 i‡(
	`libxl_˝upoﬁ_ª«me
(
˘x
, 
√w_«me
, 
poﬁid
)) {

351 
	`Ârötf
(
°dîr
, "C™'àª«mê˝upoﬁ '%s'\n", 
poﬁ
);

352  
EXIT_FAILURE
;

355  
EXIT_SUCCESS
;

356 
	}
}

358 
	$maö_˝upoﬁ˝uadd
(
¨gc
, **
¨gv
)

360 
›t
;

361 c⁄° *
poﬁ
;

362 
uöt32_t
 
poﬁid
;

363 
libxl_bôm≠
 
˝um≠
;

364 
rc
 = 
EXIT_FAILURE
;

366 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "cpupool-cpu-add", 2) {

370 
	`libxl_bôm≠_öô
(&
˝um≠
);

371 i‡(
	`libxl_˝u_bôm≠_Æloc
(
˘x
, &
˝um≠
, 0)) {

372 
	`Ârötf
(
°dîr
, "UnableÅoállocate cpumap");

373  
EXIT_FAILURE
;

376 
poﬁ
 = 
¨gv
[
›töd
++];

377 i‡(
	`∑r£_˝uønge
(
¨gv
[
›töd
], &
˝um≠
))

378 
out
;

380 i‡(
	`libxl_˝upoﬁ_quÆifõr_to_˝upoﬁid
(
˘x
, 
poﬁ
, &
poﬁid
, 
NULL
) ||

381 !
	`libxl_˝upoﬁid_is_vÆid
(
˘x
, 
poﬁid
)) {

382 
	`Ârötf
(
°dîr
, "unknow¿˝upoﬁ \'%s\'\n", 
poﬁ
);

383 
out
;

386 i‡(
	`libxl_˝upoﬁ_˝uadd_˝um≠
(
˘x
, 
poﬁid
, &
˝um≠
))

387 
	`Ârötf
(
°dîr
, "somê˝u†mayÇŸ havêbì¿addedÅÿ%s\n", 
poﬁ
);

389 
rc
 = 
EXIT_SUCCESS
;

391 
out
:

392 
	`libxl_bôm≠_di•o£
(&
˝um≠
);

393  
rc
;

394 
	}
}

396 
	$maö_˝upoﬁ˝uªmove
(
¨gc
, **
¨gv
)

398 
›t
;

399 c⁄° *
poﬁ
;

400 
uöt32_t
 
poﬁid
;

401 
libxl_bôm≠
 
˝um≠
;

402 
rc
 = 
EXIT_FAILURE
;

404 
	`libxl_bôm≠_öô
(&
˝um≠
);

405 i‡(
	`libxl_˝u_bôm≠_Æloc
(
˘x
, &
˝um≠
, 0)) {

406 
	`Ârötf
(
°dîr
, "UnableÅoállocate cpumap");

407  
EXIT_FAILURE
;

410 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "cpupool-cpu-remove", 2) {

414 
poﬁ
 = 
¨gv
[
›töd
++];

415 i‡(
	`∑r£_˝uønge
(
¨gv
[
›töd
], &
˝um≠
))

416 
out
;

418 i‡(
	`libxl_˝upoﬁ_quÆifõr_to_˝upoﬁid
(
˘x
, 
poﬁ
, &
poﬁid
, 
NULL
) ||

419 !
	`libxl_˝upoﬁid_is_vÆid
(
˘x
, 
poﬁid
)) {

420 
	`Ârötf
(
°dîr
, "unknow¿˝upoﬁ \'%s\'\n", 
poﬁ
);

421 
out
;

424 i‡(
	`libxl_˝upoﬁ_˝uªmove_˝um≠
(
˘x
, 
poﬁid
, &
˝um≠
)) {

425 
	`Ârötf
(
°dîr
, "Somê˝u†may havênŸ o∏⁄lyÖ¨tüŒy bì¿ªmoved from '%s'.\n", 
poﬁ
);

426 
	`Ârötf
(
°dîr
, "I‡®˝u c™'àbêaddedÅÿ™Ÿhî cpupoﬁ,ádd iàtÿ'%s'ágaöándÑëry.\n", 
poﬁ
);

429 
rc
 = 
EXIT_SUCCESS
;

431 
out
:

432 
	`libxl_bôm≠_di•o£
(&
˝um≠
);

433  
rc
;

434 
	}
}

436 
	$maö_˝upoﬁmigøã
(
¨gc
, **
¨gv
)

438 
›t
;

439 c⁄° *
poﬁ
;

440 
uöt32_t
 
poﬁid
;

441 c⁄° *
dom
;

442 
uöt32_t
 
domid
;

444 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "cpupool-migrate", 2) {

448 
dom
 = 
¨gv
[
›töd
++];

449 
poﬁ
 = 
¨gv
[
›töd
];

451 i‡(
	`libxl_domaö_quÆifõr_to_domid
(
˘x
, 
dom
, &
domid
) ||

452 !
	`libxl_domid_to_«me
(
˘x
, 
domid
)) {

453 
	`Ârötf
(
°dîr
, "unknow¿domaö '%s'\n", 
dom
);

454  
EXIT_FAILURE
;

457 i‡(
	`libxl_˝upoﬁ_quÆifõr_to_˝upoﬁid
(
˘x
, 
poﬁ
, &
poﬁid
, 
NULL
) ||

458 !
	`libxl_˝upoﬁid_is_vÆid
(
˘x
, 
poﬁid
)) {

459 
	`Ârötf
(
°dîr
, "unknow¿˝upoﬁ '%s'\n", 
poﬁ
);

460  
EXIT_FAILURE
;

463 i‡(
	`libxl_˝upoﬁ_movedomaö
(
˘x
, 
poﬁid
, 
domid
))

464  
EXIT_FAILURE
;

466  
EXIT_SUCCESS
;

467 
	}
}

469 
	$maö_˝upoﬁnuma•lô
(
¨gc
, **
¨gv
)

471 
rc
;

472 
›t
;

473 
p
;

474 
c
;

475 
n
;

476 
uöt32_t
 
poﬁid
;

477 
libxl_scheduÀr
 
sched
;

478 
n_poﬁs
;

479 
node
;

480 
n_˝us
;

481 *
«me
 = 
NULL
;

482 
libxl_uuid
 
uuid
;

483 
libxl_bôm≠
 
˝um≠
;

484 
libxl_˝upoﬁöfo
 *
poﬁöfo
;

485 
libxl_˝ut›ﬁogy
 *
t›ﬁogy
;

486 
libxl_domöfo
 
öfo
;

488 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "cpupool-numa-split", 0) {

492 
	`libxl_domöfo_öô
(&
öfo
);

494 
rc
 = 
EXIT_FAILURE
;

496 
	`libxl_bôm≠_öô
(&
˝um≠
);

497 
poﬁöfo
 = 
	`libxl_li°_˝upoﬁ
(
˘x
, &
n_poﬁs
);

498 i‡(!
poﬁöfo
) {

499 
	`Ârötf
(
°dîr
, "error getting cpupool info\n");

500  
EXIT_FAILURE
;

502 
poﬁid
 = 
poﬁöfo
[0].poolid;

503 
sched
 = 
poﬁöfo
[0].sched;

504 
	`libxl_˝upoﬁöfo_li°_‰ì
(
poﬁöfo
, 
n_poﬁs
);

506 i‡(
n_poﬁs
 > 1) {

507 
	`Ârötf
(
°dîr
, "splittingÇotÖossible,álready cpupools in use\n");

508  
EXIT_FAILURE
;

511 
t›ﬁogy
 = 
	`libxl_gë_˝u_t›ﬁogy
(
˘x
, &
n_˝us
);

512 i‡(
t›ﬁogy
 =
NULL
) {

513 
	`Ârötf
(
°dîr
, "libxl_get_topologyinfo failed\n");

514  
EXIT_FAILURE
;

517 i‡(
	`libxl_˝u_bôm≠_Æloc
(
˘x
, &
˝um≠
, 0)) {

518 
	`Ârötf
(
°dîr
, "FailedÅoállocate cpumap\n");

519 
out
;

525 
node
 = 
t›ﬁogy
[0].node;

526 i‡(
	`libxl_˝upoﬁ_˝uadd_node
(
˘x
, 0, 
node
, &
n
)) {

527 
	`Ârötf
(
°dîr
, "error onádding cpuÅo Pool 0\n");

528 
out
;

531 
	`xa•rötf
(&
«me
, "Poﬁ-node%d", 
node
);

532 i‡(
	`libxl_˝upoﬁ_ª«me
(
˘x
, 
«me
, 0)) {

533 
	`Ârötf
(
°dîr
, "error onÑenaming Pool 0\n");

534 
out
;

537 
n
 = 0;

538 
c
 = 0; c < 
n_˝us
; c++) {

539 i‡(
t›ﬁogy
[
c
].
node
 ==Çode) {

540 
t›ﬁogy
[
c
].
node
 = 
LIBXL_CPUTOPOLOGY_INVALID_ENTRY
;

541 
	`libxl_bôm≠_£t
(&
˝um≠
, 
n
);

542 
n
++;

545 i‡(
	`libxl_domaö_öfo
(
˘x
, &
öfo
, 0)) {

546 
	`Ârötf
(
°dîr
, "error on getting info for Domain-0\n");

547 
out
;

549 i‡(
öfo
.
v˝u_⁄löe
 > 
n
 && 
	`libxl_£t_v˝u⁄löe
(
˘x
, 0, &
˝um≠
)) {

550 
	`Ârötf
(
°dîr
, "error onÑemoving vcpus for Domain-0\n");

551 
out
;

553 
c
 = 0; c < 10; c++) {

558 
	`libxl_domöfo_di•o£
(&
öfo
);

559 
	`libxl_domöfo_öô
(&
öfo
);

560 i‡(
	`libxl_domaö_öfo
(
˘x
, &
öfo
, 0)) {

561 
	`Ârötf
(
°dîr
, "error on getting info for Domain-0\n");

562 
out
;

564 i‡(
öfo
.
v˝u_⁄löe
 <
n
) {

567 
	`¶ìp
(1);

569 i‡(
öfo
.
v˝u_⁄löe
 > 
n
) {

570 
	`Ârötf
(
°dîr
, "failedÅo offline vcpus\n");

571 
out
;

573 
	`libxl_bôm≠_£t_n⁄e
(&
˝um≠
);

575 
c
 = 0; c < 
n_˝us
; c++) {

576 i‡(
t›ﬁogy
[
c
].
node
 =
LIBXL_CPUTOPOLOGY_INVALID_ENTRY
) {

580 
node
 = 
t›ﬁogy
[
c
].node;

581 i‡(
	`libxl_˝upoﬁ_˝uªmove_node
(
˘x
, 0, 
node
, &
n
)) {

582 
	`Ârötf
(
°dîr
, "error onÑemoving cpu from Pool 0\n");

583 
out
;

586 
	`‰ì
(
«me
);

587 
	`xa•rötf
(&
«me
, "Poﬁ-node%d", 
node
);

588 
	`libxl_uuid_gíî©e
(&
uuid
);

589 
poﬁid
 = 0;

590 i‡(
	`libxl_˝upoﬁ_¸óã
(
˘x
, 
«me
, 
sched
, 
˝um≠
, &
uuid
, &
poﬁid
)) {

591 
	`Ârötf
(
°dîr
, "error on creating cpupool\n");

592 
out
;

595 i‡(
	`libxl_˝upoﬁ_˝uadd_node
(
˘x
, 
poﬁid
, 
node
, &
n
)) {

596 
	`Ârötf
(
°dîr
, "error onádding cpusÅo cpupool\n");

597 
out
;

600 
p
 = 
c
;Ö < 
n_˝us
;Ö++) {

601 i‡(
t›ﬁogy
[
p
].
node
 ==Çode) {

602 
t›ﬁogy
[
p
].
node
 = 
LIBXL_CPUTOPOLOGY_INVALID_ENTRY
;

607 
rc
 = 
EXIT_SUCCESS
;

609 
out
:

610 
	`libxl_˝ut›ﬁogy_li°_‰ì
(
t›ﬁogy
, 
n_˝us
);

611 
	`libxl_bôm≠_di•o£
(&
˝um≠
);

612 
	`libxl_domöfo_di•o£
(&
öfo
);

613 
	`‰ì
(
«me
);

615  
rc
;

616 
	}
}

	@xl_flask.c

15 
	~<f˙é.h
>

16 
	~<°dio.h
>

17 
	~<°dlib.h
>

18 
	~<sys/ty≥s.h
>

19 
	~<sys/°©.h
>

20 
	~<uni°d.h
>

22 
	~<libxl.h
>

24 
	~"xl.h
"

26 
	$maö_gëíf‹˚
(
¨gc
, **
¨gv
)

28 
ªt
;

30 
ªt
 = 
	`libxl_Êask_gëíf‹˚
(
˘x
);

32 i‡(
ªt
 < 0) {

33 i‡(
î∫o
 =
ENOSYS
)

34 
	`¥ötf
("Flask XSM Disabled\n");

36 
	`Ârötf
(
°dîr
, "FailedÅo getÉnforcing mode\n");

38 i‡(
ªt
 == 1)

39 
	`¥ötf
("Enforcing\n");

40 i‡(
ªt
 == 0)

41 
	`¥ötf
("Permissive\n");

43  
ªt
;

44 
	}
}

46 
	$maö_£ãnf‹˚
(
¨gc
, **
¨gv
)

48 
ªt
, 
mode
;

49 c⁄° *
p
 = 
NULL
;

51 i‡(
›töd
 >
¨gc
) {

52 
	`hñp
("setenforce");

56 
p
 = 
¨gv
[
›töd
];

58 i‡(!
	`°rcmp
(
p
, "0"))

59 
mode
 = 0;

60 i‡(!
	`°rcmp
(
p
, "1"))

61 
mode
 = 1;

62 i‡(!
	`°rˇ£cmp
(
p
, "permissive"))

63 
mode
 = 0;

64 i‡(!
	`°rˇ£cmp
(
p
, "enforcing"))

65 
mode
 = 1;

67 
	`hñp
("setenforce");

71 
ªt
 = 
	`libxl_Êask_£ãnf‹˚
(
˘x
, 
mode
);

73 i‡(
ªt
) {

74 i‡(
î∫o
 =
ENOSYS
) {

75 
	`Ârötf
(
°dîr
, "Flask XSM disabled\n");

78 
	`Ârötf
(
°dîr
, "îr‹ occuªd whûê£âögÉnf‹cög modê(%i)\n", 
ªt
);

81  
ªt
;

82 
	}
}

84 
	$maö_lﬂdpﬁicy
(
¨gc
, **
¨gv
)

86 c⁄° *
pﬁFName
;

87 
pﬁFd
 = -1;

88 *
pﬁMemCp
 = 
NULL
;

89 
°©
 
öfo
;

90 
ªt
;

92 i‡(
›töd
 >
¨gc
) {

93 
	`hñp
("loadpolicy");

97 
pﬁFName
 = 
¨gv
[
›töd
];

98 
pﬁFd
 = 
	`›í
(
pﬁFName
, 
O_RDONLY
);

99 i‡(
pﬁFd
 < 0) {

100 
	`Ârötf
(
°dîr
, "Error occurred openingÖolicy file '%s': %s\n",

101 
pﬁFName
, 
	`°ªº‹
(
î∫o
));

102 
ªt
 = -1;

103 
d⁄e
;

106 
ªt
 = 
	`°©
(
pﬁFName
, &
öfo
);

107 i‡(
ªt
 < 0) {

108 
	`Ârötf
(
°dîr
, "Error occurredÑetrieving informationábout"

109 "pﬁicy fûê'%s': %s\n", 
pﬁFName
, 
	`°ªº‹
(
î∫o
));

110 
d⁄e
;

113 
pﬁMemCp
 = 
	`mÆloc
(
öfo
.
°_size
);

115 
ªt
 = 
	`ªad
(
pﬁFd
, 
pﬁMemCp
, 
öfo
.
°_size
);

116 i‡–
ªt
 < 0 ) {

117 
	`Ârötf
(
°dîr
, "UnableÅoÑeadÇew FlaskÖolicy file: %s\n",

118 
	`°ªº‹
(
î∫o
));

119 
d⁄e
;

122 
ªt
 = 
	`libxl_Êask_lﬂdpﬁicy
(
˘x
, 
pﬁMemCp
, 
öfo
.
°_size
);

124 i‡(
ªt
 < 0) {

125 i‡(
î∫o
 =
ENOSYS
) {

126 
	`Ârötf
(
°dîr
, "Flask XSM disabled\n");

128 
î∫o
 = -
ªt
;

129 
	`Ârötf
(
°dîr
, "UnableÅoÜoadÇew FlaskÖolicy: %s\n",

130 
	`°ªº‹
(
î∫o
));

131 
ªt
 = -1;

134 
	`¥ötf
("SuccessfullyÜoadedÖolicy.\n");

137 
d⁄e
:

138 
	`‰ì
(
pﬁMemCp
);

139 i‡(
pﬁFd
 >= 0)

140 
	`˛o£
(
pﬁFd
);

142  
ªt
;

143 
	}
}

	@xl_info.c

15 
	#_GNU_SOURCE


	)

17 
	~<f˙é.h
>

18 
	~<öây≥s.h
>

19 
	~<°dlib.h
>

20 
	~<sys/°©.h
>

21 
	~<sys/ty≥s.h
>

22 
	~<sys/ut¢ame.h
>

23 
	~<time.h
>

24 
	~<uni°d.h
>

26 
	~<libxl.h
>

27 
	~<libxl_js⁄.h
>

28 
	~<libxl_utûs.h
>

29 
	~<libxlutû.h
>

31 
	~"xl.h
"

32 
	~"xl_utûs.h
"

35 c⁄° *
	göfo_«me
;

36 
	$maybe_¥ötf
(c⁄° *
fmt
, ...Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,1,2)));

37 
	$maybe_¥ötf
(c⁄° *
fmt
, ...)

39 
va_li°
 
≠
;

40 *
°r
;

41 
cou¡
 = 0;

43 
	`va_°¨t
(
≠
, 
fmt
);

44 i‡(
	`va•rötf
(&
°r
, 
fmt
, 
≠
) != -1) {

45 i‡(
öfo_«me
) {

46 *
s
;

48 i‡(!
	`°∫cmp
(
°r
, 
öfo_«me
, 
	`°æí
(info_name)) &&

49 (
s
 = 
	`°rchr
(
°r
, ':')) && s[1] == ' ')

50 
cou¡
 = 
	`Âuts
(&
s
[2], 
°dout
);

52 
cou¡
 = 
	`Âuts
(
°r
, 
°dout
);

54 
	`‰ì
(
°r
);

56 
	`va_íd
(
≠
);

58  
cou¡
;

59 
	}
}

61 
yajl_gí_°©us
 
	$¥ötf_öfo_⁄e_js⁄
(
yajl_gí
 
h™d
, 
domid
,

62 
libxl_domaö_c⁄fig
 *
d_c⁄fig
)

64 
yajl_gí_°©us
 
s
;

66 
s
 = 
	`yajl_gí_m≠_›í
(
h™d
);

67 i‡(
s
 !
yajl_gí_°©us_ok
)

68 
out
;

70 
s
 = 
	`yajl_gí_°rög
(
h™d
, (const *)"domid",

72 i‡(
s
 !
yajl_gí_°©us_ok
)

73 
out
;

74 i‡(
domid
 != -1)

75 
s
 = 
	`yajl_gí_öãgî
(
h™d
, 
domid
);

77 
s
 = 
	`yajl_gí_nuŒ
(
h™d
);

78 i‡(
s
 !
yajl_gí_°©us_ok
)

79 
out
;

81 
s
 = 
	`yajl_gí_°rög
(
h™d
, (const *)"config",

83 i‡(
s
 !
yajl_gí_°©us_ok
)

84 
out
;

85 
s
 = 
	`libxl_domaö_c⁄fig_gí_js⁄
(
h™d
, 
d_c⁄fig
);

86 i‡(
s
 !
yajl_gí_°©us_ok
)

87 
out
;

89 
s
 = 
	`yajl_gí_m≠_˛o£
(
h™d
);

90 i‡(
s
 !
yajl_gí_°©us_ok
)

91 
out
;

93 
out
:

94  
s
;

95 
	}
}

97 
¥ötf_öfo
(
ouçut_f‹m©
 output_format,

98 
domid
,

99 
libxl_domaö_c⁄fig
 *
d_c⁄fig
, 
FILE
 *
fh
);

100 
	$¥ötf_öfo
(
ouçut_f‹m©
 output_format,

101 
domid
,

102 
libxl_domaö_c⁄fig
 *
d_c⁄fig
, 
FILE
 *
fh
)

104 i‡(
ouçut_f‹m©
 =
OUTPUT_FORMAT_SXP
)

105  
	`¥ötf_öfo_£xp
(
domid
, 
d_c⁄fig
, 
fh
);

107 c⁄° *
buf
;

108 
libxl_yajl_Àngth
 
Àn
 = 0;

109 
yajl_gí_°©us
 
s
;

110 
yajl_gí
 
h™d
;

112 
h™d
 = 
	`libxl_yajl_gí_Æloc
(
NULL
);

113 i‡(!
h™d
) {

114 
	`Ârötf
(
°dîr
, "unableÅoállocate JSON generator\n");

118 
s
 = 
	`¥ötf_öfo_⁄e_js⁄
(
h™d
, 
domid
, 
d_c⁄fig
);

119 i‡(
s
 !
yajl_gí_°©us_ok
)

120 
out
;

122 
s
 = 
	`yajl_gí_gë_buf
(
h™d
, (c⁄° **)&
buf
, &
Àn
);

123 i‡(
s
 !
yajl_gí_°©us_ok
)

124 
out
;

126 
	`Âuts
(
buf
, 
fh
);

128 
out
:

129 
	`yajl_gí_‰ì
(
h™d
);

131 i‡(
s
 !
yajl_gí_°©us_ok
)

132 
	`Ârötf
(
°dîr
,

133 "u«bÀÅÿf‹m© domaö c⁄figá†JSON (YAJL:%d)\n", 
s
);

135 
	`Êush_°ªam
(
fh
);

136 
	}
}

138 
	$ouçut_xíöfo
()

140 c⁄° 
libxl_vîsi⁄_öfo
 *
öfo
;

141 
libxl_scheduÀr
 
sched
;

142 
rc
;

144 i‡(!(
öfo
 = 
	`libxl_gë_vîsi⁄_öfo
(
˘x
))) {

145 
	`Ârötf
(
°dîr
, "libxl_get_version_info failed.\n");

149 
rc
 = 
	`libxl_gë_scheduÀr
(
˘x
);

150 i‡(
rc
 < 0) {

151 
	`Ârötf
(
°dîr
, "get_scheduler sysctl failed.\n");

154 
sched
 = 
rc
;

156 
	`maybe_¥ötf
("xí_maj‹ : %d\n", 
öfo
->
xí_vîsi⁄_maj‹
);

157 
	`maybe_¥ötf
("xí_mö‹ : %d\n", 
öfo
->
xí_vîsi⁄_mö‹
);

158 
	`maybe_¥ötf
("xí_exå® : %s\n", 
öfo
->
xí_vîsi⁄_exåa
);

159 
	`maybe_¥ötf
("xí_vîsi⁄ : %d.%d%s\n", 
öfo
->
xí_vîsi⁄_maj‹
,

160 
öfo
->
xí_vîsi⁄_mö‹
, info->
xí_vîsi⁄_exåa
);

161 
	`maybe_¥ötf
("xí_ˇp† : %s\n", 
öfo
->
ˇ∑bûôõs
);

162 
	`maybe_¥ötf
("xí_scheduÀ∏ : %s\n", 
	`libxl_scheduÀr_to_°rög
(
sched
));

163 
	`maybe_¥ötf
("xí_∑gesizê : %u\n", 
öfo
->
∑gesize
);

164 
	`maybe_¥ötf
("∂©f‹m_∑øm† : vút_°¨t=0x%"
PRIx64
"\n", 
öfo
->
vút_°¨t
);

165 
	`maybe_¥ötf
("xí_ch™ge£à : %s\n", 
öfo
->
ch™ge£t
);

166 
	`maybe_¥ötf
("xí_comm™dlöê : %s\n", 
öfo
->
comm™dlöe
);

167 
	`maybe_¥ötf
("cc_compûî : %s\n", 
öfo
->
compûî
);

168 
	`maybe_¥ötf
("cc_compûe_by : %s\n", 
öfo
->
compûe_by
);

169 
	`maybe_¥ötf
("cc_compûe_domaö : %s\n", 
öfo
->
compûe_domaö
);

170 
	`maybe_¥ötf
("cc_compûe_d©ê : %s\n", 
öfo
->
compûe_d©e
);

171 
	`maybe_¥ötf
("buûd_id : %s\n", 
öfo
->
buûd_id
);

174 
	}
}

176 
	$ouçut_nodeöfo
()

178 
ut¢ame
 
utsbuf
;

180 i‡(
	`u«me
(&
utsbuf
) < 0)

183 
	`maybe_¥ötf
("ho° : %s\n", 
utsbuf
.
nodíame
);

184 
	`maybe_¥ötf
("ªÀa£ : %s\n", 
utsbuf
.
ªÀa£
);

185 
	`maybe_¥ötf
("vîsi⁄ : %s\n", 
utsbuf
.
vîsi⁄
);

186 
	`maybe_¥ötf
("machöê : %s\n", 
utsbuf
.
machöe
);

187 
	}
}

189 
	$ouçut_physöfo
()

191 
libxl_physöfo
 
öfo
;

192 c⁄° 
libxl_vîsi⁄_öfo
 *
vöfo
;

193 
i
;

194 
libxl_bôm≠
 
˝um≠
;

195 
n
 = 0;

197 i‡(
	`libxl_gë_physöfo
(
˘x
, &
öfo
) != 0) {

198 
	`Ârötf
(
°dîr
, "libxl_physinfo failed.\n");

201 
	`maybe_¥ötf
("ƒ_˝u† : %d\n", 
öfo
.
ƒ_˝us
);

202 
	`maybe_¥ötf
("max_˝u_id : %d\n", 
öfo
.
max_˝u_id
);

203 
	`maybe_¥ötf
("ƒ_node† : %d\n", 
öfo
.
ƒ_nodes
);

204 
	`maybe_¥ötf
("c‹es_≥r_sockë : %d\n", 
öfo
.
c‹es_≥r_sockë
);

205 
	`maybe_¥ötf
("thªads_≥r_c‹ê : %d\n", 
öfo
.
thªads_≥r_c‹e
);

206 
	`maybe_¥ötf
("˝u_mhz : %d.%03d\n", 
öfo
.
˝u_khz
 / 1000, info.cpu_khz % 1000);

208 
	`maybe_¥ötf
("hw_caps : %08x:%08x:%08x:%08x:%08x:%08x:%08x:%08x\n",

209 
öfo
.
hw_ˇp
[0], info.hw_cap[1], info.hw_cap[2], info.hw_cap[3],

210 
öfo
.
hw_ˇp
[4], info.hw_cap[5], info.hw_cap[6], info.hw_cap[7]

213 
	`maybe_¥ötf
("virt_caps :%s%s\n",

214 
öfo
.
ˇp_hvm
 ? " hvm" : "",

215 
öfo
.
ˇp_hvm_dúe˘io
 ? " hvm_directio" : ""

218 
vöfo
 = 
	`libxl_gë_vîsi⁄_öfo
(
˘x
);

219 i‡(
vöfo
) {

220 
i
 = (1 << 20Ë/ 
vöfo
->
∑gesize
;

221 
	`maybe_¥ötf
("tŸÆ_mem‹y : %"
PRIu64
"\n", 
öfo
.
tŸÆ_∑ges
 / 
i
);

222 
	`maybe_¥ötf
("‰ì_mem‹y : %"
PRIu64
"\n", (
öfo
.
‰ì_∑ges
 - info.
out°™dög_∑ges
Ë/ 
i
);

223 
	`maybe_¥ötf
("sh¨ög_‰ìd_mem‹y : %"
PRIu64
"\n", 
öfo
.
sh¨ög_‰ìd_∑ges
 / 
i
);

224 
	`maybe_¥ötf
("sh¨ög_u£d_mem‹y : %"
PRIu64
"\n", 
öfo
.
sh¨ög_u£d_‰ames
 / 
i
);

225 
	`maybe_¥ötf
("out°™dög_˛aim† : %"
PRIu64
"\n", 
öfo
.
out°™dög_∑ges
 / 
i
);

227 i‡(!
	`libxl_gë_‰ì˝us
(
˘x
, &
˝um≠
)) {

228 
	`libxl_f‹_óch_bô
(
i
, 
˝um≠
)

229 i‡(
	`libxl_bôm≠_ã°
(&
˝um≠
, 
i
))

230 
n
++;

231 
	`maybe_¥ötf
("‰ì_˝u† : %d\n", 
n
);

232 
	`‰ì
(
˝um≠
.
m≠
);

234 
	`libxl_physöfo_di•o£
(&
öfo
);

236 
	}
}

238 
	$ouçut_numaöfo
()

240 
libxl_numaöfo
 *
öfo
;

241 
i
, 
j
, 
ƒ
;

243 
öfo
 = 
	`libxl_gë_numaöfo
(
˘x
, &
ƒ
);

244 i‡(
öfo
 =
NULL
) {

245 
	`Ârötf
(
°dîr
, "libxl_get_numainfo failed.\n");

249 
	`¥ötf
("numa_info :\n");

250 
	`¥ötf
("node: memsize memfree distances\n");

252 
i
 = 0; i < 
ƒ
; i++) {

253 i‡(
öfo
[
i
].
size
 !
LIBXL_NUMAINFO_INVALID_ENTRY
) {

254 
	`¥ötf
("%4d: %6"
PRIu64
" %6"PRIu64" %d", 
i
,

255 
öfo
[
i
].
size
 >> 20, info[i].
‰ì
 >> 20,

256 
öfo
[
i
].
di°s
[0]);

257 
j
 = 1; j < 
öfo
[
i
].
num_di°s
; j++)

258 
	`¥ötf
(",%d", 
öfo
[
i
].
di°s
[
j
]);

259 
	`¥ötf
("\n");

263 
	`libxl_numaöfo_li°_‰ì
(
öfo
, 
ƒ
);

266 
	}
}

268 
	$ouçut_t›ﬁogyöfo
()

270 
libxl_˝ut›ﬁogy
 *
˝uöfo
;

271 
i
, 
ƒ
;

272 
libxl_pcô›ﬁogy
 *
pciöfo
;

273 
vÆid_devs
 = 0;

276 
˝uöfo
 = 
	`libxl_gë_˝u_t›ﬁogy
(
˘x
, &
ƒ
);

277 i‡(
˝uöfo
 =
NULL
) {

278 
	`Ârötf
(
°dîr
, "libxl_get_cpu_topology failed.\n");

282 
	`¥ötf
("cpu_topology :\n");

283 
	`¥ötf
("cpu: core socketÇode\n");

285 
i
 = 0; i < 
ƒ
; i++) {

286 i‡(
˝uöfo
[
i
].
c‹e
 !
LIBXL_CPUTOPOLOGY_INVALID_ENTRY
)

287 
	`¥ötf
("%3d: %4d %4d %4d\n", 
i
,

288 
˝uöfo
[
i
].
c‹e
, cpuöfo[i].
sockë
, cpuöfo[i].
node
);

291 
	`libxl_˝ut›ﬁogy_li°_‰ì
(
˝uöfo
, 
ƒ
);

293 
pciöfo
 = 
	`libxl_gë_pci_t›ﬁogy
(
˘x
, &
ƒ
);

294 i‡(
pciöfo
 =
NULL
) {

295 
	`Ârötf
(
°dîr
, "libxl_get_pci_topology failed.\n");

299 
	`¥ötf
("deviceÅopology :\n");

300 
	`¥ötf
("deviceÇode\n");

301 
i
 = 0; i < 
ƒ
; i++) {

302 i‡(
pciöfo
[
i
].
node
 !
LIBXL_PCITOPOLOGY_INVALID_ENTRY
) {

303 
	`¥ötf
("%04x:%02x:%02x.%01x %d\n", 
pciöfo
[
i
].
£g
,

304 
pciöfo
[
i
].
bus
,

305 ((
pciöfo
[
i
].
dev‚
 >> 3) & 0x1f), (pciinfo[i].devfn & 7),

306 
pciöfo
[
i
].
node
);

307 
vÆid_devs
++;

311 i‡(
vÆid_devs
 == 0)

312 
	`¥ötf
("No deviceÅopology dataávailable\n");

314 
	`libxl_pcô›ﬁogy_li°_‰ì
(
pciöfo
, 
ƒ
);

317 
	}
}

319 
	$¥öt_öfo
(
numa
)

321 
	`ouçut_nodeöfo
();

323 
	`ouçut_physöfo
();

325 i‡(
numa
) {

326 
	`ouçut_t›ﬁogyöfo
();

327 
	`ouçut_numaöfo
();

329 
	`ouçut_xíöfo
();

331 
	`maybe_¥ötf
("xend_config_format : 4\n");

334 
	}
}

336 
	$li°_vm
()

338 
libxl_vmöfo
 *
öfo
;

339 *
dom«me
;

340 
nb_vm
, 
i
;

342 
öfo
 = 
	`libxl_li°_vm
(
˘x
, &
nb_vm
);

344 i‡(!
öfo
) {

345 
	`Ârötf
(
°dîr
, "libxl_list_vm failed.\n");

346 
	`exô
(
EXIT_FAILURE
);

348 
	`¥ötf
("UUID IDÇame\n");

349 
i
 = 0; i < 
nb_vm
; i++) {

350 
dom«me
 = 
	`libxl_domid_to_«me
(
˘x
, 
öfo
[
i
].
domid
);

351 
	`¥ötf
(
LIBXL_UUID_FMT
 " %d %-30s\n", 
	`LIBXL_UUID_BYTES
(
öfo
[
i
].
uuid
),

352 
öfo
[
i
].
domid
, 
dom«me
);

353 
	`‰ì
(
dom«me
);

355 
	`libxl_vmöfo_li°_‰ì
(
öfo
, 
nb_vm
);

356 
	}
}

358 
	$li°_domaös
(
boﬁ
 
vîbo£
, boﬁ 
c⁄ãxt
, boﬁ 
˛aim
, boﬁ 
numa
,

359 
boﬁ
 
˝upoﬁ
, c⁄° 
libxl_domöfo
 *
öfo
, 
nb_domaö
)

361 
i
;

362 c⁄° 
shutdown_ªas⁄_Àâîs
[]= "-rscwS";

363 
libxl_bôm≠
 
nodem≠
;

364 
libxl_physöfo
 
physöfo
;

366 
	`libxl_bôm≠_öô
(&
nodem≠
);

367 
	`libxl_physöfo_öô
(&
physöfo
);

369 
	`¥ötf
("Name ID Mem VCPUs\tState\tTime(s)");

370 i‡(
vîbo£
Ë
	`¥ötf
(" UUID Reason-Code\tSecurity Label");

371 i‡(
c⁄ãxt
 && !
vîbo£
Ë
	`¥ötf
(" Security Label");

372 i‡(
˛aim
Ë
	`¥ötf
(" Claimed");

373 i‡(
˝upoﬁ
Ë
	`¥ötf
(" Cpupool");

374 i‡(
numa
) {

375 i‡(
	`libxl_node_bôm≠_Æloc
(
˘x
, &
nodem≠
, 0)) {

376 
	`Ârötf
(
°dîr
, "libxl_node_bitmap_alloc_failed.\n");

377 
	`exô
(
EXIT_FAILURE
);

379 i‡(
	`libxl_gë_physöfo
(
˘x
, &
physöfo
) != 0) {

380 
	`Ârötf
(
°dîr
, "libxl_physinfo failed.\n");

381 
	`libxl_bôm≠_di•o£
(&
nodem≠
);

382 
	`exô
(
EXIT_FAILURE
);

385 
	`¥ötf
(" NODE Affinity");

387 
	`¥ötf
("\n");

388 
i
 = 0; i < 
nb_domaö
; i++) {

389 *
dom«me
;

390 
libxl_shutdown_ªas⁄
 
shutdown_ªas⁄
;

391 
dom«me
 = 
	`libxl_domid_to_«me
(
˘x
, 
öfo
[
i
].
domid
);

392 
shutdown_ªas⁄
 = 
öfo
[
i
].
shutdown
 ? info[i].shutdown_reason : 0;

393 
	`¥ötf
("%-40s %5d %5lu %5d %c%c%c%c%c%c %8.1f",

394 
dom«me
,

395 
öfo
[
i
].
domid
,

396 (Ë((
öfo
[
i
].
cuºít_memkb
 +

397 
öfo
[
i
].
out°™dög_memkb
)/ 1024),

398 
öfo
[
i
].
v˝u_⁄löe
,

399 
öfo
[
i
].
ru¬ög
 ? 'r' : '-',

400 
öfo
[
i
].
blocked
 ? 'b' : '-',

401 
öfo
[
i
].
∑u£d
 ? 'p' : '-',

402 
öfo
[
i
].
shutdown
 ? 's' : '-',

403 (
shutdown_ªas⁄
 >= 0 &&

404 
shutdown_ªas⁄
 < (
shutdown_ªas⁄_Àâîs
)-1

405 ? 
shutdown_ªas⁄_Àâîs
[
shutdown_ªas⁄
] : '?'),

406 
öfo
[
i
].
dyög
 ? 'd' : '-',

407 (()
öfo
[
i
].
˝u_time
 / 1e9));

408 
	`‰ì
(
dom«me
);

409 i‡(
vîbo£
) {

410 
	`¥ötf
(" " 
LIBXL_UUID_FMT
, 
	`LIBXL_UUID_BYTES
(
öfo
[
i
].
uuid
));

411 i‡(
öfo
[
i
].
shutdown
Ë
	`¥ötf
(" %8x", 
shutdown_ªas⁄
);

412 
	`¥ötf
(" %8s", "-");

414 i‡(
˛aim
)

415 
	`¥ötf
(" %5lu", ()
öfo
[
i
].
out°™dög_memkb
 / 1024);

416 i‡(
vîbo£
 || 
c⁄ãxt
)

417 
	`¥ötf
(" %16s", 
öfo
[
i
].
ssid_œbñ
 ? : "-");

418 i‡(
˝upoﬁ
) {

419 *
poﬁ«me
 = 
	`libxl_˝upoﬁid_to_«me
(
˘x
, 
öfo
[
i
].
˝upoﬁ
);

420 
	`¥ötf
("%16s", 
poﬁ«me
);

421 
	`‰ì
(
poﬁ«me
);

423 i‡(
numa
) {

424 
	`libxl_domaö_gë_nodófföôy
(
˘x
, 
öfo
[
i
].
domid
, &
nodem≠
);

426 
	`putch¨
(' ');

427 
	`¥öt_bôm≠
(
nodem≠
.
m≠
, 
physöfo
.
ƒ_nodes
, 
°dout
);

429 
	`putch¨
('\n');

432 
	`libxl_bôm≠_di•o£
(&
nodem≠
);

433 
	`libxl_physöfo_di•o£
(&
physöfo
);

434 
	}
}

436 
	$li°_domaös_dëaûs
(c⁄° 
libxl_domöfo
 *
öfo
, 
nb_domaö
)

438 
libxl_domaö_c⁄fig
 
d_c⁄fig
;

440 
i
, 
rc
;

442 
yajl_gí
 
h™d
 = 
NULL
;

443 
yajl_gí_°©us
 
s
;

444 c⁄° *
buf
;

445 
libxl_yajl_Àngth
 
yajl_Àn
 = 0;

447 i‡(
deÁu…_ouçut_f‹m©
 =
OUTPUT_FORMAT_JSON
) {

448 
h™d
 = 
	`libxl_yajl_gí_Æloc
(
NULL
);

449 i‡(!
h™d
) {

450 
	`Ârötf
(
°dîr
, "unableÅoállocate JSON generator\n");

454 
s
 = 
	`yajl_gí_¨øy_›í
(
h™d
);

455 i‡(
s
 !
yajl_gí_°©us_ok
)

456 
out
;

458 
s
 = 
yajl_gí_°©us_ok
;

460 
i
 = 0; i < 
nb_domaö
; i++) {

461 
	`libxl_domaö_c⁄fig_öô
(&
d_c⁄fig
);

462 
rc
 = 
	`libxl_ªåõve_domaö_c⁄figuøti⁄
(
˘x
, 
öfo
[
i
].
domid
, &
d_c⁄fig
);

463 i‡(
rc
)

465 i‡(
deÁu…_ouçut_f‹m©
 =
OUTPUT_FORMAT_JSON
)

466 
s
 = 
	`¥ötf_öfo_⁄e_js⁄
(
h™d
, 
öfo
[
i
].
domid
, &
d_c⁄fig
);

468 
	`¥ötf_öfo_£xp
(
öfo
[
i
].
domid
, &
d_c⁄fig
, 
°dout
);

469 
	`libxl_domaö_c⁄fig_di•o£
(&
d_c⁄fig
);

470 i‡(
s
 !
yajl_gí_°©us_ok
)

471 
out
;

474 i‡(
deÁu…_ouçut_f‹m©
 =
OUTPUT_FORMAT_JSON
) {

475 
s
 = 
	`yajl_gí_¨øy_˛o£
(
h™d
);

476 i‡(
s
 !
yajl_gí_°©us_ok
)

477 
out
;

479 
s
 = 
	`yajl_gí_gë_buf
(
h™d
, (c⁄° **)&
buf
, &
yajl_Àn
);

480 i‡(
s
 !
yajl_gí_°©us_ok
)

481 
out
;

483 
	`puts
(
buf
);

486 
out
:

487 i‡(
deÁu…_ouçut_f‹m©
 =
OUTPUT_FORMAT_JSON
) {

488 
	`yajl_gí_‰ì
(
h™d
);

489 i‡(
s
 !
yajl_gí_°©us_ok
)

490 
	`Ârötf
(
°dîr
,

491 "u«bÀÅÿf‹m© domaö c⁄figá†JSON (YAJL:%d)\n", 
s
);

493 
	}
}

496 
	$maö_li°
(
¨gc
, **
¨gv
)

498 
›t
;

499 
boﬁ
 
vîbo£
 = 
Ál£
;

500 
boﬁ
 
c⁄ãxt
 = 
Ál£
;

501 
boﬁ
 
dëaûs
 = 
Ál£
;

502 
boﬁ
 
˝upoﬁ
 = 
Ál£
;

503 
boﬁ
 
numa
 = 
Ál£
;

504 
›ti⁄
 
›ts
[] = {

510 
COMMON_LONG_OPTS


513 
libxl_domöfo
 
öfo_buf
;

514 
libxl_domöfo
 *
öfo
, *
öfo_‰ì
=0;

515 
nb_domaö
, 
rc
;

517 
	`SWITCH_FOREACH_OPT
(
›t
, "lvhZ˙", 
›ts
, "list", 0) {

519 
dëaûs
 = 
åue
;

522 
vîbo£
 = 
åue
;

525 
c⁄ãxt
 = 
åue
;

528 
˝upoﬁ
 = 
åue
;

531 
numa
 = 
åue
;

535 
	`libxl_domöfo_öô
(&
öfo_buf
);

537 i‡(
›töd
 >
¨gc
) {

538 
öfo
 = 
	`libxl_li°_domaö
(
˘x
, &
nb_domaö
);

539 i‡(!
öfo
) {

540 
	`Ârötf
(
°dîr
, "libxl_list_domain failed.\n");

541  
EXIT_FAILURE
;

543 
öfo_‰ì
 = 
öfo
;

544 } i‡(
›töd
 =
¨gc
-1) {

545 
uöt32_t
 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

546 
rc
 = 
	`libxl_domaö_öfo
(
˘x
, &
öfo_buf
, 
domid
);

547 i‡(
rc
 =
ERROR_DOMAIN_NOTFOUND
) {

548 
	`Ârötf
(
°dîr
, "Error: Domain \'%s\' doesÇotÉxist.\n",

549 
¨gv
[
›töd
]);

550  
EXIT_FAILURE
;

552 i‡(
rc
) {

553 
	`Ârötf
(
°dîr
, "libxl_domaö_öfÿÁûed (codê%d).\n", 
rc
);

554  
EXIT_FAILURE
;

556 
öfo
 = &
öfo_buf
;

557 
nb_domaö
 = 1;

559 
	`hñp
("list");

560  
EXIT_FAILURE
;

563 i‡(
dëaûs
)

564 
	`li°_domaös_dëaûs
(
öfo
, 
nb_domaö
);

566 
	`li°_domaös
(
vîbo£
, 
c⁄ãxt
, 
Ál£
 , 
numa
, 
˝upoﬁ
,

567 
öfo
, 
nb_domaö
);

569 i‡(
öfo_‰ì
)

570 
	`libxl_domöfo_li°_‰ì
(
öfo
, 
nb_domaö
);

572 
	`libxl_domöfo_di•o£
(&
öfo_buf
);

574  
EXIT_SUCCESS
;

575 
	}
}

577 
	$maö_vm_li°
(
¨gc
, **
¨gv
)

579 
›t
;

581 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "vm-list", 0) {

585 
	`li°_vm
();

586  
EXIT_SUCCESS
;

587 
	}
}

589 
	$maö_öfo
(
¨gc
, **
¨gv
)

591 
›t
;

592 
›ti⁄
 
›ts
[] = {

594 
COMMON_LONG_OPTS


596 
numa
 = 0;

598 
	`SWITCH_FOREACH_OPT
(
›t
, "n", 
›ts
, "info", 0) {

600 
numa
 = 1;

608 i‡(
numa
 =0 && 
¨gc
 > 
›töd
)

609 
öfo_«me
 = 
¨gv
[
›töd
];

611 
	`¥öt_öfo
(
numa
);

613 
	}
}

615 
	$maö_domid
(
¨gc
, **
¨gv
)

617 
uöt32_t
 
domid
;

618 
›t
;

619 c⁄° *
dom«me
 = 
NULL
;

621 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "domid", 1) {

625 
dom«me
 = 
¨gv
[
›töd
];

627 i‡(
	`libxl_«me_to_domid
(
˘x
, 
dom«me
, &
domid
)) {

628 
	`Ârötf
(
°dîr
, "C™'àgë domid o‡domaöÇamê'%s', maybêthi†domaö d€†nŸÉxi°.\n", 
dom«me
);

629  
EXIT_FAILURE
;

632 
	`¥ötf
("%u\n", 
domid
);

634  
EXIT_SUCCESS
;

635 
	}
}

637 
	$maö_dom«me
(
¨gc
, **
¨gv
)

639 
uöt32_t
 
domid
;

640 
›t
;

641 *
dom«me
 = 
NULL
;

642 *
íd±r
 = 
NULL
;

644 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "domname", 1) {

648 
domid
 = 
	`°πﬁ
(
¨gv
[
›töd
], &
íd±r
, 10);

649 i‡(
domid
 =0 && !
	`°rcmp
(
íd±r
, 
¨gv
[
›töd
])) {

651 
	`Ârötf
(
°dîr
, "Invalid domain id.\n\n");

652  
EXIT_FAILURE
;

655 
dom«me
 = 
	`libxl_domid_to_«me
(
˘x
, 
domid
);

656 i‡(!
dom«me
) {

657 
	`Ârötf
(
°dîr
, "C™'àgë domaöÇamêo‡domaö id '%u', maybêthi†domaö d€†nŸÉxi°.\n", 
domid
);

658  
EXIT_FAILURE
;

661 
	`¥ötf
("%s\n", 
dom«me
);

662 
	`‰ì
(
dom«me
);

664  
EXIT_SUCCESS
;

665 
	}
}

667 *
	$u±ime_to_°rög
(
u±ime
, 
sh‹t_mode
)

669 
£c
, 
mö
, 
hour
, 
day
;

670 *
time_°rög
;

672 
day
 = ()(
u±ime
 / 86400);

673 
u±ime
 -(
day
 * 86400);

674 
hour
 = ()(
u±ime
 / 3600);

675 
u±ime
 -(
hour
 * 3600);

676 
mö
 = ()(
u±ime
 / 60);

677 
u±ime
 -(
mö
 * 60);

678 
£c
 = 
u±ime
;

680 i‡(
sh‹t_mode
)

681 i‡(
day
 > 1)

682 
	`xa•rötf
(&
time_°rög
, "%d days, %2d:%02d", 
day
, 
hour
, 
mö
);

683 i‡(
day
 == 1)

684 
	`xa•rötf
(&
time_°rög
, "%d day, %2d:%02d", 
day
, 
hour
, 
mö
);

686 
	`xa•rötf
(&
time_°rög
, "%2d:%02d", 
hour
, 
mö
);

688 i‡(
day
 > 1)

689 
	`xa•rötf
(&
time_°rög
, "%d days, %2d:%02d:%02d", 
day
, 
hour
, 
mö
, 
£c
);

690 i‡(
day
 == 1)

691 
	`xa•rötf
(&
time_°rög
, "%d day, %2d:%02d:%02d", 
day
, 
hour
, 
mö
, 
£c
);

693 
	`xa•rötf
(&
time_°rög
, "%2d:%02d:%02d", 
hour
, 
mö
, 
£c
);

695  
time_°rög
;

696 
	}
}

698 
	$maö_˛aims
(
¨gc
, **
¨gv
)

700 
libxl_domöfo
 *
öfo
;

701 
›t
;

702 
nb_domaö
;

704 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "claims", 0) {

708 i‡(!
˛aim_mode
)

709 
	`Ârötf
(
°dîr
, "claim_modeÇotÉnabled (see man xl.conf).\n");

711 
öfo
 = 
	`libxl_li°_domaö
(
˘x
, &
nb_domaö
);

712 i‡(!
öfo
) {

713 
	`Ârötf
(
°dîr
, "libxl_list_domain failed.\n");

717 
	`li°_domaös
(
Ál£
 , fÆ£ , 
åue
 ,

718 
Ál£
 , fÆ£ , 
öfo
, 
nb_domaö
);

720 
	`libxl_domöfo_li°_‰ì
(
öfo
, 
nb_domaö
);

722 
	}
}

724 *
	$cuºít_time_to_°rög
(
time_t
 
now
)

726 
now_°r
[100];

727 
tm
 *
tmp
;

729 
tmp
 = 
	`loˇ…ime
(&
now
);

730 i‡(
tmp
 =
NULL
) {

731 
	`Ârötf
(
°dîr
, "GetÜocaltimeÉrror");

732 
	`exô
(-1);

734 i‡(
	`°r·ime
(
now_°r
, “ow_°r), "%H:%M:%S", 
tmp
) == 0) {

735 
	`Ârötf
(
°dîr
, "strftimeÑeturned 0");

736 
	`exô
(-1);

738  
	`°rdup
(
now_°r
);

739 
	}
}

741 
	$¥öt_dom0_u±ime
(
sh‹t_mode
, 
time_t
 
now
)

743 
fd
;

744 
ssize_t
 
ƒ
;

745 
buf
[512];

746 
uöt32_t
 
u±ime
 = 0;

747 *
u±ime_°r
 = 
NULL
;

748 *
now_°r
 = 
NULL
;

749 *
dom«me
;

751 
fd
 = 
	`›í
("/¥oc/u±ime", 
O_RDONLY
);

752 i‡(
fd
 == -1)

753 
îr
;

755 
ƒ
 = 
	`ªad
(
fd
, 
buf
, (buf) - 1);

756 i‡(
ƒ
 == -1) {

757 
	`˛o£
(
fd
);

758 
îr
;

760 
	`˛o£
(
fd
);

762 
buf
[
ƒ
] = '\0';

764 
	`°πok
(
buf
, " ");

765 
u±ime
 = 
	`°πoul
(
buf
, 
NULL
, 10);

767 
dom«me
 = 
	`libxl_domid_to_«me
(
˘x
, 0);

768 i‡(
sh‹t_mode
)

770 
now_°r
 = 
	`cuºít_time_to_°rög
(
now
);

771 
u±ime_°r
 = 
	`u±ime_to_°rög
(
u±ime
, 1);

772 
	`¥ötf
(" %†u∞%s, %†(%d)\n", 
now_°r
, 
u±ime_°r
,

773 
dom«me
, 0);

777 
now_°r
 = 
NULL
;

778 
u±ime_°r
 = 
	`u±ime_to_°rög
(
u±ime
, 0);

779 
	`¥ötf
("%-33†%4d %s\n", 
dom«me
,

780 0, 
u±ime_°r
);

783 
	`‰ì
(
now_°r
);

784 
	`‰ì
(
u±ime_°r
);

785 
	`‰ì
(
dom«me
);

787 
îr
:

788 
	`Ârötf
(
°dîr
, "CanÇot get Dom0 uptime.\n");

789 
	`exô
(-1);

790 
	}
}

792 
	$¥öt_domU_u±ime
(
uöt32_t
 
domuid
, 
sh‹t_mode
, 
time_t
 
now
)

794 
uöt32_t
 
s_time
 = 0;

795 
uöt32_t
 
u±ime
 = 0;

796 *
u±ime_°r
 = 
NULL
;

797 *
now_°r
 = 
NULL
;

798 *
dom«me
;

800 
s_time
 = 
	`libxl_vm_gë_°¨t_time
(
˘x
, 
domuid
);

801 i‡(
s_time
 == -1)

803 
u±ime
 = 
now
 - 
s_time
;

804 
dom«me
 = 
	`libxl_domid_to_«me
(
˘x
, 
domuid
);

805 i‡(
sh‹t_mode
)

807 
now_°r
 = 
	`cuºít_time_to_°rög
(
now
);

808 
u±ime_°r
 = 
	`u±ime_to_°rög
(
u±ime
, 1);

809 
	`¥ötf
(" %†u∞%s, %†(%d)\n", 
now_°r
, 
u±ime_°r
,

810 
dom«me
, 
domuid
);

814 
now_°r
 = 
NULL
;

815 
u±ime_°r
 = 
	`u±ime_to_°rög
(
u±ime
, 0);

816 
	`¥ötf
("%-33†%4d %s\n", 
dom«me
,

817 
domuid
, 
u±ime_°r
);

820 
	`‰ì
(
dom«me
);

821 
	`‰ì
(
now_°r
);

822 
	`‰ì
(
u±ime_°r
);

824 
	}
}

826 
	$¥öt_u±ime
(
sh‹t_mode
, 
uöt32_t
 
doms
[], 
nb_doms
)

828 
libxl_vmöfo
 *
öfo
;

829 
time_t
 
now
;

830 
nb_vm
, 
i
;

832 
now
 = 
	`time
(
NULL
);

834 i‡(!
sh‹t_mode
)

835 
	`¥ötf
("%-33s %4s %s\n", "Name", "ID", "Uptime");

837 i‡(
nb_doms
 == 0) {

838 
	`¥öt_dom0_u±ime
(
sh‹t_mode
, 
now
);

839 
öfo
 = 
	`libxl_li°_vm
(
˘x
, &
nb_vm
);

840 i‡(
öfo
 =
NULL
) {

841 
	`Ârötf
(
°dîr
, "CouldÇotÜist vms.\n");

844 
i
 = 0; i < 
nb_vm
; i++) {

845 i‡(
öfo
[
i
].
domid
 == 0) ;

846 
	`¥öt_domU_u±ime
(
öfo
[
i
].
domid
, 
sh‹t_mode
, 
now
);

848 
	`libxl_vmöfo_li°_‰ì
(
öfo
, 
nb_vm
);

850 
i
 = 0; i < 
nb_doms
; i++) {

851 i‡(
doms
[
i
] == 0)

852 
	`¥öt_dom0_u±ime
(
sh‹t_mode
, 
now
);

854 
	`¥öt_domU_u±ime
(
doms
[
i
], 
sh‹t_mode
, 
now
);

857 
	}
}

859 
	$maö_u±ime
(
¨gc
, **
¨gv
)

861 c⁄° *
dom
;

862 
sh‹t_mode
 = 0;

863 
uöt32_t
 
domaös
[100];

864 
nb_doms
 = 0;

865 
›t
;

867 
	`SWITCH_FOREACH_OPT
(
›t
, "s", 
NULL
, "uptime", 0) {

869 
sh‹t_mode
 = 1;

873 ;(
dom
 = 
¨gv
[
›töd
]Ë!
NULL
; 
nb_doms
++,optind++)

874 
domaös
[
nb_doms
] = 
	`föd_domaö
(
dom
);

876 
	`¥öt_u±ime
(
sh‹t_mode
, 
domaös
, 
nb_doms
);

879 
	}
}

881 
	$maö_dmesg
(
¨gc
, **
¨gv
)

883 
˛ór
 = 0;

884 
libxl_xí_c⁄sﬁe_ªadî
 *
¸
;

885 *
löe
;

886 
›t
, 
ªt
 = 1;

887 
›ti⁄
 
›ts
[] = {

889 
COMMON_LONG_OPTS


892 
	`SWITCH_FOREACH_OPT
(
›t
, "c", 
›ts
, "dmesg", 0) {

894 
˛ór
 = 1;

898 
¸
 = 
	`libxl_xí_c⁄sﬁe_ªad_°¨t
(
˘x
, 
˛ór
);

899 i‡(!
¸
)

900 
föish
;

902 (
ªt
 = 
	`libxl_xí_c⁄sﬁe_ªad_löe
(
˘x
, 
¸
, &
löe
)) > 0)

903 
	`¥ötf
("%s", 
löe
);

905 
föish
:

906 i‡(
¸
)

907 
	`libxl_xí_c⁄sﬁe_ªad_föish
(
˘x
, 
¸
);

908  
ªt
 ? 
EXIT_FAILURE
 : 
EXIT_SUCCESS
;

909 
	}
}

911 
	$maö_t›
(
¨gc
, **
¨gv
)

913 
›t
;

915 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "top", 0) {

919  
	`sy°em
("xentop");

920 
	}
}

	@xl_mem.c

15 
	~<°dlib.h
>

17 
	~<libxl.h
>

18 
	~<libxl_utûs.h
>

19 
	~<libxlutû.h
>

21 
	~"xl.h
"

22 
	~"xl_utûs.h
"

23 
	~"xl_∑r£.h
"

25 
	$£t_mem‹y_max
(
uöt32_t
 
domid
, c⁄° *
mem
)

27 
öt64_t
 
mem‹ykb
;

29 
mem‹ykb
 = 
	`∑r£_mem_size_kb
(
mem
);

30 i‡(
mem‹ykb
 == -1) {

31 
	`Ârötf
(
°dîr
, "övÆid mem‹y size: %s\n", 
mem
);

32  
EXIT_FAILURE
;

35 i‡(
	`libxl_domaö_£tmaxmem
(
˘x
, 
domid
, 
mem‹ykb
)) {

36 
	`Ârötf
(
°dîr
, "ˇ¬Ÿ së domid %u sèti¯max mem‹yÅÿ: %s\n", 
domid
, 
mem
);

37  
EXIT_FAILURE
;

40  
EXIT_SUCCESS
;

41 
	}
}

43 
	$maö_memmax
(
¨gc
, **
¨gv
)

45 
uöt32_t
 
domid
;

46 
›t
 = 0;

47 *
mem
;

49 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "mem-max", 2) {

53 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

54 
mem
 = 
¨gv
[
›töd
 + 1];

56  
	`£t_mem‹y_max
(
domid
, 
mem
);

57 
	}
}

59 
	$£t_mem‹y_èrgë
(
uöt32_t
 
domid
, c⁄° *
mem
)

61 
öt64_t
 
mem‹ykb
;

63 
mem‹ykb
 = 
	`∑r£_mem_size_kb
(
mem
);

64 i‡(
mem‹ykb
 == -1) {

65 
	`Ârötf
(
°dîr
, "övÆid mem‹y size: %s\n", 
mem
);

66  
EXIT_FAILURE
;

69 i‡(
	`libxl_£t_mem‹y_èrgë
(
˘x
, 
domid
, 
mem‹ykb
, 0, 1)) {

70 
	`Ârötf
(
°dîr
, "ˇ¬Ÿ së domid %u dy«mi¯max mem‹yÅÿ: %s\n", 
domid
, 
mem
);

71  
EXIT_FAILURE
;

74  
EXIT_SUCCESS
;

75 
	}
}

77 
	$maö_mem£t
(
¨gc
, **
¨gv
)

79 
uöt32_t
 
domid
;

80 
›t
 = 0;

81 c⁄° *
mem
;

83 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "mem-set", 2) {

87 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

88 
mem
 = 
¨gv
[
›töd
 + 1];

90  
	`£t_mem‹y_èrgë
(
domid
, 
mem
);

91 
	}
}

93 
	$sh¨ög
(c⁄° 
libxl_domöfo
 *
öfo
, 
nb_domaö
)

95 
i
;

97 
	`¥ötf
("Name ID Mem Shared\n");

99 
i
 = 0; i < 
nb_domaö
; i++) {

100 *
dom«me
;

101 
shutdown_ªas⁄
;

102 
dom«me
 = 
	`libxl_domid_to_«me
(
˘x
, 
öfo
[
i
].
domid
);

103 
shutdown_ªas⁄
 = 
öfo
[
i
].
shutdown
 ? info[i].shutdown_reason : 0;

104 
	`¥ötf
("%-40s %5d %5lu %5lu\n",

105 
dom«me
,

106 
öfo
[
i
].
domid
,

107 (Ë((
öfo
[
i
].
cuºít_memkb
 +

108 
öfo
[
i
].
out°™dög_memkb
) / 1024),

109 (Ë(
öfo
[
i
].
sh¨ed_memkb
 / 1024));

110 
	`‰ì
(
dom«me
);

112 
	}
}

114 
	$maö_sh¨ög
(
¨gc
, **
¨gv
)

116 
›t
 = 0;

117 
libxl_domöfo
 
öfo_buf
;

118 
libxl_domöfo
 *
öfo
, *
öfo_‰ì
 = 
NULL
;

119 
nb_domaö
, 
rc
;

121 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "sharing", 0) {

125 i‡(
›töd
 >
¨gc
) {

126 
öfo
 = 
	`libxl_li°_domaö
(
˘x
, &
nb_domaö
);

127 i‡(!
öfo
) {

128 
	`Ârötf
(
°dîr
, "libxl_list_domain failed.\n");

129  
EXIT_FAILURE
;

131 
öfo_‰ì
 = 
öfo
;

132 } i‡(
›töd
 =
¨gc
-1) {

133 
uöt32_t
 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

134 
rc
 = 
	`libxl_domaö_öfo
(
˘x
, &
öfo_buf
, 
domid
);

135 i‡(
rc
 =
ERROR_DOMAIN_NOTFOUND
) {

136 
	`Ârötf
(
°dîr
, "Error: Domain \'%s\' doesÇotÉxist.\n",

137 
¨gv
[
›töd
]);

138  
EXIT_FAILURE
;

140 i‡(
rc
) {

141 
	`Ârötf
(
°dîr
, "libxl_domaö_öfÿÁûed (codê%d).\n", 
rc
);

142  
EXIT_FAILURE
;

144 
öfo
 = &
öfo_buf
;

145 
nb_domaö
 = 1;

147 
	`hñp
("sharing");

148  
EXIT_FAILURE
;

151 
	`sh¨ög
(
öfo
, 
nb_domaö
);

153 i‡(
öfo_‰ì
)

154 
	`libxl_domöfo_li°_‰ì
(
öfo_‰ì
, 
nb_domaö
);

156 
	`libxl_domöfo_di•o£
(
öfo
);

158  
EXIT_SUCCESS
;

159 
	}
}

	@xl_migrate.c

15 
	~<f˙é.h
>

16 
	~<öây≥s.h
>

17 
	~<sig«l.h
>

18 
	~<°dlib.h
>

19 
	~<sys/°©.h
>

20 
	~<sys/ty≥s.h
>

21 
	~<sys/ut¢ame.h
>

22 
	~<time.h
>

23 
	~<uni°d.h
>

25 
	~<libxl.h
>

26 
	~<libxl_utûs.h
>

27 
	~<libxlutû.h
>

29 
	~"xl.h
"

30 
	~"xl_utûs.h
"

31 
	~"xl_∑r£.h
"

33 #i‚de‡
LIBXL_HAVE_NO_SUSPEND_RESUME


35 
pid_t
 
	$¸óã_migøti⁄_chûd
(c⁄° *
ru√
, *
£nd_fd
,

36 *
ªcv_fd
)

38 
£ndpùe
[2], 
ªcvpùe
[2];

39 
pid_t
 
chûd
;

41 i‡(!
ru√
 || !
£nd_fd
 || !
ªcv_fd
)

44 
	`MUST
–
	`libxl_pùe
(
˘x
, 
£ndpùe
) );

45 
	`MUST
–
	`libxl_pùe
(
˘x
, 
ªcvpùe
) );

47 
chûd
 = 
	`xl_f‹k
(
chûd_migøti⁄
, "migrationÅransportÖrocess");

49 i‡(!
chûd
) {

50 
	`dup2
(
£ndpùe
[0], 0);

51 
	`dup2
(
ªcvpùe
[1], 1);

52 
	`˛o£
(
£ndpùe
[0]); close(sendpipe[1]);

53 
	`˛o£
(
ªcvpùe
[0]); close(recvpipe[1]);

54 
	`exe˛p
("sh","sh","-c",
ru√
,(*)0);

55 
	`≥º‹
("failedÅoÉxec sh");

56 
	`exô
(
EXIT_FAILURE
);

59 
	`˛o£
(
£ndpùe
[0]);

60 
	`˛o£
(
ªcvpùe
[1]);

61 *
£nd_fd
 = 
£ndpùe
[1];

62 *
ªcv_fd
 = 
ªcvpùe
[0];

66 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

68  
chûd
;

69 
	}
}

71 
	$migøã_ªad_fixedmesßge
(
fd
, c⁄° *
msg
, 
msgsz
,

72 c⁄° *
wh©
, c⁄° *
ru√
) {

73 
buf
[
msgsz
];

74 c⁄° *
°ªam
;

75 
rc
;

77 
°ªam
 = 
ru√
 ? "migrationÑeceiver stream" : "migration stream";

78 
rc
 = 
	`libxl_ªad_exa˘ly
(
˘x
, 
fd
, 
buf
, 
msgsz
, 
°ªam
, 
wh©
);

79 i‡(
rc
)  1;

81 i‡(
	`memcmp
(
buf
, 
msg
, 
msgsz
)) {

82 
	`Ârötf
(
°dîr
, "%s contained unexpected data instead of %s\n",

83 
°ªam
, 
wh©
);

84 i‡(
ru√
)

85 
	`Ârötf
(
°dîr
, "(comm™dÑu¿was: %†)\n", 
ru√
);

89 
	}
}

91 
	$migøti⁄_chûd_ªp‹t
(
ªcv_fd
) {

92 
pid_t
 
chûd
;

93 
°©us
, 
§
;

94 
timevÆ
 
now
, 
waôu¡û
, 
timeout
;

95 c⁄° 
timevÆ
 
pﬁlöãrvÆ
 = { 0, 1000 };

97 i‡(!
	`xl_chûd_pid
(
chûd_migøti⁄
)) ;

99 
	`CHK_SYSCALL
(
	`gëtimeofday
(&
waôu¡û
, 0));

100 
waôu¡û
.
tv_£c
 += 2;

103 
pid_t
 
migøti⁄_chûd
 = 
	`xl_chûd_pid
(
chûd_migøti⁄
);

104 
chûd
 = 
	`xl_waôpid
(
chûd_migøti⁄
, &
°©us
, 
WNOHANG
);

106 i‡(
chûd
 =
migøti⁄_chûd
) {

107 i‡(
°©us
)

108 
	`xl_ªp‹t_chûd_exô°©us
(
XTL_INFO
, 
chûd_migøti⁄
,

109 
migøti⁄_chûd
, 
°©us
);

112 i‡(
chûd
 == -1) {

113 
	`Ârötf
(
°dîr
, "wait for migration child [%ld] failed: %s\n",

114 ()
migøti⁄_chûd
, 
	`°ªº‹
(
î∫o
));

117 
	`as£π
(
chûd
 == 0);

119 
	`CHK_SYSCALL
(
	`gëtimeofday
(&
now
, 0));

120 i‡(
	`timîcmp
(&
now
, &
waôu¡û
, >)) {

121 
	`Ârötf
(
°dîr
, "migration child [%ld]ÇotÉxiting,ÇoÜonger"

123 ()
migøti⁄_chûd
);

126 
	`timîsub
(&
waôu¡û
, &
now
, &
timeout
);

128 i‡(
ªcv_fd
 >= 0) {

129 
fd_£t
 
ªadfds
, 
ex˚±fds
;

130 
	`FD_ZERO
(&
ªadfds
);

131 
	`FD_ZERO
(&
ex˚±fds
);

132 
	`FD_SET
(
ªcv_fd
, &
ªadfds
);

133 
	`FD_SET
(
ªcv_fd
, &
ex˚±fds
);

134 
§
 = 
	`£À˘
(
ªcv_fd
+1, &
ªadfds
,0,&
ex˚±fds
, &
timeout
);

136 i‡(
	`timîcmp
(&
timeout
, &
pﬁlöãrvÆ
, >))

137 
timeout
 = 
pﬁlöãrvÆ
;

138 
§
 = 
	`£À˘
(0,0,0,0, &
timeout
);

140 i‡(
§
 > 0) {

141 
ªcv_fd
 = -1;

142 } i‡(
§
 == 0) {

143 } i‡(
§
 == -1) {

144 i‡(
î∫o
 !
EINTR
) {

145 
	`Ârötf
(
°dîr
, "migration child [%ld]Éxit wait select"

147 ()
migøti⁄_chûd
, 
	`°ªº‹
(
î∫o
));

152 
	}
}

154 
	$migøã_do_¥ómbÀ
(
£nd_fd
, 
ªcv_fd
, 
pid_t
 
chûd
,

155 
uöt8_t
 *
c⁄fig_d©a
, 
c⁄fig_Àn
,

156 c⁄° *
ru√
)

158 
rc
 = 0;

160 i‡(
£nd_fd
 < 0 || 
ªcv_fd
 < 0) {

161 
	`Ârötf
(
°dîr
, "migrate_do_preamble: invalid file descriptors\n");

162 
	`exô
(
EXIT_FAILURE
);

165 
rc
 = 
	`migøã_ªad_fixedmesßge
(
ªcv_fd
, 
migøã_ª˚ivî_b™√r
,

166 (
migøã_ª˚ivî_b™√r
)-1,

167 "b™√r", 
ru√
);

168 i‡(
rc
) {

169 
	`˛o£
(
£nd_fd
);

170 
	`migøti⁄_chûd_ªp‹t
(
ªcv_fd
);

171 
	`exô
(
EXIT_FAILURE
);

174 
	`ßve_domaö_c‹e_wrôec⁄fig
(
£nd_fd
, "migration stream",

175 
c⁄fig_d©a
, 
c⁄fig_Àn
);

177 
	}
}

179 
	$migøã_domaö
(
uöt32_t
 
domid
, c⁄° *
ru√
, 
debug
,

180 c⁄° *
ovîride_c⁄fig_fûe
)

182 
pid_t
 
chûd
 = -1;

183 
rc
;

184 
£nd_fd
 = -1, 
ªcv_fd
 = -1;

185 *
away_dom«me
;

186 
rc_buf
;

187 
uöt8_t
 *
c⁄fig_d©a
;

188 
c⁄fig_Àn
, 
Êags
 = 
LIBXL_SUSPEND_LIVE
;

190 
	`ßve_domaö_c‹e_begö
(
domid
, 
ovîride_c⁄fig_fûe
,

191 &
c⁄fig_d©a
, &
c⁄fig_Àn
);

193 i‡(!
c⁄fig_Àn
) {

194 
	`Ârötf
(
°dîr
, "No config file stored forÑunning domainánd "

196 
	`exô
(
EXIT_FAILURE
);

199 
chûd
 = 
	`¸óã_migøti⁄_chûd
(
ru√
, &
£nd_fd
, &
ªcv_fd
);

201 
	`migøã_do_¥ómbÀ
(
£nd_fd
, 
ªcv_fd
, 
chûd
, 
c⁄fig_d©a
, 
c⁄fig_Àn
,

202 
ru√
);

204 
	`xé_°dio°ªam_adju°_Êags
(
loggî
, 
XTL_STDIOSTREAM_HIDE_PROGRESS
, 0);

206 i‡(
debug
)

207 
Êags
 |
LIBXL_SUSPEND_DEBUG
;

208 
rc
 = 
	`libxl_domaö_su•íd
(
˘x
, 
domid
, 
£nd_fd
, 
Êags
, 
NULL
);

209 i‡(
rc
) {

210 
	`Ârötf
(
°dîr
, "migration sender:Üibxl_domain_suspend failed"

211 " (rc=%d)\n", 
rc
);

212 i‡(
rc
 =
ERROR_GUEST_TIMEDOUT
)

213 
Áûed_su•íd
;

215 
Áûed_ªsume
;

222 
rc
 = 
	`migøã_ªad_fixedmesßge
(
ªcv_fd
, 
migøã_ª˚ivî_ªady
,

223 (
migøã_ª˚ivî_ªady
),

224 "ªady mesßge", 
ru√
);

225 i‡(
rc
Ë
Áûed_ªsume
;

227 
	`xé_°dio°ªam_adju°_Êags
(
loggî
, 0, 
XTL_STDIOSTREAM_HIDE_PROGRESS
);

233 
	`Ârötf
(
°dîr
, "migration sender: Target hasácknowledgedÅransfer.\n");

235 i‡(
comm⁄_dom«me
) {

236 
	`xa•rötf
(&
away_dom«me
, "%s--migøãdaway", 
comm⁄_dom«me
);

237 
rc
 = 
	`libxl_domaö_ª«me
(
˘x
, 
domid
, 
comm⁄_dom«me
, 
away_dom«me
);

238 i‡(
rc
Ë
Áûed_ªsume
;

246 
	`Ârötf
(
°dîr
, "migration sender: GivingÅargetÖermissionÅo start.\n");

248 
rc
 = 
	`libxl_wrôe_exa˘ly
(
˘x
, 
£nd_fd
,

249 
migøã_≥rmissi⁄_to_go
,

250 (
migøã_≥rmissi⁄_to_go
),

252 i‡(
rc
Ë
Áûed_badly
;

254 
rc
 = 
	`migøã_ªad_fixedmesßge
(
ªcv_fd
, 
migøã_ªp‹t
,

255 (
migøã_ªp‹t
),

256 "suc˚ss/ÁûuªÑï‹àmesßge", 
ru√
);

257 i‡(
rc
Ë
Áûed_badly
;

259 
rc
 = 
	`libxl_ªad_exa˘ly
(
˘x
, 
ªcv_fd
,

260 &
rc_buf
, 1,

262 i‡(
rc
Ë
Áûed_badly
;

264 i‡(
rc_buf
) {

265 
	`Ârötf
(
°dîr
, "migration sender: TargetÑeports startup failure"

266 " (°©u†codê%d).\n", 
rc_buf
);

268 
rc
 = 
	`migøã_ªad_fixedmesßge
(
ªcv_fd
, 
migøã_≥rmissi⁄_to_go
,

269 (
migøã_≥rmissi⁄_to_go
),

271 
ru√
);

272 i‡(
rc
Ë
Áûed_badly
;

274 
	`Ârötf
(
°dîr
, "migration sender: TryingÅoÑesumeát ourÉnd.\n");

276 i‡(
comm⁄_dom«me
) {

277 
	`libxl_domaö_ª«me
(
˘x
, 
domid
, 
away_dom«me
, 
comm⁄_dom«me
);

279 
rc
 = 
	`libxl_domaö_ªsume
(
˘x
, 
domid
, 1, 0);

280 i‡(!
rc
Ë
	`Ârötf
(
°dîr
, "migration sender: Resumed OK.\n");

282 
	`Ârötf
(
°dîr
, "Migration failed dueÅoÖroblemsátÅarget.\n");

283 
	`exô
(
EXIT_FAILURE
);

286 
	`Ârötf
(
°dîr
, "migration sender: TargetÑeports successful startup.\n");

287 
	`libxl_domaö_de°roy
(
˘x
, 
domid
, 0);

288 
	`Ârötf
(
°dîr
, "Migration successful.\n");

289 
	`exô
(
EXIT_SUCCESS
);

291 
Áûed_su•íd
:

292 
	`˛o£
(
£nd_fd
);

293 
	`migøti⁄_chûd_ªp‹t
(
ªcv_fd
);

294 
	`Ârötf
(
°dîr
, "Migration failed, failedÅo suspendát sender.\n");

295 
	`exô
(
EXIT_FAILURE
);

297 
Áûed_ªsume
:

298 
	`˛o£
(
£nd_fd
);

299 
	`migøti⁄_chûd_ªp‹t
(
ªcv_fd
);

300 
	`Ârötf
(
°dîr
, "Migration failed,Ñesumingát sender.\n");

301 
	`libxl_domaö_ªsume
(
˘x
, 
domid
, 1, 0);

302 
	`exô
(
EXIT_FAILURE
);

304 
Áûed_badly
:

305 
	`Ârötf
(
°dîr
,

313 
	`˛o£
(
£nd_fd
);

314 
	`migøti⁄_chûd_ªp‹t
(
ªcv_fd
);

315 
	`exô
(
EXIT_FAILURE
);

316 
	}
}

318 
	$migøã_ª˚ive
(
debug
, 
d´m⁄ize
, 
m⁄ô‹
,

319 
∑u£_a·î_migøti⁄
,

320 
£nd_fd
, 
ªcv_fd
,

321 
libxl_checkpoöãd_°ªam
 
checkpoöãd
,

322 *
cﬁo_¥oxy_s¸ùt
,

323 
boﬁ
 
u£r•a˚_cﬁo_¥oxy
)

325 
uöt32_t
 
domid
;

326 
rc
, 
rc2
;

327 
rc_buf
;

328 *
migøti⁄_dom«me
;

329 
domaö_¸óã
 
dom_öfo
;

331 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

334 
	`Ârötf
(
°dîr
, "migrationÅarget: ReadyÅoÑeceive domain.\n");

336 
	`CHK_ERRNOVAL
(
	`libxl_wrôe_exa˘ly
(

337 
˘x
, 
£nd_fd
, 
migøã_ª˚ivî_b™√r
,

338 (
migøã_ª˚ivî_b™√r
)-1,

341 
	`mem£t
(&
dom_öfo
, 0, (dom_info));

342 
dom_öfo
.
debug
 = debug;

343 
dom_öfo
.
d´m⁄ize
 = daemonize;

344 
dom_öfo
.
m⁄ô‹
 = monitor;

345 
dom_öfo
.
∑u£d
 = 1;

346 
dom_öfo
.
migøã_fd
 = 
ªcv_fd
;

347 
dom_öfo
.
£nd_back_fd
 = 
£nd_fd
;

348 
dom_öfo
.
migøti⁄_dom«me_r
 = &
migøti⁄_dom«me
;

349 
dom_öfo
.
checkpoöãd_°ªam
 = 
checkpoöãd
;

350 
dom_öfo
.
cﬁo_¥oxy_s¸ùt
 = colo_proxy_script;

351 
dom_öfo
.
u£r•a˚_cﬁo_¥oxy
 = userspace_colo_proxy;

353 
rc
 = 
	`¸óã_domaö
(&
dom_öfo
);

354 i‡(
rc
 < 0) {

355 
	`Ârötf
(
°dîr
, "migrationÅarget: Domain creation failed"

356 " (codê%d).\n", 
rc
);

357 
	`exô
(
EXIT_FAILURE
);

360 
domid
 = 
rc
;

362 
checkpoöãd
) {

363 
LIBXL_CHECKPOINTED_STREAM_REMUS
:

364 
LIBXL_CHECKPOINTED_STREAM_COLO
:

366 c⁄° *
ha
 = 
checkpoöãd
 =
LIBXL_CHECKPOINTED_STREAM_COLO
 ?

371 
	`Ârötf
(
°dîr
, "migrationÅarget: %s Failover for domain %u\n",

372 
ha
, 
domid
);

384 i‡(
migøti⁄_dom«me
) {

385 
rc
 = 
	`libxl_domaö_ª«me
(
˘x
, 
domid
, 
migøti⁄_dom«me
,

386 
comm⁄_dom«me
);

387 i‡(
rc
)

388 
	`Ârötf
(
°dîr
, "migrationÅarget (%s): "

390 
ha
, 
migøti⁄_dom«me
, 
comm⁄_dom«me
, 
rc
);

393 i‡(
checkpoöãd
 =
LIBXL_CHECKPOINTED_STREAM_COLO
)

395 
	`exô
(
rc
 ? -
ERROR_FAIL
: 0);

397 
rc
 = 
	`libxl_domaö_u≈au£
(
˘x
, 
domid
);

398 i‡(
rc
)

399 
	`Ârötf
(
°dîr
, "migrationÅarget (%s): "

401 
ha
, 
comm⁄_dom«me
, 
domid
, 
rc
);

403 
	`exô
(
rc
 ? 
EXIT_FAILURE
 : 
EXIT_SUCCESS
);

410 
	`Ârötf
(
°dîr
, "migrationÅarget: Transfer complete,"

413 
rc
 = 
	`libxl_wrôe_exa˘ly
(
˘x
, 
£nd_fd
,

414 
migøã_ª˚ivî_ªady
,

415 (
migøã_ª˚ivî_ªady
),

417 i‡(
rc
Ë
	`exô
(
EXIT_FAILURE
);

419 
rc
 = 
	`migøã_ªad_fixedmesßge
(
ªcv_fd
, 
migøã_≥rmissi⁄_to_go
,

420 (
migøã_≥rmissi⁄_to_go
),

422 i‡(
rc
Ë
≥rh≠s_de°roy_nŸify_rc
;

424 
	`Ârötf
(
°dîr
, "migrationÅarget: GotÖermission, starting domain.\n");

426 i‡(
migøti⁄_dom«me
) {

427 
rc
 = 
	`libxl_domaö_ª«me
(
˘x
, 
domid
, 
migøti⁄_dom«me
, 
comm⁄_dom«me
);

428 i‡(
rc
Ë
≥rh≠s_de°roy_nŸify_rc
;

431 i‡(!
∑u£_a·î_migøti⁄
) {

432 
rc
 = 
	`libxl_domaö_u≈au£
(
˘x
, 
domid
);

433 i‡(
rc
Ë
≥rh≠s_de°roy_nŸify_rc
;

436 
	`Ârötf
(
°dîr
, "migrationÅarget: Domain started successsfully.\n");

437 
rc
 = 0;

439 
≥rh≠s_de°roy_nŸify_rc
:

440 
rc2
 = 
	`libxl_wrôe_exa˘ly
(
˘x
, 
£nd_fd
,

441 
migøã_ªp‹t
, (migrate_report),

444 i‡(
rc2
Ë
	`exô
(
EXIT_FAILURE
);

446 
rc_buf
 = -
rc
;

447 
	`as£π
(!!
rc_buf
 =!!
rc
);

448 
rc2
 = 
	`libxl_wrôe_exa˘ly
(
˘x
, 
£nd_fd
, &
rc_buf
, 1,

451 i‡(
rc2
Ë
	`exô
(
EXIT_FAILURE
);

453 i‡(
rc
) {

454 
	`Ârötf
(
°dîr
, "migrationÅarget: Failure, destroying our copy.\n");

456 
rc2
 = 
	`libxl_domaö_de°roy
(
˘x
, 
domid
, 0);

457 i‡(
rc2
) {

458 
	`Ârötf
(
°dîr
, "migrationÅarget: FailedÅo destroy our copy"

459 " (codê%d).\n", 
rc2
);

460 
	`exô
(
EXIT_FAILURE
);

463 
	`Ârötf
(
°dîr
, "migrationÅarget: Cleanup OK, granting sender"

466 
rc2
 = 
	`libxl_wrôe_exa˘ly
(
˘x
, 
£nd_fd
,

467 
migøã_≥rmissi⁄_to_go
,

468 (
migøã_≥rmissi⁄_to_go
),

471 i‡(
rc2
Ë
	`exô
(
EXIT_FAILURE
);

474 
	`exô
(
EXIT_SUCCESS
);

475 
	}
}

478 
	$maö_migøã_ª˚ive
(
¨gc
, **
¨gv
)

480 
debug
 = 0, 
d´m⁄ize
 = 1, 
m⁄ô‹
 = 1, 
∑u£_a·î_migøti⁄
 = 0;

481 
libxl_checkpoöãd_°ªam
 
checkpoöãd
 = 
LIBXL_CHECKPOINTED_STREAM_NONE
;

482 
›t
;

483 
boﬁ
 
u£r•a˚_cﬁo_¥oxy
 = 
Ál£
;

484 *
s¸ùt
 = 
NULL
;

485 
›ti⁄
 
›ts
[] = {

490 
COMMON_LONG_OPTS


493 
	`SWITCH_FOREACH_OPT
(
›t
, "FedΩ", 
›ts
, "migrate-receive", 0) {

495 
d´m⁄ize
 = 0;

498 
d´m⁄ize
 = 0;

499 
m⁄ô‹
 = 0;

502 
debug
 = 1;

505 
checkpoöãd
 = 
LIBXL_CHECKPOINTED_STREAM_REMUS
;

508 
checkpoöãd
 = 
LIBXL_CHECKPOINTED_STREAM_COLO
;

511 
s¸ùt
 = 
›èrg
;

514 
u£r•a˚_cﬁo_¥oxy
 = 
åue
;

517 
∑u£_a·î_migøti⁄
 = 1;

521 i‡(
¨gc
-
›töd
 != 0) {

522 
	`hñp
("migrate-receive");

523  
EXIT_FAILURE
;

525 
	`migøã_ª˚ive
(
debug
, 
d´m⁄ize
, 
m⁄ô‹
, 
∑u£_a·î_migøti⁄
,

526 
STDOUT_FILENO
, 
STDIN_FILENO
,

527 
checkpoöãd
, 
s¸ùt
, 
u£r•a˚_cﬁo_¥oxy
);

529  
EXIT_SUCCESS
;

530 
	}
}

532 
	$maö_migøã
(
¨gc
, **
¨gv
)

534 
uöt32_t
 
domid
;

535 c⁄° *
c⁄fig_fûíame
 = 
NULL
;

536 c⁄° *
ssh_comm™d
 = "ssh";

537 *
ru√
 = 
NULL
;

538 *
ho°
;

539 
›t
, 
d´m⁄ize
 = 1, 
m⁄ô‹
 = 1, 
debug
 = 0, 
∑u£_a·î_migøti⁄
 = 0;

540 
›ti⁄
 
›ts
[] = {

543 
COMMON_LONG_OPTS


546 
	`SWITCH_FOREACH_OPT
(
›t
, "FC:s:ï", 
›ts
, "migrate", 2) {

548 
c⁄fig_fûíame
 = 
›èrg
;

551 
ssh_comm™d
 = 
›èrg
;

554 
d´m⁄ize
 = 0;

557 
d´m⁄ize
 = 0;

558 
m⁄ô‹
 = 0;

561 
∑u£_a·î_migøti⁄
 = 1;

564 
debug
 = 1;

571 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

572 
ho°
 = 
¨gv
[
›töd
 + 1];

574 
boﬁ
 
∑ss_ây_¨g
 = 
¥ogªss_u£_¸
 || (
	`ißây
(2) > 0);

576 i‡(!
ssh_comm™d
[0]) {

577 
ru√

ho°
;

579 
vîbo£_buf
[
mömsgÀvñ_deÁu…
+3];

580 
vîbo£_Àn
;

581 
vîbo£_buf
[0] = ' ';

582 
vîbo£_buf
[1] = '-';

583 
	`mem£t
(
vîbo£_buf
+2, 'v', 
mömsgÀvñ_deÁu…
);

584 
vîbo£_buf
[(verbose_buf)-1] = 0;

585 i‡(
mömsgÀvñ
 =
mömsgÀvñ_deÁu…
) {

586 
vîbo£_Àn
 = 0;

588 
vîbo£_Àn
 = (
mömsgÀvñ_deÁu…
 - 
mömsgÀvñ
) + 2;

590 
	`xa•rötf
(&
ru√
, "exec %s %s xl%s%.*s migrate-receive%s%s%s",

591 
ssh_comm™d
, 
ho°
,

592 
∑ss_ây_¨g
 ? " -t" : "",

593 
vîbo£_Àn
, 
vîbo£_buf
,

594 
d´m⁄ize
 ? "" : " -e",

595 
debug
 ? " -d" : "",

596 
∑u£_a·î_migøti⁄
 ? " -p" : "");

599 
	`migøã_domaö
(
domid
, 
ru√
, 
debug
, 
c⁄fig_fûíame
);

600  
EXIT_SUCCESS
;

601 
	}
}

603 
	$maö_ªmus
(
¨gc
, **
¨gv
)

605 
uöt32_t
 
domid
;

606 
›t
, 
rc
, 
d´m⁄ize
 = 1;

607 c⁄° *
ssh_comm™d
 = "ssh";

608 *
ho°
 = 
NULL
, *
ru√
 = NULL;

609 
libxl_domaö_ªmus_öfo
 
r_öfo
;

610 
£nd_fd
 = -1, 
ªcv_fd
 = -1;

611 
pid_t
 
chûd
 = -1;

612 
uöt8_t
 *
c⁄fig_d©a
;

613 
c⁄fig_Àn
;

615 
	`mem£t
(&
r_öfo
, 0, (
libxl_domaö_ªmus_öfo
));

617 
	`SWITCH_FOREACH_OPT
(
›t
, "Fbundi:s:N:e˝", 
NULL
, "remus", 2) {

619 
r_öfo
.
öãrvÆ
 = 
	`©oi
(
›èrg
);

622 
	`libxl_defboﬁ_£t
(&
r_öfo
.
Ælow_unß„
, 
åue
);

625 
	`libxl_defboﬁ_£t
(&
r_öfo
.
bœckhﬁe
, 
åue
);

628 
	`libxl_defboﬁ_£t
(&
r_öfo
.
com¥essi⁄
, 
Ál£
);

631 
	`libxl_defboﬁ_£t
(&
r_öfo
.
√tbuf
, 
Ál£
);

634 
r_öfo
.
√tbufs¸ùt
 = 
›èrg
;

637 
	`libxl_defboﬁ_£t
(&
r_öfo
.
diskbuf
, 
Ál£
);

640 
ssh_comm™d
 = 
›èrg
;

643 
d´m⁄ize
 = 0;

646 
	`libxl_defboﬁ_£t
(&
r_öfo
.
cﬁo
, 
åue
);

649 
	`libxl_defboﬁ_£t
(&
r_öfo
.
u£r•a˚_cﬁo_¥oxy
, 
åue
);

652 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

653 
ho°
 = 
¨gv
[
›töd
 + 1];

656 
	`libxl_defboﬁ_£tdeÁu…
(&
r_öfo
.
bœckhﬁe
, 
Ál£
);

657 
	`libxl_defboﬁ_£tdeÁu…
(&
r_öfo
.
cﬁo
, 
Ál£
);

658 
	`libxl_defboﬁ_£tdeÁu…
(&
r_öfo
.
u£r•a˚_cﬁo_¥oxy
, 
Ál£
);

660 i‡(!
	`libxl_defboﬁ_vÆ
(
r_öfo
.
cﬁo
Ë&& !r_öfo.
öãrvÆ
)

661 
r_öfo
.
öãrvÆ
 = 200;

663 i‡(
	`libxl_defboﬁ_vÆ
(
r_öfo
.
u£r•a˚_cﬁo_¥oxy
) &&

664 !
	`libxl_defboﬁ_vÆ
(
r_öfo
.
cﬁo
)) {

665 
	`Ârötf
(
°dîr
, "Option -p must be used in conjunction with -c");

666 
	`exô
(-1);

669 i‡(
	`libxl_defboﬁ_vÆ
(
r_öfo
.
cﬁo
)) {

670 i‡(
r_öfo
.
öãrvÆ
 || 
	`libxl_defboﬁ_vÆ
‘_öfo.
bœckhﬁe
) ||

671 !
	`libxl_defboﬁ_is_deÁu…
(
r_öfo
.
√tbuf
) ||

672 !
	`libxl_defboﬁ_is_deÁu…
(
r_öfo
.
diskbuf
)) {

673 
	`≥º‹
("option -c is conflict with -i, -d, -n or -b");

674 
	`exô
(-1);

677 i‡(
	`libxl_defboﬁ_is_deÁu…
(
r_öfo
.
com¥essi⁄
)) {

678 
	`≥º‹
("COLO can't be used with memory compression. "

680 
	`libxl_defboﬁ_£t
(&
r_öfo
.
com¥essi⁄
, 
Ál£
);

684 i‡(!
r_öfo
.
√tbufs¸ùt
) {

685 i‡(
	`libxl_defboﬁ_vÆ
(
r_öfo
.
cﬁo
))

686 
r_öfo
.
√tbufs¸ùt
 = 
deÁu…_cﬁo_¥oxy_s¸ùt
;

688 
r_öfo
.
√tbufs¸ùt
 = 
deÁu…_ªmus_√tbufs¸ùt
;

691 i‡(
	`libxl_defboﬁ_vÆ
(
r_öfo
.
bœckhﬁe
)) {

692 
£nd_fd
 = 
	`›í
("/dev/nuŒ", 
O_RDWR
, 0644);

693 i‡(
£nd_fd
 < 0) {

694 
	`≥º‹
("failedÅo open /dev/null");

695 
	`exô
(
EXIT_FAILURE
);

699 i‡(!
ssh_comm™d
[0]) {

700 
ru√
 = 
ho°
;

702 i‡(!
	`libxl_defboﬁ_vÆ
(
r_öfo
.
cﬁo
)) {

703 
	`xa•rötf
(&
ru√
, "exec %s %s xl migrate-receive %s %s",

704 
ssh_comm™d
, 
ho°
,

706 
d´m⁄ize
 ? "" : " -e");

708 
	`xa•rötf
(&
ru√
, "exec %s %s xl migrate-receive %s %s %s %s %s",

709 
ssh_comm™d
, 
ho°
,

711 
r_öfo
.
√tbufs¸ùt
 ? "--coloft-script" : "",

712 
r_öfo
.
√tbufs¸ùt
 ?Ñ_info.netbufscript : "",

713 
	`libxl_defboﬁ_vÆ
(
r_öfo
.
u£r•a˚_cﬁo_¥oxy
) ?

715 
d´m⁄ize
 ? "" : " -e");

719 
	`ßve_domaö_c‹e_begö
(
domid
, 
NULL
, &
c⁄fig_d©a
, &
c⁄fig_Àn
);

721 i‡(!
c⁄fig_Àn
) {

722 
	`Ârötf
(
°dîr
, "No config file stored forÑunning domainánd "

724 
	`exô
(
EXIT_FAILURE
);

727 
chûd
 = 
	`¸óã_migøti⁄_chûd
(
ru√
, &
£nd_fd
, &
ªcv_fd
);

729 
	`migøã_do_¥ómbÀ
(
£nd_fd
, 
ªcv_fd
, 
chûd
, 
c⁄fig_d©a
, 
c⁄fig_Àn
,

730 
ru√
);

732 i‡(
ssh_comm™d
[0])

733 
	`‰ì
(
ru√
);

737 
rc
 = 
	`libxl_domaö_ªmus_°¨t
(
˘x
, &
r_öfo
, 
domid
, 
£nd_fd
, 
ªcv_fd
, 0);

742 i‡(
	`libxl_domaö_öfo
(
˘x
, 0, 
domid
)) {

743 
	`Ârötf
(
°dîr
, "%s: Primary domain has been destroyed.\n",

744 
	`libxl_defboﬁ_vÆ
(
r_öfo
.
cﬁo
) ? "COLO" : "Remus");

745 
	`˛o£
(
£nd_fd
);

746  
EXIT_SUCCESS
;

753 i‡(
rc
 =
ERROR_GUEST_TIMEDOUT
)

754 
	`Ârötf
(
°dîr
, "FailedÅo suspend domainátÖrimary.\n");

756 
	`Ârötf
(
°dîr
, "%s: Backup failed?Ñesuming domainátÖrimary.\n",

757 
	`libxl_defboﬁ_vÆ
(
r_öfo
.
cﬁo
) ? "COLO" : "Remus");

758 
	`libxl_domaö_ªsume
(
˘x
, 
domid
, 1, 0);

761 
	`˛o£
(
£nd_fd
);

762  
EXIT_FAILURE
;

763 
	}
}

	@xl_misc.c

15 
	~<limôs.h
>

16 
	~<°dlib.h
>

18 
	~<libxl.h
>

19 
	~<libxl_utûs.h
>

20 
	~<libxlutû.h
>

22 
	~"xl.h
"

23 
	~"xl_utûs.h
"

24 
	~"xl_∑r£.h
"

26 
	$buâ⁄_¥ess
(
uöt32_t
 
domid
, c⁄° *
b
)

28 
libxl_åiggî
 
åiggî
;

30 i‡(!
	`°rcmp
(
b
, "power")) {

31 
åiggî
 = 
LIBXL_TRIGGER_POWER
;

32 } i‡(!
	`°rcmp
(
b
, "sleep")) {

33 
åiggî
 = 
LIBXL_TRIGGER_SLEEP
;

35 
	`Ârötf
(
°dîr
, "%†i†™ invÆid buâ⁄ idítifõr\n", 
b
);

36 
	`exô
(
EXIT_FAILURE
);

39 
	`libxl_£nd_åiggî
(
˘x
, 
domid
, 
åiggî
, 0);

40 
	}
}

42 
	$maö_buâ⁄_¥ess
(
¨gc
, **
¨gv
)

44 
›t
;

46 
	`Ârötf
(
°dîr
, "WARNING: \"button-press\" is deprecated. "

50 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "button-press", 2) {

54 
	`buâ⁄_¥ess
(
	`föd_domaö
(
¨gv
[
›töd
]),árgv[optind + 1]);

57 
	}
}

59 
	$maö_ª«me
(
¨gc
, **
¨gv
)

61 
uöt32_t
 
domid
;

62 
›t
;

63 c⁄° *
dom
, *
√w_«me
;

65 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "rename", 2) {

69 
dom
 = 
¨gv
[
›töd
++];

70 
√w_«me
 = 
¨gv
[
›töd
];

72 
domid
 = 
	`föd_domaö
(
dom
);

73 i‡(
	`libxl_domaö_ª«me
(
˘x
, 
domid
, 
comm⁄_dom«me
, 
√w_«me
)) {

74 
	`Ârötf
(
°dîr
, "C™'àª«mêdomaö '%s'.\n", 
dom
);

79 
	}
}

81 
	$maö_åiggî
(
¨gc
, **
¨gv
)

83 
uöt32_t
 
domid
;

84 
›t
;

85 *
íd±r
 = 
NULL
;

86 
v˝uid
 = 0;

87 c⁄° *
åiggî_«me
 = 
NULL
;

88 
libxl_åiggî
 
åiggî
;

90 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "trigger", 2) {

94 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
++]);

96 
åiggî_«me
 = 
¨gv
[
›töd
++];

97 i‡(
	`libxl_åiggî_‰om_°rög
(
åiggî_«me
, &
åiggî
)) {

98 
	`Ârötf
(
°dîr
, "InvÆidÅriggî \"%s\"\n", 
åiggî_«me
);

99  
EXIT_FAILURE
;

102 i‡(
¨gv
[
›töd
]) {

103 
v˝uid
 = 
	`°πﬁ
(
¨gv
[
›töd
], &
íd±r
, 10);

104 i‡(
v˝uid
 =0 && !
	`°rcmp
(
íd±r
, 
¨gv
[
›töd
])) {

105 
	`Ârötf
(
°dîr
, "Invalid vcpuid, using default vcpuid=0.\n\n");

109 
	`libxl_£nd_åiggî
(
˘x
, 
domid
, 
åiggî
, 
v˝uid
);

111  
EXIT_SUCCESS
;

112 
	}
}

114 
	$maö_sy§q
(
¨gc
, **
¨gv
)

116 
uöt32_t
 
domid
;

117 
›t
;

118 c⁄° *
sy§q
 = 
NULL
;

120 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "sysrq", 2) {

124 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
++]);

126 
sy§q
 = 
¨gv
[
›töd
];

128 i‡(
sy§q
[1] != '\0') {

129 
	`Ârötf
(
°dîr
, "Invalid sysrq.\n\n");

130 
	`hñp
("sysrq");

131  
EXIT_FAILURE
;

134 
	`libxl_£nd_sy§q
(
˘x
, 
domid
, 
sy§q
[0]);

136  
EXIT_SUCCESS
;

137 
	}
}

139 
	$maö_debug_keys
(
¨gc
, **
¨gv
)

141 
›t
;

142 *
keys
;

144 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "debug-keys", 1) {

148 
keys
 = 
¨gv
[
›töd
];

150 i‡(
	`libxl_£nd_debug_keys
(
˘x
, 
keys
)) {

151 
	`Ârötf
(
°dîr
, "ˇ¬Ÿ síd debug keys: %s\n", 
keys
);

152  
EXIT_FAILURE
;

155  
EXIT_SUCCESS
;

156 
	}
}

158 
	$maö_£t_∑ømëîs
(
¨gc
, **
¨gv
)

160 
›t
;

161 *
∑øms
;

163 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "set-parameters", 1) {

167 
∑øms
 = 
¨gv
[
›töd
];

169 i‡(
	`libxl_£t_∑ømëîs
(
˘x
, 
∑øms
)) {

170 
	`Ârötf
(
°dîr
, "ˇ¬Ÿ sëÖ¨amëîs: %s\n", 
∑øms
);

171 
	`Ârötf
(
°dîr
, "Use \"xl dmesg\"ÅoÜook forÖossibleÑeason.\n");

172  
EXIT_FAILURE
;

175  
EXIT_SUCCESS
;

176 
	}
}

178 
	$maö_devd
(
¨gc
, **
¨gv
)

180 
ªt
 = 0, 
›t
 = 0, 
d´m⁄ize
 = 1;

181 c⁄° *
pidfûe
 = 
NULL
;

182 c⁄° 
›ti⁄
 
›ts
[] = {

184 
COMMON_LONG_OPTS
,

188 
	`SWITCH_FOREACH_OPT
(
›t
, "Fp:", 
›ts
, "devd", 0) {

190 
d´m⁄ize
 = 0;

193 
pidfûe
 = 
›èrg
;

197 i‡(
d´m⁄ize
) {

198 
ªt
 = 
	`do_d´m⁄ize
("xldevd", 
pidfûe
);

199 i‡(
ªt
) {

200 
ªt
 = (ret == 1) ? 0 :Ñet;

201 
out
;

205 
ªt
 = 
	`libxl_devi˚_evíts_h™dÀr
(
˘x
, 0Ë? 
EXIT_FAILURE
 : 
EXIT_SUCCESS
;

207 
out
:

208  
ªt
;

209 
	}
}

211 
	$maö_qemu_m⁄ô‹_comm™d
(
¨gc
, **
¨gv
)

213 
›t
;

214 
uöt32_t
 
domid
;

215 *
cmd
;

216 *
ouçut
;

217 
ªt
;

219 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "qemu-monitor-command", 2) {

223 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

224 
cmd
 = 
¨gv
[
›töd
 + 1];

226 i‡(
¨gc
 - 
›töd
 > 2) {

227 
	`Ârötf
(
°dîr
, "Invalidárguments.\n");

228  
EXIT_FAILURE
;

231 
ªt
 = 
	`libxl_qemu_m⁄ô‹_comm™d
(
˘x
, 
domid
, 
cmd
, &
ouçut
);

232 i‡(!
ªt
 && 
ouçut
) {

233 
	`¥ötf
("%s\n", 
ouçut
);

234 
	`‰ì
(
ouçut
);

237  
ªt
 ? 
EXIT_FAILURE
 : 
EXIT_SUCCESS
;

238 
	}
}

240 
	$c‹e_dump_domaö
(
uöt32_t
 
domid
, c⁄° *
fûíame
)

242 
rc
;

244 
rc
=
	`libxl_domaö_c‹e_dump
(
˘x
, 
domid
, 
fûíame
, 
NULL
);

245 i‡(
rc
Ë{ 
	`Ârötf
(
°dîr
,"c‹êdum∞Áûed (rc=%d)\n",rc);
	`exô
(
EXIT_FAILURE
); }

246 
	}
}

248 
	$maö_dump_c‹e
(
¨gc
, **
¨gv
)

250 
›t
;

252 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "dump-core", 2) {

256 
	`c‹e_dump_domaö
(
	`föd_domaö
(
¨gv
[
›töd
]),árgv[optind + 1]);

257  
EXIT_SUCCESS
;

258 
	}
}

260 
¥ötf_öfo
(
ouçut_f‹m©
 output_format,

261 
domid
,

262 
libxl_domaö_c⁄fig
 *
d_c⁄fig
, 
FILE
 *
fh
);

263 
	$maö_c⁄fig_upd©e
(
¨gc
, **
¨gv
)

265 
uöt32_t
 
domid
;

266 c⁄° *
fûíame
 = 
NULL
;

267 *
exåa_c⁄fig
 = 
NULL
;

268 *
c⁄fig_d©a
 = 0;

269 
c⁄fig_Àn
 = 0;

270 
libxl_domaö_c⁄fig
 
d_c⁄fig
;

271 
›t
, 
rc
;

272 
debug
 = 0;

273 
›ti⁄
 
›ts
[] = {

275 
COMMON_LONG_OPTS


278 i‡(
¨gc
 < 2) {

279 
	`Ârötf
(
°dîr
, "xl config-updateÑequiresá domainárgument\n");

280 
	`hñp
("config-update");

281 
	`exô
(1);

284 
	`Ârötf
(
°dîr
, "WARNING: xlÇow has better capabilityÅo manage domain configuration, "

287 
domid
 = 
	`föd_domaö
(
¨gv
[1]);

288 
¨gc
--; 
¨gv
++;

290 i‡(
¨gv
[1] &&árgv[1][0] !'-' && !
	`°rchr
(argv[1], '=')) {

291 
fûíame
 = 
¨gv
[1];

292 
¨gc
--; 
¨gv
++;

295 
	`SWITCH_FOREACH_OPT
(
›t
, "dqf:", 
›ts
, "config_update", 0) {

297 
debug
 = 1;

300 
fûíame
 = 
›èrg
;

304 ; 
›töd
 < 
¨gc
; optind++) {

305 i‡(
	`°rchr
(
¨gv
[
›töd
], '='Ë!
NULL
) {

306 
	`°rög_ªÆloc_≠≥nd
(&
exåa_c⁄fig
, 
¨gv
[
›töd
]);

307 
	`°rög_ªÆloc_≠≥nd
(&
exåa_c⁄fig
, "\n");

308 } i‡(!
fûíame
) {

309 
fûíame
 = 
¨gv
[
›töd
];

311 
	`hñp
("create");

312 
	`‰ì
(
exåa_c⁄fig
);

316 i‡(
fûíame
) {

317 
	`‰ì
(
c⁄fig_d©a
); config_data = 0;

318 
rc
 = 
	`libxl_ªad_fûe_c⁄ã¡s
(
˘x
, 
fûíame
,

319 &
c⁄fig_d©a
, &
c⁄fig_Àn
);

320 i‡(
rc
Ë{ 
	`Ârötf
(
°dîr
, "FailedÅoÑead config file: %s: %s\n",

321 
fûíame
, 
	`°ªº‹
(
î∫o
));

322 
	`‰ì
(
exåa_c⁄fig
);  
ERROR_FAIL
; }

323 i‡(
exåa_c⁄fig
 && 
	`°æí
(extra_config)) {

324 i‡(
c⁄fig_Àn
 > 
INT_MAX
 - (
	`°æí
(
exåa_c⁄fig
) + 2 + 1)) {

325 
	`Ârötf
(
°dîr
, "FailedÅoáttachÉxtra configuration\n");

326 
	`exô
(1);

329 
c⁄fig_d©a
 = 
	`ªÆloc
(c⁄fig_d©a, 
c⁄fig_Àn


330 + 
	`°æí
(
exåa_c⁄fig
) + 2 + 1);

331 i‡(!
c⁄fig_d©a
) {

332 
	`Ârötf
(
°dîr
, "FailedÅoÑealloc config_data\n");

333 
	`exô
(1);

335 
c⁄fig_Àn
 +
	`•rötf
(
c⁄fig_d©a
 + config_len, "\n%s\n",

336 
exåa_c⁄fig
);

339 
	`Ârötf
(
°dîr
, "Config fileÇot specified\n");

340 
	`exô
(1);

343 
	`libxl_domaö_c⁄fig_öô
(&
d_c⁄fig
);

345 
	`∑r£_c⁄fig_d©a
(
fûíame
, 
c⁄fig_d©a
, 
c⁄fig_Àn
, &
d_c⁄fig
, 
NULL
);

347 i‡(
debug
 || 
dryrun_⁄ly
)

348 
	`¥ötf_öfo
(
deÁu…_ouçut_f‹m©
, -1, &
d_c⁄fig
, 
°dout
);

350 i‡(!
dryrun_⁄ly
) {

351 
	`Ârötf
(
°dîr
, "£âög dom%u c⁄figuøti⁄\n", 
domid
);

352 
rc
 = 
	`libxl_u£rd©a_°‹e
(
˘x
, 
domid
, "xl",

353 
c⁄fig_d©a
, 
c⁄fig_Àn
);

354 i‡(
rc
) {

355 
	`Ârötf
(
°dîr
, "failedÅo update configuration\n");

356 
	`exô
(1);

360 
	`libxl_domaö_c⁄fig_di•o£
(&
d_c⁄fig
);

362 
	`‰ì
(
c⁄fig_d©a
);

363 
	`‰ì
(
exåa_c⁄fig
);

365 
	}
}

	@xl_nic.c

15 
	~<°dlib.h
>

17 
	~<libxl.h
>

18 
	~<libxl_utûs.h
>

19 
	~<libxlutû.h
>

21 
	~"xl.h
"

22 
	~"xl_utûs.h
"

23 
	~"xl_∑r£.h
"

25 
£t_deÁu…_nic_vÆues
(
libxl_devi˚_nic
 *
nic
);

26 
	$£t_deÁu…_nic_vÆues
(
libxl_devi˚_nic
 *
nic
)

29 i‡(
deÁu…_vifs¸ùt
) {

30 
	`‰ì
(
nic
->
s¸ùt
);

31 
nic
->
s¸ùt
 = 
	`°rdup
(
deÁu…_vifs¸ùt
);

34 i‡(
deÁu…_bridge
) {

35 
	`‰ì
(
nic
->
bridge
);

36 
nic
->
bridge
 = 
	`°rdup
(
deÁu…_bridge
);

39 i‡(
deÁu…_g©ewaydev
) {

40 
	`‰ì
(
nic
->
g©ewaydev
);

41 
nic
->
g©ewaydev
 = 
	`°rdup
(
deÁu…_g©ewaydev
);

44 i‡(
deÁu…_vifbackíd
) {

45 
	`‰ì
(
nic
->
backíd_dom«me
);

46 
nic
->
backíd_dom«me
 = 
	`°rdup
(
deÁu…_vifbackíd
);

48 
	}
}

50 
	$maö_√tw‹k©èch
(
¨gc
, **
¨gv
)

52 
uöt32_t
 
domid
;

53 
›t
;

54 
libxl_devi˚_nic
 
nic
;

55 
XLU_C⁄fig
 *
c⁄fig
 = 0;

57 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "network-attach", 1) {

61 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

63 
c⁄fig

	`xlu_cfg_öô
(
°dîr
, "commandÜine");

64 i‡(!
c⁄fig
) {

65 
	`Ârötf
(
°dîr
, "FailedÅoállocate for configuration\n");

69 
	`libxl_devi˚_nic_öô
(&
nic
);

70 
	`£t_deÁu…_nic_vÆues
(&
nic
);

72 
¨gv
 +
›töd
+1, 
¨gc
 -= optind+1;árgc > 0; ++argv, --argc) {

73 i‡(
	`∑r£_nic_c⁄fig
(&
nic
, &
c⁄fig
, *
¨gv
))

77 i‡(
dryrun_⁄ly
) {

78 *
js⁄
 = 
	`libxl_devi˚_nic_to_js⁄
(
˘x
, &
nic
);

79 
	`¥ötf
("vif: %s\n", 
js⁄
);

80 
	`‰ì
(
js⁄
);

81 
	`libxl_devi˚_nic_di•o£
(&
nic
);

82 i‡(
	`„º‹
(
°dout
Ë|| 
	`fÊush
(°dout)Ë{ 
	`≥º‹
("°dout"); 
	`exô
(-1); }

86 i‡(
	`libxl_devi˚_nic_add
(
˘x
, 
domid
, &
nic
, 0)) {

87 
	`Ârötf
(
°dîr
, "libxl_device_nic_add failed.\n");

90 
	`libxl_devi˚_nic_di•o£
(&
nic
);

91 
	`xlu_cfg_de°roy
(
c⁄fig
);

93 
	}
}

95 
	$maö_√tw‹kli°
(
¨gc
, **
¨gv
)

97 
›t
;

98 
libxl_devi˚_nic
 *
nics
;

99 
libxl_nicöfo
 
nicöfo
;

100 
nb
, 
i
;

102 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "network-list", 1) {

107 
	`¥ötf
("%-3s %-2s %-17s %-6s %-5s %-6s %5s/%-5s %-30s\n",

109 
¨gv
 +
›töd
, 
¨gc
 -= optind;árgc > 0; --argc, ++argv) {

110 
uöt32_t
 
domid
 = 
	`föd_domaö
(*
¨gv
);

111 
nics
 = 
	`libxl_devi˚_nic_li°
(
˘x
, 
domid
, &
nb
);

112 i‡(!
nics
) {

115 
i
 = 0; i < 
nb
; ++i) {

116 i‡(!
	`libxl_devi˚_nic_gëöfo
(
˘x
, 
domid
, &
nics
[
i
], &
nicöfo
)) {

118 
	`¥ötf
("%-3d %-2d ", 
nicöfo
.
devid
,Çicöfo.
backíd_id
);

120 
	`¥ötf
(
LIBXL_MAC_FMT
, 
	`LIBXL_MAC_BYTES
(
nics
[
i
].
mac
));

122 
	`¥ötf
("%6d %5d %6d %5d/%-11d %-30s\n",

123 
nicöfo
.
devid
,Çicöfo.
°©e
,Çicöfo.
evtch
,

124 
nicöfo
.
ºef_tx
,Çicöfo.
ºef_rx
,Çicöfo.
backíd
);

125 
	`libxl_nicöfo_di•o£
(&
nicöfo
);

128 
	`libxl_devi˚_nic_li°_‰ì
(
nics
, 
nb
);

131 
	}
}

133 
	$maö_√tw‹kdëach
(
¨gc
, **
¨gv
)

135 
uöt32_t
 
domid
;

136 
›t
;

137 
libxl_devi˚_nic
 
nic
;

139 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "network-detach", 2) {

143 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

145 i‡(!
	`°rchr
(
¨gv
[
›töd
+1], ':')) {

146 i‡(
	`libxl_devid_to_devi˚_nic
(
˘x
, 
domid
, 
	`©oi
(
¨gv
[
›töd
+1]), &
nic
)) {

147 
	`Ârötf
(
°dîr
, "Unknow¿devi˚ %s.\n", 
¨gv
[
›töd
+1]);

151 i‡(
	`libxl_mac_to_devi˚_nic
(
˘x
, 
domid
, 
¨gv
[
›töd
+1], &
nic
)) {

152 
	`Ârötf
(
°dîr
, "Unknow¿devi˚ %s.\n", 
¨gv
[
›töd
+1]);

156 i‡(
	`libxl_devi˚_nic_ªmove
(
˘x
, 
domid
, &
nic
, 0)) {

157 
	`Ârötf
(
°dîr
, "libxl_device_nic_del failed.\n");

160 
	`libxl_devi˚_nic_di•o£
(&
nic
);

162 
	}
}

	@xl_parse.c

15 
	~<˘y≥.h
>

16 
	~<öây≥s.h
>

17 
	~<limôs.h
>

18 
	~<°dio.h
>

19 
	~<°dlib.h
>

20 
	~<xí/hvm/e820.h
>

21 
	~<xí/hvm/∑øms.h
>

23 
	~<libxl.h
>

24 
	~<libxl_utûs.h
>

25 
	~<libxlutû.h
>

27 
	~"xl.h
"

28 
	~"xl_utûs.h
"

29 
	~"xl_∑r£.h
"

31 
£t_deÁu…_nic_vÆues
(
libxl_devi˚_nic
 *
nic
);

33 
	#ARRAY_EXTEND_INIT__CORE
(
¨øy
,
cou¡
,
öô‚
,
m‹e
) \

35 
	`ty≥of
((
cou¡
)Ë
¨øy_exãnd_ﬁd_cou¡
 = (count); \

36 (
cou¡
)++; \

37 (
¨øy
Ë
	`xªÆloc
(◊ºay), (*¨øyË* (
cou¡
)); \

38 (
öô‚
)(&(
¨øy
)[
¨øy_exãnd_ﬁd_cou¡
]); \

39 
m‹e
; \

40 &(
¨øy
)[
¨øy_exãnd_ﬁd_cou¡
]; \

41 })

	)

43 
	#ARRAY_EXTEND_INIT
(
¨øy
,
cou¡
,
öô‚
) \

44 
	`ARRAY_EXTEND_INIT__CORE
((
¨øy
),(
cou¡
),(
öô‚
), ({ \

45 (
¨øy
)[
¨øy_exãnd_ﬁd_cou¡
].
devid
 =árray_extend_old_count; \

46 }))

	)

48 
	#ARRAY_EXTEND_INIT_NODEVID
(
¨øy
,
cou¡
,
öô‚
) \

49 
	`ARRAY_EXTEND_INIT__CORE
((
¨øy
),(
cou¡
),(
öô‚
), )

	)

51 c⁄° *
	ga˘i⁄_⁄_shutdown_«mes
[] = {

52 [
LIBXL_ACTION_ON_SHUTDOWN_DESTROY
] = "destroy",

54 [
LIBXL_ACTION_ON_SHUTDOWN_RESTART
] = "restart",

55 [
LIBXL_ACTION_ON_SHUTDOWN_RESTART_RENAME
] = "rename-restart",

57 [
LIBXL_ACTION_ON_SHUTDOWN_PRESERVE
] = "preserve",

59 [
LIBXL_ACTION_ON_SHUTDOWN_COREDUMP_DESTROY
] = "coredump-destroy",

60 [
LIBXL_ACTION_ON_SHUTDOWN_COREDUMP_RESTART
] = "coredump-restart",

62 [
LIBXL_ACTION_ON_SHUTDOWN_SOFT_RESET
] = "soft-reset",

65 c⁄° *
	$gë_a˘i⁄_⁄_shutdown_«me
(
libxl_a˘i⁄_⁄_shutdown
 
a
)

67  
a˘i⁄_⁄_shutdown_«mes
[
a
];

68 
	}
}

70 
	$∑r£_a˘i⁄_⁄_shutdown
(c⁄° *
buf
, 
libxl_a˘i⁄_⁄_shutdown
 *
a
)

72 
i
;

73 c⁄° *
n
;

75 
i
 = 0; i < (
a˘i⁄_⁄_shutdown_«mes
) / (action_on_shutdown_names[0]); i++) {

76 
n
 = 
a˘i⁄_⁄_shutdown_«mes
[
i
];

78 i‡(!
n
) ;

80 i‡(
	`°rcmp
(
buf
, 
n
) == 0) {

81 *
a
 = 
i
;

86 
	}
}

88 
	#DSTATE_INITIAL
 0

	)

89 
	#DSTATE_TAP
 1

	)

90 
	#DSTATE_PHYSPATH
 2

	)

91 
	#DSTATE_VIRTPATH
 3

	)

92 
	#DSTATE_VIRTTYPE
 4

	)

93 
	#DSTATE_RW
 5

	)

94 
	#DSTATE_TERMINAL
 6

	)

96 
	$∑r£_disk_c⁄fig_mu…i°rög
(
XLU_C⁄fig
 **
c⁄fig
,

97 
n•ecs
, c⁄° *c⁄° *
•ecs
,

98 
libxl_devi˚_disk
 *
disk
)

100 
e
;

102 
	`libxl_devi˚_disk_öô
(
disk
);

104 i‡(!*
c⁄fig
) {

105 *
c⁄fig
 = 
	`xlu_cfg_öô
(
°dîr
, "commandÜine");

106 i‡(!*
c⁄fig
Ë{ 
	`≥º‹
("xlu_cfg_öô"); 
	`exô
(-1); }

109 
e
 = 
	`xlu_disk_∑r£
(*
c⁄fig
, 
n•ecs
, 
•ecs
, 
disk
);

110 i‡(
e
 =
EINVAL
Ë
	`exô
(
EXIT_FAILURE
);

111 i‡(
e
) {

112 
	`Ârötf
(
°dîr
,"xlu_disk_∑r£ faûed: %s\n",
	`°ªº‹
(
î∫o
));

113 
	`exô
(
EXIT_FAILURE
);

115 
	}
}

117 
	$∑r£_disk_c⁄fig
(
XLU_C⁄fig
 **
c⁄fig
, c⁄° *
•ec
,

118 
libxl_devi˚_disk
 *
disk
)

120 
	`∑r£_disk_c⁄fig_mu…i°rög
(
c⁄fig
, 1, &
•ec
, 
disk
);

121 
	}
}

123 
	$∑r£_vif_øã
(
XLU_C⁄fig
 **
c⁄fig
, c⁄° *
øã
,

124 
libxl_devi˚_nic
 *
nic
)

126 
e
;

128 
e
 = 
	`xlu_vif_∑r£_øã
(*
c⁄fig
, 
øã
, 
nic
);

129 i‡(
e
 =
EINVAL
 ||É =
EOVERFLOW
Ë
	`exô
(
EXIT_FAILURE
);

130 i‡(
e
) {

131 
	`Ârötf
(
°dîr
,"xlu_vif_∑r£_øã faûed: %s\n",
	`°ªº‹
(
î∫o
));

132 
	`exô
(
EXIT_FAILURE
);

134 
	}
}

136 
	$∑r£_ønge
(c⁄° *
°r
, *
a
, *
b
)

138 c⁄° *
n°r
;

139 *
íd±r
;

141 *
a
 = *
b
 = 
	`°πoul
(
°r
, &
íd±r
, 10);

142 i‡(
íd±r
 =
°r
 || *
a
 =
ULONG_MAX
)

145 i‡(*
íd±r
 == '-') {

146 
n°r
 = 
íd±r
 + 1;

148 *
b
 = 
	`°πoul
(
n°r
, &
íd±r
, 10);

149 i‡(
íd±r
 =
n°r
 || *
b
 =
ULONG_MAX
 || *b < *
a
)

154 i‡(*
íd±r
 != '\0')

158 
	}
}

164 
	$upd©e_˝um≠_ønge
(c⁄° *
°r
, 
libxl_bôm≠
 *
˝um≠
)

166 
ida
, 
idb
;

167 
libxl_bôm≠
 
node_˝um≠
;

168 
boﬁ
 
is_nŸ
 = 
Ál£
, 
is_nodes
 = false;

169 
rc
 = 0;

171 
	`libxl_bôm≠_öô
(&
node_˝um≠
);

173 
rc
 = 
	`libxl_node_bôm≠_Æloc
(
˘x
, &
node_˝um≠
, 0);

174 i‡(
rc
) {

175 
	`Ârötf
(
°dîr
, "libxl_node_bitmap_alloc failed.\n");

176 
out
;

180 i‡(
	`STR_SKIP_PREFIX
(
°r
, "^")) {

181 
is_nŸ
 = 
åue
;

185 i‡(
	`STR_SKIP_PREFIX
(
°r
, "node:") || STR_SKIP_PREFIX(str, "nodes:")) {

186 
is_nodes
 = 
åue
;

189 i‡(
	`°rcmp
(
°r
, "all") == 0) {

191 i‡(
is_nŸ
) {

192 
	`Ârötf
(
°dîr
, "Can't combine \"^\"ánd \"all\".\n");

193 
rc
 = 
ERROR_INVAL
;

195 
	`libxl_bôm≠_£t_™y
(
˝um≠
);

196 
out
;

199 
rc
 = 
	`∑r£_ønge
(
°r
, &
ida
, &
idb
);

200 i‡(
rc
) {

201 
	`Ârötf
(
°dîr
, "InvÆidÖ˝uÑ™ge: %s.\n", 
°r
);

202 
out
;

206 
ida
 <
idb
) {

207 i‡(
is_nodes
) {

209 
i
;

211 
rc
 = 
	`libxl_node_to_˝um≠
(
˘x
, 
ida
, &
node_˝um≠
);

212 i‡(
rc
) {

213 
	`Ârötf
(
°dîr
, "libxl_node_to_cpumap failed.\n");

214 
out
;

218 
	`libxl_f‹_óch_£t_bô
(
i
, 
node_˝um≠
) {

219 
is_nŸ
 ? 
	`libxl_bôm≠_ª£t
(
˝um≠
, 
i
) :

220 
	`libxl_bôm≠_£t
(
˝um≠
, 
i
);

224 
is_nŸ
 ? 
	`libxl_bôm≠_ª£t
(
˝um≠
, 
ida
) :

225 
	`libxl_bôm≠_£t
(
˝um≠
, 
ida
);

227 
ida
++;

230 
out
:

231 
	`libxl_bôm≠_di•o£
(&
node_˝um≠
);

232  
rc
;

233 
	}
}

240 
	$∑r£_˝uønge
(c⁄° *
˝u
, 
libxl_bôm≠
 *
˝um≠
)

242 *
±r
, *
ßvïå
 = 
NULL
, *
buf
 = 
	`x°rdup
(
˝u
);

243 
rc
 = 0;

245 
±r
 = 
	`°πok_r
(
buf
, ",", &
ßvïå
);Ötr;

246 
±r
 = 
	`°πok_r
(
NULL
, ",", &
ßvïå
)) {

247 
rc
 = 
	`upd©e_˝um≠_ønge
(
±r
, 
˝um≠
);

248 i‡(
rc
)

251 
	`‰ì
(
buf
);

253  
rc
;

254 
	}
}

256 
	$∑r£_t›_Àvñ_vnc_›ti⁄s
(
XLU_C⁄fig
 *
c⁄fig
,

257 
libxl_vnc_öfo
 *
vnc
)

259 
l
;

261 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "vnc", &
vnc
->
íabÀ
, 0);

262 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "vn˛i°í", &
vnc
->
li°í
, 0);

263 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "vn˝asswd", &
vnc
->
∑sswd
, 0);

264 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "vncdi•œy", &
l
, 0))

265 
vnc
->
di•œy
 = 
l
;

266 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "vncunu£d", &
vnc
->
födunu£d
, 0);

267 
	}
}

269 
	$∑r£_t›_Àvñ_sdl_›ti⁄s
(
XLU_C⁄fig
 *
c⁄fig
,

270 
libxl_sdl_öfo
 *
sdl
)

272 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "sdl", &
sdl
->
íabÀ
, 0);

273 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "›ígl", &
sdl
->
›ígl
, 0);

274 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "di•œy", &
sdl
->
di•œy
, 0);

275 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "xauth‹ôy", &
sdl
->
xauth‹ôy
, 0);

276 
	}
}

278 *
	$∑r£_cmdlöe
(
XLU_C⁄fig
 *
c⁄fig
)

280 *
cmdlöe
 = 
NULL
;

281 c⁄° *
roŸ
 = 
NULL
, *
exåa
 = NULL, *
buf
 = NULL;

283 
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "cmdlöe", &
buf
, 0);

284 
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "roŸ", &
roŸ
, 0);

285 
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "exåa", &
exåa
, 0);

287 i‡(
buf
) {

288 
cmdlöe
 = 
	`°rdup
(
buf
);

289 i‡(
roŸ
 || 
exåa
)

290 
	`Ârötf
(
°dîr
, "Warning: ignoringÑoot=ándÉxtra= "

293 i‡(
roŸ
 && 
exåa
) {

294 
	`xa•rötf
(&
cmdlöe
, "roŸ=%†%s", 
roŸ
, 
exåa
);

295 } i‡(
roŸ
) {

296 
	`xa•rötf
(&
cmdlöe
, "roŸ=%s", 
roŸ
);

297 } i‡(
exåa
) {

298 
cmdlöe
 = 
	`°rdup
(
exåa
);

302 i‡((
buf
 || 
roŸ
 || 
exåa
Ë&& !
cmdlöe
) {

303 
	`Ârötf
(
°dîr
, "FailedÅoállocate memory for cmdline\n");

304 
	`exô
(
EXIT_FAILURE
);

307  
cmdlöe
;

308 
	}
}

310 
	$∑r£_v˝u_afföôy
(
libxl_domaö_buûd_öfo
 *
b_öfo
,

311 
XLU_C⁄figLi°
 *
˝us
, c⁄° *
buf
,

312 
num_˝us
, 
boﬁ
 
is_h¨d
)

314 
libxl_bôm≠
 *
v˝u_afföôy_¨øy
;

328 i‡(
buf
 || 
num_˝us
 > 
b_öfo
->
max_v˝us
)

329 
num_˝us
 = 
b_öfo
->
max_v˝us
;

331 i‡(
is_h¨d
) {

332 
b_öfo
->
num_v˝u_h¨d_afföôy
 = 
num_˝us
;

333 
b_öfo
->
v˝u_h¨d_afföôy
 = 
	`xmÆloc
(
num_˝us
 * (
libxl_bôm≠
));

334 
v˝u_afföôy_¨øy
 = 
b_öfo
->
v˝u_h¨d_afföôy
;

336 
b_öfo
->
num_v˝u_so·_afföôy
 = 
num_˝us
;

337 
b_öfo
->
v˝u_so·_afföôy
 = 
	`xmÆloc
(
num_˝us
 * (
libxl_bôm≠
));

338 
v˝u_afföôy_¨øy
 = 
b_öfo
->
v˝u_so·_afföôy
;

341 i‡(!
buf
) {

342 
j
 = 0;

344 (
buf
 = 
	`xlu_cfg_gë_li°ôem
(
˝us
, 
j
)Ë!
NULL
 && j < 
num_˝us
) {

345 
	`libxl_bôm≠_öô
(&
v˝u_afföôy_¨øy
[
j
]);

346 i‡(
	`libxl_˝u_bôm≠_Æloc
(
˘x
, &
v˝u_afföôy_¨øy
[
j
], 0)) {

347 
	`Ârötf
(
°dîr
, "U«bÀÅÿÆloˇã cpum≠ f‹ v˝u %d\n", 
j
);

348 
	`exô
(
EXIT_FAILURE
);

351 i‡(
	`∑r£_˝uønge
(
buf
, &
v˝u_afföôy_¨øy
[
j
]))

352 
	`exô
(
EXIT_FAILURE
);

354 
j
++;

358 
	`libxl_defboﬁ_£t
(&
b_öfo
->
numa_∂a˚mít
, 
Ál£
);

360 
i
;

362 
	`libxl_bôm≠_öô
(&
v˝u_afföôy_¨øy
[0]);

363 i‡(
	`libxl_˝u_bôm≠_Æloc
(
˘x
, &
v˝u_afföôy_¨øy
[0], 0)) {

364 
	`Ârötf
(
°dîr
, "UnableÅoállocate cpumap for vcpu 0\n");

365 
	`exô
(
EXIT_FAILURE
);

368 i‡(
	`∑r£_˝uønge
(
buf
, &
v˝u_afföôy_¨øy
[0]))

369 
	`exô
(
EXIT_FAILURE
);

371 
i
 = 1; i < 
b_öfo
->
max_v˝us
; i++) {

372 
	`libxl_bôm≠_öô
(&
v˝u_afföôy_¨øy
[
i
]);

373 i‡(
	`libxl_˝u_bôm≠_Æloc
(
˘x
, &
v˝u_afföôy_¨øy
[
i
], 0)) {

374 
	`Ârötf
(
°dîr
, "U«bÀÅÿÆloˇã cpum≠ f‹ v˝u %d\n", 
i
);

375 
	`exô
(
EXIT_FAILURE
);

377 
	`libxl_bôm≠_c›y
(
˘x
, &
v˝u_afföôy_¨øy
[
i
],

378 &
v˝u_afföôy_¨øy
[0]);

381 
	`libxl_defboﬁ_£t
(&
b_öfo
->
numa_∂a˚mít
, 
Ál£
);

383 
	}
}

385 
	$∑r£_ul⁄g
(c⁄° *
°r
)

387 *
íd±r
;

388 
vÆ
;

390 
vÆ
 = 
	`°πoul
(
°r
, &
íd±r
, 10);

391 i‡(
íd±r
 =
°r
 || 
vÆ
 =
ULONG_MAX
) {

392 
	`Ârötf
(
°dîr
, "xl: faûedÅÿc⁄vîà\"%s\"Åÿnumbî\n", 
°r
);

393 
	`exô
(
EXIT_FAILURE
);

395  
vÆ
;

396 
	}
}

398 
	$ª∂a˚_°rög
(**
°r
, c⁄° *
vÆ
)

400 
	`‰ì
(*
°r
);

401 *
°r
 = 
	`x°rdup
(
vÆ
);

402 
	}
}

404 
	$m©ch_›ti⁄_size
(c⁄° *
¥efix
, 
size_t
 
Àn
,

405 *
¨g
, **
¨g›t
)

407 
rc
 = 
	`°∫cmp
(
¥efix
, 
¨g
, 
Àn
);

408 i‡(!
rc
Ë*
¨g›t
 = 
¨g
+
Àn
;

409  !
rc
;

410 
	}
}

415 
	$∑r£_nic_c⁄fig
(
libxl_devi˚_nic
 *
nic
, 
XLU_C⁄fig
 **
c⁄fig
, *
tokí
)

417 *
íd±r
, *
›¨g
;

418 
i
;

419 
vÆ
;

421 i‡(
	`MATCH_OPTION
("ty≥", 
tokí
, 
›¨g
)) {

422 i‡(!
	`°rcmp
("vif", 
›¨g
)) {

423 
nic
->
ni˘y≥
 = 
LIBXL_NIC_TYPE_VIF
;

424 } i‡(!
	`°rcmp
("i€mu", 
›¨g
)) {

425 
nic
->
ni˘y≥
 = 
LIBXL_NIC_TYPE_VIF_IOEMU
;

427 
	`Ârötf
(
°dîr
, "InvalidÖarameter `type'.\n");

430 } i‡(
	`MATCH_OPTION
("mac", 
tokí
, 
›¨g
)) {

431 
i
 = 0; i < 6; i++) {

432 
vÆ
 = 
	`°πoul
(
›¨g
, &
íd±r
, 16);

433 i‡((
›¨g
 =
íd±r
Ë|| (
vÆ
 > 255)) {

434 
	`Ârötf
(
°dîr
, "InvalidÖarameter `mac'.\n");

437 
nic
->
mac
[
i
] = 
vÆ
;

438 
›¨g
 = 
íd±r
 + 1;

440 } i‡(
	`MATCH_OPTION
("bridge", 
tokí
, 
›¨g
)) {

441 
	`ª∂a˚_°rög
(&
nic
->
bridge
, 
›¨g
);

442 } i‡(
	`MATCH_OPTION
("√tdev", 
tokí
, 
›¨g
)) {

443 
	`Ârötf
(
°dîr
, "theÇetdevÖarameter is deprecated, "

445 
	`ª∂a˚_°rög
(&
nic
->
g©ewaydev
, 
›¨g
);

446 } i‡(
	`MATCH_OPTION
("g©ewaydev", 
tokí
, 
›¨g
)) {

447 
	`ª∂a˚_°rög
(&
nic
->
g©ewaydev
, 
›¨g
);

448 } i‡(
	`MATCH_OPTION
("ù", 
tokí
, 
›¨g
)) {

449 
	`ª∂a˚_°rög
(&
nic
->
ù
, 
›¨g
);

450 } i‡(
	`MATCH_OPTION
("s¸ùt", 
tokí
, 
›¨g
)) {

451 
	`ª∂a˚_°rög
(&
nic
->
s¸ùt
, 
›¨g
);

452 } i‡(
	`MATCH_OPTION
("backíd", 
tokí
, 
›¨g
)) {

453 
	`ª∂a˚_°rög
(&
nic
->
backíd_dom«me
, 
›¨g
);

454 } i‡(
	`MATCH_OPTION
("vi‚ame", 
tokí
, 
›¨g
)) {

455 
	`ª∂a˚_°rög
(&
nic
->
i‚ame
, 
›¨g
);

456 } i‡(
	`MATCH_OPTION
("modñ", 
tokí
, 
›¨g
)) {

457 
	`ª∂a˚_°rög
(&
nic
->
modñ
, 
›¨g
);

458 } i‡(
	`MATCH_OPTION
("øã", 
tokí
, 
›¨g
)) {

459 
	`∑r£_vif_øã
(
c⁄fig
, 
›¨g
, 
nic
);

460 } i‡(
	`MATCH_OPTION
("f‹w¨ddev", 
tokí
, 
›¨g
)) {

461 
	`ª∂a˚_°rög
(&
nic
->
cﬁo·_f‹w¨ddev
, 
›¨g
);

462 } i‡(
	`MATCH_OPTION
("cﬁo_sock_múr‹_id", 
tokí
, 
›¨g
)) {

463 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_múr‹_id
, 
›¨g
);

464 } i‡(
	`MATCH_OPTION
("cﬁo_sock_múr‹_ù", 
tokí
, 
›¨g
)) {

465 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_múr‹_ù
, 
›¨g
);

466 } i‡(
	`MATCH_OPTION
("cﬁo_sock_múr‹_p‹t", 
tokí
, 
›¨g
)) {

467 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_múr‹_p‹t
, 
›¨g
);

468 } i‡(
	`MATCH_OPTION
("cﬁo_sock_com∑ª_£c_ö_id", 
tokí
, 
›¨g
)) {

469 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_com∑ª_£c_ö_id
, 
›¨g
);

470 } i‡(
	`MATCH_OPTION
("cﬁo_sock_com∑ª_£c_ö_ù", 
tokí
, 
›¨g
)) {

471 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_com∑ª_£c_ö_ù
, 
›¨g
);

472 } i‡(
	`MATCH_OPTION
("cﬁo_sock_com∑ª_£c_ö_p‹t", 
tokí
, 
›¨g
)) {

473 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_com∑ª_£c_ö_p‹t
, 
›¨g
);

474 } i‡(
	`MATCH_OPTION
("cﬁo_sock_ªdúe˘‹0_id", 
tokí
, 
›¨g
)) {

475 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_ªdúe˘‹0_id
, 
›¨g
);

476 } i‡(
	`MATCH_OPTION
("cﬁo_sock_ªdúe˘‹0_ù", 
tokí
, 
›¨g
)) {

477 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_ªdúe˘‹0_ù
, 
›¨g
);

478 } i‡(
	`MATCH_OPTION
("cﬁo_sock_ªdúe˘‹0_p‹t", 
tokí
, 
›¨g
)) {

479 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_ªdúe˘‹0_p‹t
, 
›¨g
);

480 } i‡(
	`MATCH_OPTION
("cﬁo_sock_ªdúe˘‹1_id", 
tokí
, 
›¨g
)) {

481 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_ªdúe˘‹1_id
, 
›¨g
);

482 } i‡(
	`MATCH_OPTION
("cﬁo_sock_ªdúe˘‹1_ù", 
tokí
, 
›¨g
)) {

483 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_ªdúe˘‹1_ù
, 
›¨g
);

484 } i‡(
	`MATCH_OPTION
("cﬁo_sock_ªdúe˘‹1_p‹t", 
tokí
, 
›¨g
)) {

485 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_ªdúe˘‹1_p‹t
, 
›¨g
);

486 } i‡(
	`MATCH_OPTION
("cﬁo_sock_ªdúe˘‹2_id", 
tokí
, 
›¨g
)) {

487 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_ªdúe˘‹2_id
, 
›¨g
);

488 } i‡(
	`MATCH_OPTION
("cﬁo_sock_ªdúe˘‹2_ù", 
tokí
, 
›¨g
)) {

489 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_ªdúe˘‹2_ù
, 
›¨g
);

490 } i‡(
	`MATCH_OPTION
("cﬁo_sock_ªdúe˘‹2_p‹t", 
tokí
, 
›¨g
)) {

491 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_ªdúe˘‹2_p‹t
, 
›¨g
);

492 } i‡(
	`MATCH_OPTION
("cﬁo_sock_com∑ª_¥i_ö_id", 
tokí
, 
›¨g
)) {

493 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_com∑ª_¥i_ö_id
, 
›¨g
);

494 } i‡(
	`MATCH_OPTION
("cﬁo_sock_com∑ª_¥i_ö_ù", 
tokí
, 
›¨g
)) {

495 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_com∑ª_¥i_ö_ù
, 
›¨g
);

496 } i‡(
	`MATCH_OPTION
("cﬁo_sock_com∑ª_¥i_ö_p‹t", 
tokí
, 
›¨g
)) {

497 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_com∑ª_¥i_ö_p‹t
, 
›¨g
);

498 } i‡(
	`MATCH_OPTION
("cﬁo_sock_com∑ª_nŸify_id", 
tokí
, 
›¨g
)) {

499 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_com∑ª_nŸify_id
, 
›¨g
);

500 } i‡(
	`MATCH_OPTION
("cﬁo_sock_com∑ª_nŸify_ù", 
tokí
, 
›¨g
)) {

501 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_com∑ª_nŸify_ù
, 
›¨g
);

502 } i‡(
	`MATCH_OPTION
("cﬁo_sock_com∑ª_nŸify_p‹t", 
tokí
, 
›¨g
)) {

503 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_com∑ª_nŸify_p‹t
, 
›¨g
);

504 } i‡(
	`MATCH_OPTION
("cﬁo_fûãr_múr‹_queue", 
tokí
, 
›¨g
)) {

505 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_fûãr_múr‹_queue
, 
›¨g
);

506 } i‡(
	`MATCH_OPTION
("cﬁo_fûãr_múr‹_outdev", 
tokí
, 
›¨g
)) {

507 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_fûãr_múr‹_outdev
, 
›¨g
);

508 } i‡(
	`MATCH_OPTION
("cﬁo_fûãr_ªdúe˘‹0_queue", 
tokí
, 
›¨g
)) {

509 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_fûãr_ªdúe˘‹0_queue
, 
›¨g
);

510 } i‡(
	`MATCH_OPTION
("cﬁo_fûãr_ªdúe˘‹0_ödev", 
tokí
, 
›¨g
)) {

511 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_fûãr_ªdúe˘‹0_ödev
, 
›¨g
);

512 } i‡(
	`MATCH_OPTION
("cﬁo_fûãr_ªdúe˘‹0_outdev", 
tokí
, 
›¨g
)) {

513 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_fûãr_ªdúe˘‹0_outdev
, 
›¨g
);

514 } i‡(
	`MATCH_OPTION
("cﬁo_fûãr_ªdúe˘‹1_queue", 
tokí
, 
›¨g
)) {

515 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_fûãr_ªdúe˘‹1_queue
, 
›¨g
);

516 } i‡(
	`MATCH_OPTION
("cﬁo_fûãr_ªdúe˘‹1_ödev", 
tokí
, 
›¨g
)) {

517 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_fûãr_ªdúe˘‹1_ödev
, 
›¨g
);

518 } i‡(
	`MATCH_OPTION
("cﬁo_fûãr_ªdúe˘‹1_outdev", 
tokí
, 
›¨g
)) {

519 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_fûãr_ªdúe˘‹1_outdev
, 
›¨g
);

520 } i‡(
	`MATCH_OPTION
("cﬁo_com∑ª_¥i_ö", 
tokí
, 
›¨g
)) {

521 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_com∑ª_¥i_ö
, 
›¨g
);

522 } i‡(
	`MATCH_OPTION
("cﬁo_com∑ª_£c_ö", 
tokí
, 
›¨g
)) {

523 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_com∑ª_£c_ö
, 
›¨g
);

524 } i‡(
	`MATCH_OPTION
("cﬁo_com∑ª_out", 
tokí
, 
›¨g
)) {

525 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_com∑ª_out
, 
›¨g
);

526 } i‡(
	`MATCH_OPTION
("cﬁo_com∑ª_nŸify_dev", 
tokí
, 
›¨g
)) {

527 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_com∑ª_nŸify_dev
, 
›¨g
);

528 } i‡(
	`MATCH_OPTION
("cﬁo_sock_£c_ªdúe˘‹0_id", 
tokí
, 
›¨g
)) {

529 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_£c_ªdúe˘‹0_id
, 
›¨g
);

530 } i‡(
	`MATCH_OPTION
("cﬁo_sock_£c_ªdúe˘‹0_ù", 
tokí
, 
›¨g
)) {

531 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_£c_ªdúe˘‹0_ù
, 
›¨g
);

532 } i‡(
	`MATCH_OPTION
("cﬁo_sock_£c_ªdúe˘‹0_p‹t", 
tokí
, 
›¨g
)) {

533 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_£c_ªdúe˘‹0_p‹t
, 
›¨g
);

534 } i‡(
	`MATCH_OPTION
("cﬁo_sock_£c_ªdúe˘‹1_id", 
tokí
, 
›¨g
)) {

535 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_£c_ªdúe˘‹1_id
, 
›¨g
);

536 } i‡(
	`MATCH_OPTION
("cﬁo_sock_£c_ªdúe˘‹1_ù", 
tokí
, 
›¨g
)) {

537 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_£c_ªdúe˘‹1_ù
, 
›¨g
);

538 } i‡(
	`MATCH_OPTION
("cﬁo_sock_£c_ªdúe˘‹1_p‹t", 
tokí
, 
›¨g
)) {

539 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_sock_£c_ªdúe˘‹1_p‹t
, 
›¨g
);

540 } i‡(
	`MATCH_OPTION
("cﬁo_fûãr_£c_ªdúe˘‹0_queue", 
tokí
, 
›¨g
)) {

541 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_fûãr_£c_ªdúe˘‹0_queue
, 
›¨g
);

542 } i‡(
	`MATCH_OPTION
("cﬁo_fûãr_£c_ªdúe˘‹0_ödev", 
tokí
, 
›¨g
)) {

543 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_fûãr_£c_ªdúe˘‹0_ödev
, 
›¨g
);

544 } i‡(
	`MATCH_OPTION
("cﬁo_fûãr_£c_ªdúe˘‹0_outdev", 
tokí
, 
›¨g
)) {

545 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_fûãr_£c_ªdúe˘‹0_outdev
, 
›¨g
);

546 } i‡(
	`MATCH_OPTION
("cﬁo_fûãr_£c_ªdúe˘‹1_queue", 
tokí
, 
›¨g
)) {

547 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_fûãr_£c_ªdúe˘‹1_queue
, 
›¨g
);

548 } i‡(
	`MATCH_OPTION
("cﬁo_fûãr_£c_ªdúe˘‹1_ödev", 
tokí
, 
›¨g
)) {

549 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_fûãr_£c_ªdúe˘‹1_ödev
, 
›¨g
);

550 } i‡(
	`MATCH_OPTION
("cﬁo_fûãr_£c_ªdúe˘‹1_outdev", 
tokí
, 
›¨g
)) {

551 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_fûãr_£c_ªdúe˘‹1_outdev
, 
›¨g
);

552 } i‡(
	`MATCH_OPTION
("cﬁo_fûãr_£c_ªwrôî0_queue", 
tokí
, 
›¨g
)) {

553 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_fûãr_£c_ªwrôî0_queue
, 
›¨g
);

554 } i‡(
	`MATCH_OPTION
("cﬁo_checkpoöt_ho°", 
tokí
, 
›¨g
)) {

555 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_checkpoöt_ho°
, 
›¨g
);

556 } i‡(
	`MATCH_OPTION
("cﬁo_checkpoöt_p‹t", 
tokí
, 
›¨g
)) {

557 
	`ª∂a˚_°rög
(&
nic
->
cﬁo_checkpoöt_p‹t
, 
›¨g
);

558 } i‡(
	`MATCH_OPTION
("ac˚l", 
tokí
, 
›¨g
)) {

559 
	`Ârötf
(
°dîr
, "theáccelÖarameter for vifs is currentlyÇot supported\n");

560 } i‡(
	`MATCH_OPTION
("devid", 
tokí
, 
›¨g
)) {

561 
nic
->
devid
 = 
	`∑r£_ul⁄g
(
›¨g
);

563 
	`Ârötf
(
°dîr
, "uƒecognizedárgumíà`%s'\n", 
tokí
);

567 
	}
}

569 
	$∑r£_vnuma_c⁄fig
(c⁄° 
XLU_C⁄fig
 *
c⁄fig
,

570 
libxl_domaö_buûd_öfo
 *
b_öfo
,

571 
vnode_öfo_∑ømëî
* 
vnode_∑ø
)

573 
libxl_physöfo
 
physöfo
;

574 
uöt32_t
 
ƒ_nodes
;

575 
XLU_C⁄figLi°
 *
vnuma
;

576 
i
, 
j
, 
Àn
, 
num_vnuma
;

577 
max_v˝us
 = 0, 
max_memkb
 = 0;

581 
libxl_bôm≠
 *
v˝u_∑r£d
;

583 
	`libxl_physöfo_öô
(&
physöfo
);

584 i‡(
	`libxl_gë_physöfo
(
˘x
, &
physöfo
) != 0) {

585 
	`libxl_physöfo_di•o£
(&
physöfo
);

586 
	`Ârötf
(
°dîr
, "libxl_get_physinfo failed\n");

587 
	`exô
(
EXIT_FAILURE
);

590 
ƒ_nodes
 = 
physöfo
.nr_nodes;

591 
	`libxl_physöfo_di•o£
(&
physöfo
);

593 i‡(
	`xlu_cfg_gë_li°
(
c⁄fig
, "vnuma", &
vnuma
, &
num_vnuma
, 1))

596 i‡(!
num_vnuma
)

599 i‡(
vnode_∑ø
){

600 
vnode_∑ø
->
num_nodes
 = 
num_vnuma
;

601 
vnode_∑ø
->
vnode_öfos
 = 
	`xˇŒoc
(
num_vnuma
, (
vnode_öfo
));

604 
b_öfo
->
num_vnuma_nodes
 = 
num_vnuma
;

605 
b_öfo
->
vnuma_nodes
 = 
	`xˇŒoc
(
num_vnuma
, (
libxl_vnode_öfo
));

606 
v˝u_∑r£d
 = 
	`xˇŒoc
(
num_vnuma
, (
libxl_bôm≠
));

607 
i
 = 0; i < 
num_vnuma
; i++) {

608 
	`libxl_bôm≠_öô
(&
v˝u_∑r£d
[
i
]);

609 i‡(
	`libxl_˝u_bôm≠_Æloc
(
˘x
, &
v˝u_∑r£d
[
i
], 
b_öfo
->
max_v˝us
)) {

610 
	`Ârötf
(
°dîr
, "libxl_node_bitmap_alloc failed.\n");

611 
	`exô
(
EXIT_FAILURE
);

615 
i
 = 0; i < 
b_öfo
->
num_vnuma_nodes
; i++) {

616 
libxl_vnode_öfo
 *
p
 = &
b_öfo
->
vnuma_nodes
[
i
];

618 
	`libxl_vnode_öfo_öô
(
p
);

619 
p
->
di°™˚s
 = 
	`xˇŒoc
(
b_öfo
->
num_vnuma_nodes
,

620 (*
p
->
di°™˚s
));

621 
p
->
num_di°™˚s
 = 
b_öfo
->
num_vnuma_nodes
;

624 
i
 = 0; i < 
num_vnuma
; i++) {

625 
XLU_C⁄figVÆue
 *
vnode_•ec
, *
c⁄f_›ti⁄
;

626 
XLU_C⁄figLi°
 *
vnode_c⁄fig_li°
;

627 
c⁄f_cou¡
;

628 
libxl_vnode_öfo
 *
p
 = &
b_öfo
->
vnuma_nodes
[
i
];

630 
vnode_•ec
 = 
	`xlu_cfg_gë_li°ôem2
(
vnuma
, 
i
);

631 
	`as£π
(
vnode_•ec
);

633 
	`xlu_cfg_vÆue_gë_li°
(
c⁄fig
, 
vnode_•ec
, &
vnode_c⁄fig_li°
, 0);

634 i‡(!
vnode_c⁄fig_li°
) {

635 
	`Ârötf
(
°dîr
, "xl: cannot get vnode config optionÜist\n");

636 
	`exô
(
EXIT_FAILURE
);

639 
c⁄f_cou¡
 = 0;

640 (
c⁄f_›ti⁄
 =

641 
	`xlu_cfg_gë_li°ôem2
(
vnode_c⁄fig_li°
, 
c⁄f_cou¡
));

642 
c⁄f_cou¡
++) {

644 i‡(
	`xlu_cfg_vÆue_ty≥
(
c⁄f_›ti⁄
Ë=
XLU_STRING
) {

645 *
buf
, *
›ti⁄_u¡rimmed
, *
vÆue_u¡rimmed
;

646 *
›ti⁄
, *
vÆue
;

647 
vÆ
;

649 
	`xlu_cfg_vÆue_gë_°rög
(
c⁄fig
, 
c⁄f_›ti⁄
, &
buf
, 0);

651 i‡(!
buf
) ;

653 i‡(
	`•lô_°rög_öto_∑ú
(
buf
, "=",

654 &
›ti⁄_u¡rimmed
,

655 &
vÆue_u¡rimmed
)) {

656 
	`Ârötf
(
°dîr
, "xl: failedÅo split \"%s\" intoÖair\n",

657 
buf
);

658 
	`exô
(
EXIT_FAILURE
);

660 
	`åim
(
is•a˚
, 
›ti⁄_u¡rimmed
, &
›ti⁄
);

661 
	`åim
(
is•a˚
, 
vÆue_u¡rimmed
, &
vÆue
);

663 i‡(!
	`°rcmp
("≤ode", 
›ti⁄
)) {

664 
vÆ
 = 
	`∑r£_ul⁄g
(
vÆue
);

665 i‡(
vÆ
 >
ƒ_nodes
) {

666 
	`Ârötf
(
°dîr
,

667 "xl: invÆidÖnodênumbî: %lu\n", 
vÆ
);

668 
	`exô
(
EXIT_FAILURE
);

670 
p
->
≤ode
 = 
vÆ
;

671 
	`libxl_defboﬁ_£t
(&
b_öfo
->
numa_∂a˚mít
, 
Ál£
);

672 if(
vnode_∑ø
){

673 
vnode_∑ø
->
vnode_öfos
[
i
].
≤ode
 = 
vÆ
;

675 } i‡(!
	`°rcmp
("size", 
›ti⁄
)) {

676 
vÆ
 = 
	`∑r£_ul⁄g
(
vÆue
);

677 
p
->
memkb
 = 
vÆ
 << 10;

678 
max_memkb
 +
p
->
memkb
;

679 if(
vnode_∑ø
){

680 
vnode_∑ø
->
vnode_öfos
[
i
].
ˇ∑côy
 = 
p
->
memkb
;

681 
vnode_∑ø
->
vnode_öfos
[
i
].
èrgë
 = 
p
->
memkb
;

683 } i‡(!
	`°rcmp
("v˝us", 
›ti⁄
)) {

684 
libxl_°rög_li°
 
˝u_•ec_li°
;

685 
s
, 
e
;

687 
	`•lô_°rög_öto_°rög_li°
(
vÆue
, ",", &
˝u_•ec_li°
);

688 
Àn
 = 
	`libxl_°rög_li°_Àngth
(&
˝u_•ec_li°
);

689 
v˝u_˙t
 = 0;

691 i‡(
vnode_∑ø
){

692 
j
 = 0; j < 
Àn
; j++) {

693 
	`∑r£_ønge
(
˝u_•ec_li°
[
j
], &
s
, &
e
);

694 ; 
s
 <
e
; s++) {

695 
v˝u_˙t
++;

698 
vnode_∑ø
->
vnode_öfos
[
i
].
v˝u
 =

699 
	`xˇŒoc
(
v˝u_˙t
, ());

700 
vnode_∑ø
->
vnode_öfos
[
i
].
num_v˝us
 = 
v˝u_˙t
;

701 
v˝u_˙t
 = 0;

703 
j
 = 0; j < 
Àn
; j++) {

704 
	`∑r£_ønge
(
˝u_•ec_li°
[
j
], &
s
, &
e
);

705 ; 
s
 <
e
; s++) {

714 i‡(
vnode_∑ø
){

715 
vnode_∑ø
->
vnode_öfos
[
i
].
v˝u
[
v˝u_˙t
] = 
s
;

717 
v˝u_˙t
++;

718 
	`libxl_bôm≠_£t
(&
v˝u_∑r£d
[
i
], 
s
);

719 
max_v˝us
++;

723 
	`libxl_°rög_li°_di•o£
(&
˝u_•ec_li°
);

724 } i‡(!
	`°rcmp
("vdi°™˚s", 
›ti⁄
)) {

725 
libxl_°rög_li°
 
vdi°
;

727 
	`•lô_°rög_öto_°rög_li°
(
vÆue
, ",", &
vdi°
);

728 
Àn
 = 
	`libxl_°rög_li°_Àngth
(&
vdi°
);

730 
j
 = 0; j < 
Àn
; j++) {

731 
vÆ
 = 
	`∑r£_ul⁄g
(
vdi°
[
j
]);

732 
p
->
di°™˚s
[
j
] = 
vÆ
;

734 
	`libxl_°rög_li°_di•o£
(&
vdi°
);

736 
	`‰ì
(
›ti⁄
);

737 
	`‰ì
(
vÆue
);

738 
	`‰ì
(
›ti⁄_u¡rimmed
);

739 
	`‰ì
(
vÆue_u¡rimmed
);

745 i‡(
b_öfo
->
max_v˝us
 != 0) {

746 i‡(
b_öfo
->
max_v˝us
 != max_vcpus) {

747 
	`Ârötf
(
°dîr
, "xl: vnuma vcpusánd maxvcpus= mismatch\n");

748 
	`exô
(
EXIT_FAILURE
);

751 
ho°_˝us
 = 
	`libxl_gë_⁄löe_˝us
(
˘x
);

753 i‡(
ho°_˝us
 < 0) {

754 
	`Ârötf
(
°dîr
, "FailedÅo get online cpus\n");

755 
	`exô
(
EXIT_FAILURE
);

758 i‡(
ho°_˝us
 < 
max_v˝us
) {

759 
	`Ârötf
(
°dîr
, "xl: vnuma specifies more vcpusÅhanÖcpus, "\

761 
	`exô
(
EXIT_FAILURE
);

764 
b_öfo
->
max_v˝us
 = max_vcpus;

775 
i
 = 0; i < 
b_öfo
->
num_vnuma_nodes
; i++) {

776 
libxl_vnode_öfo
 *
p
 = &
b_öfo
->
vnuma_nodes
[
i
];

778 
	`libxl_bôm≠_c›y_Æloc
(
˘x
, &
p
->
v˝us
, &
v˝u_∑r£d
[
i
]);

779 
	`libxl_bôm≠_di•o£
(&
v˝u_∑r£d
[
i
]);

782 
	`‰ì
(
v˝u_∑r£d
);

842 
	}
}

847 
	$∑r£_usb˘æ_c⁄fig
(
libxl_devi˚_usb˘æ
 *
usb˘æ
, *
tokí
)

849 *
›¨g
;

851 i‡(
	`MATCH_OPTION
("ty≥", 
tokí
, 
›¨g
)) {

852 i‡(
	`libxl_usb˘æ_ty≥_‰om_°rög
(
›¨g
, &
usb˘æ
->
ty≥
)) {

853 
	`Ârötf
(
°dîr
, "InvÆid usb c⁄åﬁÀ∏ty≥ '%s'\n", 
›¨g
);

856 } i‡(
	`MATCH_OPTION
("vîsi⁄", 
tokí
, 
›¨g
)) {

857 
usb˘æ
->
vîsi⁄
 = 
	`©oi
(
›¨g
);

858 } i‡(
	`MATCH_OPTION
("p‹ts", 
tokí
, 
›¨g
)) {

859 
usb˘æ
->
p‹ts
 = 
	`©oi
(
›¨g
);

861 
	`Ârötf
(
°dîr
, "Unknow¿°rög `%s' i¿usb˘æ s≥c\n", 
tokí
);

866 
	}
}

871 
	$∑r£_usbdev_c⁄fig
(
libxl_devi˚_usbdev
 *
usbdev
, *
tokí
)

873 *
›¨g
;

875 i‡(
	`MATCH_OPTION
("ty≥", 
tokí
, 
›¨g
)) {

876 i‡(
	`libxl_usbdev_ty≥_‰om_°rög
(
›¨g
, &
usbdev
->
ty≥
)) {

877 
	`Ârötf
(
°dîr
, "InvÆid usb devi˚Åy≥: %s\n", 
›èrg
);

880 } i‡(
	`MATCH_OPTION
("ho°bus", 
tokí
, 
›¨g
)) {

881 
usbdev
->
u
.
ho°dev
.
ho°bus
 = 
	`°πoul
(
›¨g
, 
NULL
, 0);

882 } i‡(
	`MATCH_OPTION
("ho°addr", 
tokí
, 
›¨g
)) {

883 
usbdev
->
u
.
ho°dev
.
ho°addr
 = 
	`°πoul
(
›¨g
, 
NULL
, 0);

884 } i‡(
	`MATCH_OPTION
("c⁄åﬁÀr", 
tokí
, 
›¨g
)) {

885 
usbdev
->
˘æ
 = 
	`©oi
(
›¨g
);

886 } i‡(
	`MATCH_OPTION
("p‹t", 
tokí
, 
›¨g
)) {

887 
usbdev
->
p‹t
 = 
	`©oi
(
›¨g
);

889 
	`Ârötf
(
°dîr
, "Unknow¿°rög `%s' i¿usbdev s≥c\n", 
tokí
);

894 
	}
}

896 
	$∑r£_vdi•l_c⁄fig
(
libxl_devi˚_vdi•l
 *
vdi•l
, *
tokí
)

898 *
›¨g
;

899 
libxl_°rög_li°
 
c⁄√˘‹s
 = 
NULL
;

900 
i
;

901 
rc
;

903 i‡(
	`MATCH_OPTION
("backíd", 
tokí
, 
›¨g
)) {

904 
vdi•l
->
backíd_dom«me
 = 
	`°rdup
(
›¨g
);

905 } i‡(
	`MATCH_OPTION
("be-Æloc", 
tokí
, 
›¨g
)) {

906 
vdi•l
->
be_Æloc
 = 
	`°πoul
(
›¨g
, 
NULL
, 0);

907 } i‡(
	`MATCH_OPTION
("c⁄√˘‹s", 
tokí
, 
›¨g
)) {

908 
	`•lô_°rög_öto_°rög_li°
(
›¨g
, ";", &
c⁄√˘‹s
);

910 
vdi•l
->
num_c⁄√˘‹s
 = 
	`libxl_°rög_li°_Àngth
(&
c⁄√˘‹s
);

911 
vdi•l
->
c⁄√˘‹s
 = 
	`ˇŒoc
(vdi•l->
num_c⁄√˘‹s
,

912 (*
vdi•l
->
c⁄√˘‹s
));

914 
i
 = 0; i < 
vdi•l
->
num_c⁄√˘‹s
; i++)

916 *
ªsﬁuti⁄
;

918 
rc
 = 
	`•lô_°rög_öto_∑ú
(
c⁄√˘‹s
[
i
], ":",

919 &
vdi•l
->
c⁄√˘‹s
[
i
].
id
,

920 &
ªsﬁuti⁄
);

922 
rc

	`ssˇnf
(
ªsﬁuti⁄
, "%ux%u", &
vdi•l
->
c⁄√˘‹s
[
i
].
width
,

923 &
vdi•l
->
c⁄√˘‹s
[
i
].
height
);

924 
	`‰ì
(
ªsﬁuti⁄
);

926 i‡(
rc
 != 2) {

927 
	`Ârötf
(
°dîr
, "Can'tÖarse connectorÑesolution\n");

928 
out
;

932 
	`Ârötf
(
°dîr
, "Unknow¿°rög \"%s\" i¿vdi•»•ec\n", 
tokí
);

933 
rc
 = 1; 
out
;

936 
rc
 = 0;

938 
out
:

939 
	`libxl_°rög_li°_di•o£
(&
c⁄√˘‹s
);

940  
rc
;

941 
	}
}

943 
	$∑r£_c⁄fig_d©a
(c⁄° *
c⁄fig_sour˚
,

944 c⁄° *
c⁄fig_d©a
,

945 
c⁄fig_Àn
,

946 
libxl_domaö_c⁄fig
 *
d_c⁄fig
,

947 
vnode_öfo_∑ømëî
* 
vnode_∑ø
)

949 c⁄° *
buf
;

950 
l
, 
v˝us
 = 0;

951 
XLU_C⁄fig
 *
c⁄fig
;

952 
XLU_C⁄figLi°
 *
˝us
, *
vbds
, *
nics
, *
pcis
, *
cvfbs
, *
˝uids
, *
vçms
,

953 *
usb˘æs
, *
usbdevs
, *
p9devs
, *
vdi•ls
, *
pvˇŒsifs_devs
;

954 
XLU_C⁄figLi°
 *
ch™√ls
, *
i›‹ts
, *
úqs
, *
iomem
, *
vúidün
, *
dtdevs
,

955 *
mˇ_ˇps
;

956 
num_i›‹ts
, 
num_úqs
, 
num_iomem
, 
num_˝us
, 
num_vúidün
, 
num_mˇ_ˇps
;

957 
pci_powî_mgmt
 = 0;

958 
pci_msôøn¶©e
 = 0;

959 
pci_≥rmissive
 = 0;

960 
pci_£ize
 = 0;

961 
i
, 
e
;

962 *
kî√l_ba£«me
;

964 
libxl_domaö_¸óã_öfo
 *
c_öfo
 = &
d_c⁄fig
->c_info;

965 
libxl_domaö_buûd_öfo
 *
b_öfo
 = &
d_c⁄fig
->b_info;

967 
c⁄fig

	`xlu_cfg_öô
(
°dîr
, 
c⁄fig_sour˚
);

968 i‡(!
c⁄fig
) {

969 
	`Ârötf
(
°dîr
, "FailedÅoállocate for configuration\n");

970 
	`exô
(1);

973 
e

	`xlu_cfg_ªadd©a
(
c⁄fig
, 
c⁄fig_d©a
, 
c⁄fig_Àn
);

974 i‡(
e
) {

975 
	`Ârötf
(
°dîr
, "FaûedÅÿ∑r£ c⁄fig: %s\n", 
	`°ªº‹
(
e
));

976 
	`exô
(1);

979 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "öô_£˛abñ", &
buf
, 0))

980 
	`xlu_cfg_ª∂a˚_°rög
(
c⁄fig
, "init_seclabel",

981 &
c_öfo
->
ssid_œbñ
, 0);

983 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "£˛abñ", &
buf
, 0)) {

984 i‡(
c_öfo
->
ssid_œbñ
)

985 
	`xlu_cfg_ª∂a˚_°rög
(
c⁄fig
, "seclabel",

986 &
b_öfo
->
exec_ssid_œbñ
, 0);

988 
	`xlu_cfg_ª∂a˚_°rög
(
c⁄fig
, "seclabel",

989 &
c_öfo
->
ssid_œbñ
, 0);

992 
	`libxl_defboﬁ_£t
(&
c_öfo
->
run_hŸ∂ug_s¸ùts
,Ñun_hotplug_scripts);

994 i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "ty≥", &
buf
, 0)) {

995 i‡(!
	`°∫cmp
(
buf
, "hvm", 
	`°æí
(buf)))

996 
c_öfo
->
ty≥
 = 
LIBXL_DOMAIN_TYPE_HVM
;

997 i‡(!
	`°∫cmp
(
buf
, "pv", 
	`°æí
(buf)))

998 
c_öfo
->
ty≥
 = 
LIBXL_DOMAIN_TYPE_PV
;

999 i‡(!
	`°∫cmp
(
buf
, "pvh", 
	`°æí
(buf)))

1000 
c_öfo
->
ty≥
 = 
LIBXL_DOMAIN_TYPE_PVH
;

1002 
	`Ârötf
(
°dîr
, "InvÆid domaöÅy≥ %s.\n", 
buf
);

1003 
	`exô
(1);

1008 i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "buûdî", &
buf
, 0)) {

1009 
libxl_domaö_ty≥
 
buûdî_ty≥
;

1011 i‡(!
	`°∫cmp
(
buf
, "hvm", 
	`°æí
(buf)))

1012 
buûdî_ty≥
 = 
LIBXL_DOMAIN_TYPE_HVM
;

1013 i‡(!
	`°∫cmp
(
buf
, "gíîic", 
	`°æí
(buf)))

1014 
buûdî_ty≥
 = 
LIBXL_DOMAIN_TYPE_PV
;

1016 
	`Ârötf
(
°dîr
, "InvÆid domaöÅy≥ %s.\n", 
buf
);

1017 
	`exô
(1);

1020 i‡(
c_öfo
->
ty≥
 !
LIBXL_DOMAIN_TYPE_INVALID
 &&

1021 
c_öfo
->
ty≥
 !
buûdî_ty≥
) {

1022 
	`Ârötf
(
°dîr
,

1024 
	`exô
(1);

1026 
c_öfo
->
ty≥
 = 
buûdî_ty≥
;

1029 i‡(
c_öfo
->
ty≥
 =
LIBXL_DOMAIN_TYPE_INVALID
)

1030 
c_öfo
->
ty≥
 = 
LIBXL_DOMAIN_TYPE_PV
;

1032 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "h≠", &
c_öfo
->
h≠
, 0);

1034 i‡(
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "«me", &
c_öfo
->
«me
, 0)) {

1035 
	`Ârötf
(
°dîr
, "DomainÇame must be specified.\n");

1036 
	`exô
(1);

1039 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "uuid", &
buf
, 0) ) {

1040 i‡–
	`libxl_uuid_‰om_°rög
(&
c_öfo
->
uuid
, 
buf
) ) {

1041 
	`Ârötf
(
°dîr
, "FaûedÅÿ∑r£ UUID: %s\n", 
buf
);

1042 
	`exô
(1);

1045 
	`libxl_uuid_gíî©e
(&
c_öfo
->
uuid
);

1048 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "oos", &
c_öfo
->
oos
, 0);

1050 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "poﬁ", &
buf
, 0))

1051 
	`xlu_cfg_ª∂a˚_°rög
(
c⁄fig
, "poﬁ", &
c_öfo
->
poﬁ_«me
, 0);

1053 
	`libxl_domaö_buûd_öfo_öô_ty≥
(
b_öfo
, 
c_öfo
->
ty≥
);

1055 i‡(
b_öfo
->
ty≥
 =
LIBXL_DOMAIN_TYPE_PVH
) {

1056 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "pvshim", &
b_öfo
->
u
.
pvh
.
pvshim
, 0);

1057 i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "pvshim_∑th", &
buf
, 0))

1058 
	`xlu_cfg_ª∂a˚_°rög
(
c⁄fig
, "pvshim_path",

1059 &
b_öfo
->
u
.
pvh
.
pvshim_∑th
, 0);

1060 i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "pvshim_cmdlöe", &
buf
, 0))

1061 
	`xlu_cfg_ª∂a˚_°rög
(
c⁄fig
, "pvshim_cmdline",

1062 &
b_öfo
->
u
.
pvh
.
pvshim_cmdlöe
, 0);

1063 i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "pvshim_exåa", &
buf
, 0))

1064 
	`xlu_cfg_ª∂a˚_°rög
(
c⁄fig
, "pvshim_extra",

1065 &
b_öfo
->
u
.
pvh
.
pvshim_exåa
, 0);

1068 i‡(
blkdev_°¨t
)

1069 
b_öfo
->
blkdev_°¨t
 = 
	`°rdup
(blkdev_start);

1073 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "˝u_weight", &
l
, 0))

1074 
b_öfo
->
sched_∑øms
.
weight
 = 
l
;

1075 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "ˇp", &
l
, 0))

1076 
b_öfo
->
sched_∑øms
.
ˇp
 = 
l
;

1077 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "≥riod", &
l
, 0))

1078 
b_öfo
->
sched_∑øms
.
≥riod
 = 
l
;

1079 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "¶i˚", &
l
, 0))

1080 
b_öfo
->
sched_∑øms
.
¶i˚
 = 
l
;

1081 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "œãncy", &
l
, 0))

1082 
b_öfo
->
sched_∑øms
.
œãncy
 = 
l
;

1083 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "exå©ime", &
l
, 0))

1084 
b_öfo
->
sched_∑øms
.
exå©ime
 = 
l
;

1086 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "mem‹y", &
l
, 0))

1087 
b_öfo
->
èrgë_memkb
 = 
l
 * 1024;

1089 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "maxmem", &
l
, 0))

1090 
b_öfo
->
max_memkb
 = 
l
 * 1024;

1092 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "v˝us", &
l
, 0)) {

1093 
v˝us
 = 
l
;

1094 i‡(
	`libxl_˝u_bôm≠_Æloc
(
˘x
, &
b_öfo
->
avaû_v˝us
, 
l
)) {

1095 
	`Ârötf
(
°dîr
, "UnableÅoállocate cpumap\n");

1096 
	`exô
(1);

1098 
	`libxl_bôm≠_£t_n⁄e
(&
b_öfo
->
avaû_v˝us
);

1099 
l
-- > 0)

1100 
	`libxl_bôm≠_£t
((&
b_öfo
->
avaû_v˝us
), 
l
);

1103 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "maxv˝us", &
l
, 0))

1104 
b_öfo
->
max_v˝us
 = 
l
;

1106 i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "vu¨t", &
buf
, 0)) {

1107 i‡(
	`libxl_vu¨t_ty≥_‰om_°rög
(
buf
, &
b_öfo
->
¨ch_¨m
.
vu¨t
)) {

1108 
	`Ârötf
(
°dîr
, "ERROR: invalid value \"%s\" for \"vuart\"\n",

1109 
buf
);

1110 
	`exô
(1);

1113 if(
b_öfo
)

1114 
	`¥ötf
("I'm hîê©Ö¨£_c⁄fig_d©®bef‹ê∑r£_vnuma_c⁄fig, maxmem=%lu\n",
b_öfo
->
max_memkb
);

1115 
	`∑r£_vnuma_c⁄fig
(
c⁄fig
, 
b_öfo
, 
vnode_∑ø
);

1116 if(
b_öfo
)

1117 
	`¥ötf
("I'm hîê©Ö¨£_c⁄fig_d©®a·îÖ¨£_vnuma_c⁄fig, maxmem=%lu\n",
b_öfo
->
max_memkb
);

1122 i‡(
b_öfo
->
max_memkb
 =
LIBXL_MEMKB_DEFAULT
)

1123 
b_öfo
->
max_memkb
 = b_öfo->
èrgë_memkb
;

1124 i‡(
b_öfo
->
max_v˝us
 == 0)

1125 
b_öfo
->
max_v˝us
 = 
v˝us
;

1127 i‡(
b_öfo
->
max_v˝us
 < 
v˝us
) {

1128 
	`Ârötf
(
°dîr
, "xl: maxvcpus < vcpus\n");

1129 
	`exô
(1);

1131 if(
b_öfo
)

1132 
	`¥ötf
("I'm hîê©Ö¨£_c⁄fig_d©®1, maxmem=%lu\n",
b_öfo
->
max_memkb
);

1134 
buf
 = 
NULL
;

1135 i‡(!
	`xlu_cfg_gë_li°
 (
c⁄fig
, "˝us", &
˝us
, &
num_˝us
, 1) ||

1136 !
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "˝us", &
buf
, 0))

1137 
	`∑r£_v˝u_afföôy
(
b_öfo
, 
˝us
, 
buf
, 
num_˝us
, 
åue
);

1139 
buf
 = 
NULL
;

1140 i‡(!
	`xlu_cfg_gë_li°
 (
c⁄fig
, "˝us_so·", &
˝us
, &
num_˝us
, 1) ||

1141 !
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "˝us_so·", &
buf
, 0))

1142 
	`∑r£_v˝u_afföôy
(
b_öfo
, 
˝us
, 
buf
, 
num_˝us
, 
Ál£
);

1144 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "max_gø¡_‰ames", &
l
, 0))

1145 
b_öfo
->
max_gø¡_‰ames
 = 
l
;

1147 
b_öfo
->
max_gø¡_‰ames
 = max_grant_frames;

1148 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "max_m≠åack_‰ames", &
l
, 0))

1149 
b_öfo
->
max_m≠åack_‰ames
 = 
l
;

1150 i‡(
max_m≠åack_‰ames
 != -1)

1151 
b_öfo
->
max_m≠åack_‰ames
 = max_maptrack_frames;

1153 
	`libxl_defboﬁ_£t
(&
b_öfo
->
˛aim_mode
, claim_mode);

1155 i‡(
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "⁄_powîoff", &
buf
, 0))

1156 
buf
 = "destroy";

1157 i‡(!
	`∑r£_a˘i⁄_⁄_shutdown
(
buf
, &
d_c⁄fig
->
⁄_powîoff
)) {

1158 
	`Ârötf
(
°dîr
, "Unknow¿⁄_powîof‡a˘i⁄ \"%s\" s≥cifõd\n", 
buf
);

1159 
	`exô
(1);

1162 i‡(
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "⁄_ªboŸ", &
buf
, 0))

1163 
buf
 = "restart";

1164 i‡(!
	`∑r£_a˘i⁄_⁄_shutdown
(
buf
, &
d_c⁄fig
->
⁄_ªboŸ
)) {

1165 
	`Ârötf
(
°dîr
, "Unknow¿⁄_ªboŸá˘i⁄ \"%s\" s≥cifõd\n", 
buf
);

1166 
	`exô
(1);

1169 i‡(
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "⁄_w©chdog", &
buf
, 0))

1170 
buf
 = "destroy";

1171 i‡(!
	`∑r£_a˘i⁄_⁄_shutdown
(
buf
, &
d_c⁄fig
->
⁄_w©chdog
)) {

1172 
	`Ârötf
(
°dîr
, "Unknow¿⁄_w©chdogá˘i⁄ \"%s\" s≥cifõd\n", 
buf
);

1173 
	`exô
(1);

1177 i‡(
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "⁄_¸ash", &
buf
, 0))

1178 
buf
 = "destroy";

1179 i‡(!
	`∑r£_a˘i⁄_⁄_shutdown
(
buf
, &
d_c⁄fig
->
⁄_¸ash
)) {

1180 
	`Ârötf
(
°dîr
, "Unknow¿⁄_¸ashá˘i⁄ \"%s\" s≥cifõd\n", 
buf
);

1181 
	`exô
(1);

1184 i‡(
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "⁄_so·_ª£t", &
buf
, 0))

1185 
buf
 = "soft-reset";

1186 i‡(!
	`∑r£_a˘i⁄_⁄_shutdown
(
buf
, &
d_c⁄fig
->
⁄_so·_ª£t
)) {

1187 
	`Ârötf
(
°dîr
, "Unknow¿⁄_so·_ª£àa˘i⁄ \"%s\" s≥cifõd\n", 
buf
);

1188 
	`exô
(1);

1194 
b_öfo
->
shadow_memkb
 = !
	`xlu_cfg_gë_l⁄g
(
c⁄fig
, "shadow_mem‹y", &
l
, 0)

1195 ? 
l
 * 1024

1196 : 
	`libxl_gë_ªquúed_shadow_mem‹y
(
b_öfo
->
max_memkb
,

1197 
b_öfo
->
max_v˝us
);

1199 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "nomigøã", &
b_öfo
->
dißbÀ_migøã
, 0);

1201 i‡(!
	`xlu_cfg_gë_l⁄g
(
c⁄fig
, "tsc_mode", &
l
, 1)) {

1202 c⁄° *
s
 = 
	`libxl_tsc_mode_to_°rög
(
l
);

1203 
	`Ârötf
(
°dîr
, "WARNING: specifying \"tsc_mode\"ásán integer is deprecated. "

1205 
s
 ? "e.g.Åsc_mode=\"" : "",

1206 
s
 ? s : "",

1207 
s
 ? "\"" : "");

1209 i‡(
l
 < 
LIBXL_TSC_MODE_DEFAULT
 ||

1210 
l
 > 
LIBXL_TSC_MODE_NATIVE_PARAVIRT
) {

1211 
	`Ârötf
(
°dîr
, "ERROR: invÆid vÆuê%ld f‹ \"tsc_mode\"\n", 
l
);

1212 
	`exô
 (1);

1214 
b_öfo
->
tsc_mode
 = 
l
;

1215 } i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "tsc_mode", &
buf
, 0)) {

1216 
	`Ârötf
(
°dîr
, "gŸáÅs¯modê°rög: \"%s\"\n", 
buf
);

1217 i‡(
	`libxl_tsc_mode_‰om_°rög
(
buf
, &
b_öfo
->
tsc_mode
)) {

1218 
	`Ârötf
(
°dîr
, "ERROR: invalid value \"%s\" for \"tsc_mode\"\n",

1219 
buf
);

1220 
	`exô
 (1);

1224 i‡(!
	`xlu_cfg_gë_l⁄g
(
c⁄fig
, "πc_timeoff£t", &
l
, 0))

1225 
b_öfo
->
πc_timeoff£t
 = 
l
;

1227 i‡(!
	`xlu_cfg_gë_l⁄g
(
c⁄fig
, "vncvõwî", &
l
, 0))

1228 
	`Ârötf
(
°dîr
, "WARNING: ignoring \"vncviewer\" option. "

1231 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "loˇ…ime", &
b_öfo
->
loˇ…ime
, 0);

1233 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "vide‹am", &
l
, 0))

1234 
b_öfo
->
video_memkb
 = 
l
 * 1024;

1236 i‡(!
	`xlu_cfg_gë_l⁄g
(
c⁄fig
, "max_evít_ch™√ls", &
l
, 0))

1237 
b_öfo
->
evít_ch™√ls
 = 
l
;

1239 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "kî√l", &
b_öfo
->
kî√l
, 0);

1240 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "ømdisk", &
b_öfo
->
ømdisk
, 0);

1241 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "devi˚_åì", &
b_öfo
->
devi˚_åì
, 0);

1242 
b_öfo
->
cmdlöe
 = 
	`∑r£_cmdlöe
(
c⁄fig
);

1244 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "drivî_domaö", &
c_öfo
->
drivî_domaö
, 0);

1245 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "a˝i", &
b_öfo
->
a˝i
, 0);

1247 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "boŸlﬂdî", &
b_öfo
->
boŸlﬂdî
, 0);

1248 
	`xlu_cfg_gë_li°_as_°rög_li°
(
c⁄fig
, "bootloader_args",

1249 &
b_öfo
->
boŸlﬂdî_¨gs
, 1)) {

1252 
ESRCH
: ;

1253 
EINVAL
:

1254 i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "boŸlﬂdî_¨gs", &
buf
, 0)) {

1256 
	`Ârötf
(
°dîr
, "WARNING: Specifying \"bootloader_args\""

1259 
	`•lô_°rög_öto_°rög_li°
(
buf
, " \t\n",

1260 &
b_öfo
->
boŸlﬂdî_¨gs
);

1264 
	`Ârötf
(
°dîr
,"xl: UnableÅoÖarse bootloader_args.\n");

1265 
	`exô
(-
ERROR_FAIL
);

1268 i‡(!
	`xlu_cfg_gë_l⁄g
(
c⁄fig
, "timî_mode", &
l
, 1)) {

1269 c⁄° *
s
 = 
	`libxl_timî_mode_to_°rög
(
l
);

1271 i‡(
b_öfo
->
ty≥
 =
LIBXL_DOMAIN_TYPE_PV
) {

1272 
	`Ârötf
(
°dîr
,

1274 
	`exô
(-
ERROR_FAIL
);

1277 
	`Ârötf
(
°dîr
,

1280 
s
 ? "e.g.Åimer_mode=\"" : "",

1281 
s
 ? s : "",

1282 
s
 ? "\"" : "");

1284 i‡(
l
 < 
LIBXL_TIMER_MODE_DELAY_FOR_MISSED_TICKS
 ||

1285 
l
 > 
LIBXL_TIMER_MODE_ONE_MISSED_TICK_PENDING
) {

1286 
	`Ârötf
(
°dîr
, "ERROR: invalid value %ld for \"timer_mode\"\n",

1287 
l
);

1288 
	`exô
 (1);

1290 
b_öfo
->
timî_mode
 = 
l
;

1291 } i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "timî_mode", &
buf
, 0)) {

1292 i‡(
b_öfo
->
ty≥
 =
LIBXL_DOMAIN_TYPE_PV
) {

1293 
	`Ârötf
(
°dîr
,

1295 
	`exô
(-
ERROR_FAIL
);

1298 i‡(
	`libxl_timî_mode_‰om_°rög
(
buf
, &
b_öfo
->
timî_mode
)) {

1299 
	`Ârötf
(
°dîr
,

1300 "ERROR: invÆid vÆuê\"%s\" f‹ \"timî_mode\"\n", 
buf
);

1301 
	`exô
 (1);

1305 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "√°edhvm", &
b_öfo
->
√°ed_hvm
, 0);

1307 
b_öfo
->
ty≥
) {

1308 
LIBXL_DOMAIN_TYPE_HVM
:

1309 
kî√l_ba£«me
 = 
	`libxl_ba£«me
(
b_öfo
->
kî√l
);

1310 i‡(!
	`°rcmp
(
kî√l_ba£«me
, "hvmloader")) {

1311 
	`Ârötf
(
°dîr
, "WARNING: you seemÅo be using \"kernel\" "

1315 
b_öfo
->
kî√l
 = 
NULL
;

1317 
	`‰ì
(
kî√l_ba£«me
);

1319 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "firmware_override",

1320 &
b_öfo
->
u
.
hvm
.
fúmw¨e
, 0);

1321 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "bios_path_override",

1322 &
b_öfo
->
u
.
hvm
.
sy°em_fúmw¨e
, 0);

1323 i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "bios", &
buf
, 0)) {

1324 i‡(
	`libxl_bios_ty≥_‰om_°rög
(
buf
, &
b_öfo
->
u
.
hvm
.
bios
)) {

1325 
	`Ârötf
(
°dîr
, "ERROR: invalid value \"%s\" for \"bios\"\n",

1326 
buf
);

1327 
	`exô
 (1);

1329 } i‡(
b_öfo
->
u
.
hvm
.
sy°em_fúmw¨e
)

1330 
	`Ârötf
(
°dîr
, "WARNING: "

1333 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "∑e", &
b_öfo
->
u
.
hvm
.
∑e
, 0);

1334 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "a˝i_s3", &
b_öfo
->
u
.
hvm
.
a˝i_s3
, 0);

1335 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "a˝i_s4", &
b_öfo
->
u
.
hvm
.
a˝i_s4
, 0);

1336 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "a˝i_œ±›_¶©e", &
b_öfo
->
u
.
hvm
.
a˝i_œ±›_¶©e
, 0);

1337 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "nx", &
b_öfo
->
u
.
hvm
.
nx
, 0);

1338 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "h≥t", &
b_öfo
->
u
.
hvm
.
h≥t
, 0);

1339 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "v±_Æign", &
b_öfo
->
u
.
hvm
.
v±_Æign
, 0);

1340 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "≠ic", &
b_öfo
->
≠ic
, 0);

1342 
	`xlu_cfg_gë_li°
(
c⁄fig
, "viridian",

1343 &
vúidün
, &
num_vúidün
, 1))

1346 i‡(
num_vúidün
) {

1347 
	`libxl_bôm≠_Æloc
(
˘x
, &
b_öfo
->
u
.
hvm
.
vúidün_íabÀ
,

1348 
LIBXL_BUILDINFO_HVM_VIRIDIAN_ENABLE_DISABLE_WIDTH
);

1349 
	`libxl_bôm≠_Æloc
(
˘x
, &
b_öfo
->
u
.
hvm
.
vúidün_dißbÀ
,

1350 
LIBXL_BUILDINFO_HVM_VIRIDIAN_ENABLE_DISABLE_WIDTH
);

1352 
i
 = 0; i < 
num_vúidün
; i++) {

1353 
libxl_vúidün_ílighãnmít
 
v
;

1355 
buf
 = 
	`xlu_cfg_gë_li°ôem
(
vúidün
, 
i
);

1356 i‡(
	`°rcmp
(
buf
, "all") == 0)

1357 
	`libxl_bôm≠_£t_™y
(&
b_öfo
->
u
.
hvm
.
vúidün_íabÀ
);

1358 i‡(
	`°rcmp
(
buf
, "defaults") == 0)

1359 
	`libxl_defboﬁ_£t
(&
b_öfo
->
u
.
hvm
.
vúidün
, 
åue
);

1361 
libxl_bôm≠
 *
s
 = &
b_öfo
->
u
.
hvm
.
vúidün_íabÀ
;

1362 
libxl_bôm≠
 *
r
 = &
b_öfo
->
u
.
hvm
.
vúidün_dißbÀ
;

1364 i‡(*
buf
 == '!') {

1365 
s
 = &
b_öfo
->
u
.
hvm
.
vúidün_dißbÀ
;

1366 
r
 = &
b_öfo
->
u
.
hvm
.
vúidün_íabÀ
;

1367 
buf
++;

1370 
e
 = 
	`libxl_vúidün_ílighãnmít_‰om_°rög
(
buf
, &
v
);

1371 i‡(
e
) {

1372 
	`Ârötf
(
°dîr
,

1374 
buf
);

1375 
	`exô
(-
ERROR_FAIL
);

1378 
	`libxl_bôm≠_£t
(
s
, 
v
);

1379 
	`libxl_bôm≠_ª£t
(
r
, 
v
);

1383 
ESRCH
: ;

1384 
EINVAL
:

1385 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "vúidün", &
b_öfo
->
u
.
hvm
.
vúidün
, 1);

1388 
	`Ârötf
(
°dîr
,"xl: UnableÅoÖarse viridianÉnlightenments.\n");

1389 
	`exô
(-
ERROR_FAIL
);

1392 i‡(!
	`xlu_cfg_gë_l⁄g
(
c⁄fig
, "mmio_hﬁe", &
l
, 0)) {

1393 
uöt64_t
 
mmio_hﬁe_size
;

1395 
b_öfo
->
u
.
hvm
.
mmio_hﬁe_memkb
 = 
l
 * 1024;

1396 
mmio_hﬁe_size
 = 
b_öfo
->
u
.
hvm
.
mmio_hﬁe_memkb
 * 1024;

1397 i‡(
mmio_hﬁe_size
 < 
HVM_BELOW_4G_MMIO_LENGTH
 ||

1398 
mmio_hﬁe_size
 > 
HVM_BELOW_4G_MMIO_START
) {

1399 
	`Ârötf
(
°dîr
,

1400 "ERROR: invÆid vÆuê%ld f‹ \"mmio_hﬁe\"\n", 
l
);

1401 
	`exô
 (1);

1405 i‡(!
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "Æç2mhvm", &
b_öfo
->
u
.
hvm
.
Æç2m
, 0))

1406 
	`Ârötf
(
°dîr
, "WARNING: Specifying \"altp2mhvm\" is deprecated. "

1409 
	`xlu_cfg_ª∂a˚_°rög
(
c⁄fig
, "smbios_firmware",

1410 &
b_öfo
->
u
.
hvm
.
smbios_fúmw¨e
, 0);

1411 
	`xlu_cfg_ª∂a˚_°rög
(
c⁄fig
, "acpi_firmware",

1412 &
b_öfo
->
u
.
hvm
.
a˝i_fúmw¨e
, 0);

1414 i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "ms_vm_gíid", &
buf
, 0)) {

1415 i‡(!
	`°rcmp
(
buf
, "generate")) {

1416 
e
 = 
	`libxl_ms_vm_gíid_gíî©e
(
˘x
, &
b_öfo
->
u
.
hvm
.
ms_vm_gíid
);

1417 i‡(
e
) {

1418 
	`Ârötf
(
°dîr
, "ERROR: failedÅo generateá VM Generation ID\n");

1419 
	`exô
(1);

1421 } i‡(!
	`°rcmp
(
buf
, "none")) {

1424 
	`Ârötf
(
°dîr
, "ERROR: \"ms_vm_genid\" option must be \"generate\" or \"none\"\n");

1425 
	`exô
(1);

1429 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "rdm_mem_bound¨y", &
l
, 0))

1430 
b_öfo
->
u
.
hvm
.
rdm_mem_bound¨y_memkb
 = 
l
 * 1024;

1432 
	`xlu_cfg_gë_li°
(
c⁄fig
, "mca_caps",

1433 &
mˇ_ˇps
, &
num_mˇ_ˇps
, 1))

1436 
i
 = 0; i < 
num_mˇ_ˇps
; i++) {

1437 
buf
 = 
	`xlu_cfg_gë_li°ôem
(
mˇ_ˇps
, 
i
);

1438 i‡(!
	`°rcmp
(
buf
, "lmce"))

1439 
b_öfo
->
u
.
hvm
.
mˇ_ˇps
 |
XEN_HVM_MCA_CAP_LMCE
;

1441 
	`Ârötf
(
°dîr
, "ERROR: unrecognized MCA capability '%s'.\n",

1442 
buf
);

1443 
	`exô
(-
ERROR_FAIL
);

1448 
ESRCH
:

1452 
	`Ârötf
(
°dîr
, "ERROR: unableÅoÖarse mca_caps.\n");

1453 
	`exô
(-
ERROR_FAIL
);

1468 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "fúmw¨e", &
buf
, 0) &&

1469 
	`libxl_bios_ty≥_‰om_°rög
(
buf
, &
b_öfo
->
u
.
hvm
.
bios
)) {

1470 i‡(!
	`°∫cmp
(
buf
, "uefi", 
	`°æí
(buf)))

1471 
b_öfo
->
u
.
hvm
.
bios
 = 
LIBXL_BIOS_TYPE_OVMF
;

1472 i‡(
	`°∫cmp
(
buf
, "bios", 
	`°æí
(buf)))

1474 
	`xlu_cfg_ª∂a˚_°rög
(
c⁄fig
, "firmware",

1475 &
b_öfo
->
u
.
hvm
.
fúmw¨e
, 0);

1483 
LIBXL_DOMAIN_TYPE_PVH
:

1484 
LIBXL_DOMAIN_TYPE_PV
:

1491 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "fúmw¨e", &
buf
, 0)) {

1492 i‡(
b_öfo
->
kî√l
) {

1493 
	`Ârötf
(
°dîr
,

1495 
	`exô
(1);

1497 i‡(
	`°∫cmp
(
buf
, "pvgrub32", 
	`°æí
(buf)) &&

1498 
	`°∫cmp
(
buf
, "pvgrub64", 
	`°æí
(buf))) {

1499 
	`Ârötf
(
°dîr
,

1501 
	`exô
(1);

1504 
	`xa•rötf
(&
b_öfo
->
kî√l
, 
XENFIRMWAREDIR
 "/%s.bö", 
buf
);

1506 i‡(!
b_öfo
->
boŸlﬂdî
 && !b_öfo->
kî√l
) {

1507 
	`Ârötf
(
°dîr
, "Neither kernelÇor bootloader specified\n");

1508 
	`exô
(1);

1514 
	`ab‹t
();

1517 i‡(!
	`xlu_cfg_gë_l⁄g
(
c⁄fig
, "Æç2m", &
l
, 1)) {

1518 i‡(
l
 < 
LIBXL_ALTP2M_MODE_DISABLED
 ||

1519 
l
 > 
LIBXL_ALTP2M_MODE_LIMITED
) {

1520 
	`Ârötf
(
°dîr
, "ERROR: invÆid vÆuê%ld f‹ \"Æç2m\"\n", 
l
);

1521 
	`exô
 (1);

1524 
b_öfo
->
Æç2m
 = 
l
;

1525 } i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "Æç2m", &
buf
, 0)) {

1526 i‡(
	`libxl_Æç2m_mode_‰om_°rög
(
buf
, &
b_öfo
->
Æç2m
)) {

1527 
	`Ârötf
(
°dîr
, "ERROR: invalid value \"%s\" for \"altp2m\"\n",

1528 
buf
);

1529 
	`exô
 (1);

1533 i‡(!
	`xlu_cfg_gë_li°
(
c⁄fig
, "i›‹ts", &
i›‹ts
, &
num_i›‹ts
, 0)) {

1534 
b_öfo
->
num_i›‹ts
 =Çum_ioports;

1535 
b_öfo
->
i›‹ts
 = 
	`ˇŒoc
(
num_i›‹ts
, (*b_info->ioports));

1536 i‡(
b_öfo
->
i›‹ts
 =
NULL
) {

1537 
	`Ârötf
(
°dîr
, "unableÅoállocate memory for ioports\n");

1538 
	`exô
(-1);

1541 
i
 = 0; i < 
num_i›‹ts
; i++) {

1542 c⁄° *
buf2
;

1543 *
ï
;

1544 
uöt32_t
 
°¨t
, 
íd
;

1545 
ul
;

1547 
buf
 = 
	`xlu_cfg_gë_li°ôem
 (
i›‹ts
, 
i
);

1548 i‡(!
buf
) {

1549 
	`Ârötf
(
°dîr
,

1550 "xl: U«bÀÅÿgëÉÀmíà#%d i¿i›‹àli°\n", 
i
);

1551 
	`exô
(1);

1553 
ul
 = 
	`°πoul
(
buf
, &
ï
, 16);

1554 i‡(
ï
 =
buf
) {

1555 
	`Ârötf
(
°dîr
, "xl: InvalidárgumentÖarsing ioport: %s\n",

1556 
buf
);

1557 
	`exô
(1);

1559 i‡(
ul
 >
UINT32_MAX
) {

1560 
	`Ârötf
(
°dîr
, "xl: i›‹à%lxÅoÿbig\n", 
ul
);

1561 
	`exô
(1);

1563 
°¨t
 = 
íd
 = 
ul
;

1565 i‡(*
ï
 == '-') {

1566 
buf2
 = 
ï
 + 1;

1567 
ul
 = 
	`°πoul
(
buf2
, &
ï
, 16);

1568 i‡(
ï
 =
buf2
 || *ï !'\0' || 
°¨t
 > 
íd
) {

1569 
	`Ârötf
(
°dîr
,

1570 "xl: InvÆidárgumíà∑rsög i›‹t: %s\n", 
buf
);

1571 
	`exô
(1);

1573 i‡(
ul
 >
UINT32_MAX
) {

1574 
	`Ârötf
(
°dîr
, "xl: i›‹à%lxÅoÿbig\n", 
ul
);

1575 
	`exô
(1);

1577 
íd
 = 
ul
;

1578 } i‡–*
ï
 != '\0' )

1579 
	`Ârötf
(
°dîr
,

1580 "xl: InvÆidárgumíà∑rsög i›‹t: %s\n", 
buf
);

1581 
b_öfo
->
i›‹ts
[
i
].
fú°
 = 
°¨t
;

1582 
b_öfo
->
i›‹ts
[
i
].
numbî
 = 
íd
 - 
°¨t
 + 1;

1586 i‡(!
	`xlu_cfg_gë_li°
(
c⁄fig
, "úqs", &
úqs
, &
num_úqs
, 0)) {

1587 
b_öfo
->
num_úqs
 =Çum_irqs;

1588 
b_öfo
->
úqs
 = 
	`ˇŒoc
(
num_úqs
, (*b_info->irqs));

1589 i‡(
b_öfo
->
úqs
 =
NULL
) {

1590 
	`Ârötf
(
°dîr
, "unableÅoállocate memory for ioports\n");

1591 
	`exô
(-1);

1593 
i
 = 0; i < 
num_úqs
; i++) {

1594 *
ï
;

1595 
ul
;

1596 
buf
 = 
	`xlu_cfg_gë_li°ôem
 (
úqs
, 
i
);

1597 i‡(!
buf
) {

1598 
	`Ârötf
(
°dîr
,

1599 "xl: U«bÀÅÿgëÉÀmíà%d i¿úqÜi°\n", 
i
);

1600 
	`exô
(1);

1602 
ul
 = 
	`°πoul
(
buf
, &
ï
, 10);

1603 i‡(
ï
 =
buf
 || *ep != '\0') {

1604 
	`Ârötf
(
°dîr
,

1605 "xl: InvÆidárgumíà∑rsög irq: %s\n", 
buf
);

1606 
	`exô
(1);

1608 i‡(
ul
 >
UINT32_MAX
) {

1609 
	`Ârötf
(
°dîr
, "xl: irq %lxÅoÿbig\n", 
ul
);

1610 
	`exô
(1);

1612 
b_öfo
->
úqs
[
i
] = 
ul
;

1616 i‡(!
	`xlu_cfg_gë_li°
(
c⁄fig
, "iomem", &
iomem
, &
num_iomem
, 0)) {

1617 
ªt
;

1618 
b_öfo
->
num_iomem
 =Çum_iomem;

1619 
b_öfo
->
iomem
 = 
	`ˇŒoc
(
num_iomem
, (*b_info->iomem));

1620 i‡(
b_öfo
->
iomem
 =
NULL
) {

1621 
	`Ârötf
(
°dîr
, "unableÅoállocate memory for iomem\n");

1622 
	`exô
(-1);

1624 
i
 = 0; i < 
num_iomem
; i++) {

1625 
u£d
;

1627 
buf
 = 
	`xlu_cfg_gë_li°ôem
 (
iomem
, 
i
);

1628 i‡(!
buf
) {

1629 
	`Ârötf
(
°dîr
,

1630 "xl: U«bÀÅÿgëÉÀmíà%d i¿iomemÜi°\n", 
i
);

1631 
	`exô
(1);

1633 
	`libxl_iomem_ønge_öô
(&
b_öfo
->
iomem
[
i
]);

1634 
ªt
 = 
	`ssˇnf
(
buf
, "%" 
SCNx64
",%" SCNx64"%n@%" SCNx64"%n",

1635 &
b_öfo
->
iomem
[
i
].
°¨t
,

1636 &
b_öfo
->
iomem
[
i
].
numbî
, &
u£d
,

1637 &
b_öfo
->
iomem
[
i
].
g‚
, &
u£d
);

1638 i‡(
ªt
 < 2 || 
buf
[
u£d
] != '\0') {

1639 
	`Ârötf
(
°dîr
,

1640 "xl: InvÆidárgumíà∑rsög iomem: %s\n", 
buf
);

1641 
	`exô
(1);

1648 i‡(!
	`xlu_cfg_gë_li°
 (
c⁄fig
, "disk", &
vbds
, 0, 0)) {

1649 
d_c⁄fig
->
num_disks
 = 0;

1650 
d_c⁄fig
->
disks
 = 
NULL
;

1651 (
buf
 = 
	`xlu_cfg_gë_li°ôem
 (
vbds
, 
d_c⁄fig
->
num_disks
)Ë!
NULL
) {

1652 
libxl_devi˚_disk
 *
disk
;

1653 *
buf2
 = 
	`°rdup
(
buf
);

1655 
disk
 = 
	`ARRAY_EXTEND_INIT_NODEVID
(
d_c⁄fig
->
disks
,

1656 
d_c⁄fig
->
num_disks
,

1657 
libxl_devi˚_disk_öô
);

1658 
	`∑r£_disk_c⁄fig
(&
c⁄fig
, 
buf2
, 
disk
);

1660 
	`‰ì
(
buf2
);

1664 i‡(!
	`xlu_cfg_gë_li°
(
c⁄fig
, "p9", &
p9devs
, 0, 0)) {

1665 
libxl_devi˚_p9
 *
p9
;

1666 *
£curôy_modñ
 = 
NULL
;

1667 *
∑th
 = 
NULL
;

1668 *
èg
 = 
NULL
;

1669 *
backíd
 = 
NULL
;

1670 *
p
, *
p2
, *
buf2
;

1672 
d_c⁄fig
->
num_p9s
 = 0;

1673 
d_c⁄fig
->
p9s
 = 
NULL
;

1674 (
buf
 = 
	`xlu_cfg_gë_li°ôem
 (
p9devs
, 
d_c⁄fig
->
num_p9s
)Ë!
NULL
) {

1675 
p9
 = 
	`ARRAY_EXTEND_INIT
(
d_c⁄fig
->
p9s
,

1676 
d_c⁄fig
->
num_p9s
,

1677 
libxl_devi˚_p9_öô
);

1678 
	`libxl_devi˚_p9_öô
(
p9
);

1680 
buf2
 = 
	`°rdup
(
buf
);

1681 
p
 = 
	`°πok
(
buf2
, ",");

1682 if(
p
) {

1684 *
p
 == ' ')

1685 ++
p
;

1686 i‡((
p2
 = 
	`°rchr
(
p
, '=')Ë=
NULL
)

1688 *
p2
 = '\0';

1689 i‡(!
	`°rcmp
(
p
, "security_model")) {

1690 
£curôy_modñ
 = 
	`°rdup
(
p2
 + 1);

1691 } if(!
	`°rcmp
(
p
, "path")) {

1692 
∑th
 = 
	`°rdup
(
p2
 + 1);

1693 } if(!
	`°rcmp
(
p
, "tag")) {

1694 
èg
 = 
	`°rdup
(
p2
 + 1);

1695 } if(!
	`°rcmp
(
p
, "backend")) {

1696 
backíd
 = 
	`°rdup
(
p2
 + 1);

1698 
	`Ârötf
(
°dîr
, "Unknow¿°rög `%s' i¿9pf†•ec\n", 
p
);

1699 
	`exô
(1);

1701 } (
p
 = 
	`°πok
(
NULL
, ",")) != NULL);

1703 i‡(!
∑th
 || !
£curôy_modñ
 || !
èg
) {

1704 
	`Ârötf
(
°dîr
, "9pfs spec missingÑequired field!\n");

1705 
	`exô
(1);

1707 
	`‰ì
(
buf2
);

1709 
	`ª∂a˚_°rög
(&
p9
->
èg
,Åag);

1710 
	`ª∂a˚_°rög
(&
p9
->
£curôy_modñ
, security_model);

1711 
	`ª∂a˚_°rög
(&
p9
->
∑th
,Öath);

1712 i‡(
backíd
)

1713 
	`ª∂a˚_°rög
(&
p9
->
backíd_dom«me
, 
backíd
);

1717 i‡(!
	`xlu_cfg_gë_li°
(
c⁄fig
, "vçm", &
vçms
, 0, 0)) {

1718 
d_c⁄fig
->
num_vçms
 = 0;

1719 
d_c⁄fig
->
vçms
 = 
NULL
;

1720 (
buf
 = 
	`xlu_cfg_gë_li°ôem
 (
vçms
, 
d_c⁄fig
->
num_vçms
)Ë!
NULL
) {

1721 
libxl_devi˚_vçm
 *
vçm
;

1722 * 
buf2
 = 
	`°rdup
(
buf
);

1723 *
p
, *
p2
;

1724 
boﬁ
 
gŸ_backíd
 = 
Ál£
;

1726 
vçm
 = 
	`ARRAY_EXTEND_INIT
(
d_c⁄fig
->
vçms
,

1727 
d_c⁄fig
->
num_vçms
,

1728 
libxl_devi˚_vçm_öô
);

1730 
p
 = 
	`°πok
(
buf2
, ",");

1731 if(
p
) {

1733 *
p
 == ' ')

1734 ++
p
;

1735 i‡((
p2
 = 
	`°rchr
(
p
, '=')Ë=
NULL
)

1737 *
p2
 = '\0';

1738 i‡(!
	`°rcmp
(
p
, "backend")) {

1739 
vçm
->
backíd_dom«me
 = 
	`°rdup
(
p2
 + 1);

1740 
gŸ_backíd
 = 
åue
;

1741 } if(!
	`°rcmp
(
p
, "uuid")) {

1742 if–
	`libxl_uuid_‰om_°rög
(&
vçm
->
uuid
, 
p2
 + 1) ) {

1743 
	`Ârötf
(
°dîr
,

1744 "FaûedÅÿ∑r£ vçm UUID: %s\n", 
p2
 + 1);

1745 
	`exô
(1);

1748 
	`Ârötf
(
°dîr
, "Unknow¿°rög `%s' i¿vçm s≥c\n", 
p
);

1749 
	`exô
(1);

1751 } (
p
 = 
	`°πok
(
NULL
, ",")) != NULL);

1753 if(!
gŸ_backíd
) {

1754 
	`Ârötf
(
°dîr
, "vtpm spec missingÑequired backend field!\n");

1755 
	`exô
(1);

1757 
	`‰ì
(
buf2
);

1761 i‡(!
	`xlu_cfg_gë_li°
(
c⁄fig
, "vdi•l", &
vdi•ls
, 0, 0)) {

1762 
d_c⁄fig
->
num_vdi•ls
 = 0;

1763 
d_c⁄fig
->
vdi•ls
 = 
NULL
;

1764 (
buf
 = 
	`xlu_cfg_gë_li°ôem
(
vdi•ls
, 
d_c⁄fig
->
num_vdi•ls
)Ë!
NULL
) {

1765 
libxl_devi˚_vdi•l
 *
vdi•l
;

1766 * 
buf2
 = 
	`°rdup
(
buf
);

1767 *
p
;

1768 
vdi•l
 = 
	`ARRAY_EXTEND_INIT
(
d_c⁄fig
->
vdi•ls
,

1769 
d_c⁄fig
->
num_vdi•ls
,

1770 
libxl_devi˚_vdi•l_öô
);

1771 
p
 = 
	`°πok
 (
buf2
, ",");

1772 
p
 !
NULL
)

1774 *
p
 == ' ')Ö++;

1775 i‡(
	`∑r£_vdi•l_c⁄fig
(
vdi•l
, 
p
)) {

1776 
	`‰ì
(
buf2
);

1777 
	`exô
(1);

1779 
p
 = 
	`°πok
 (
NULL
, ",");

1781 
	`‰ì
(
buf2
);

1782 i‡(
vdi•l
->
num_c⁄√˘‹s
 == 0) {

1783 
	`Ârötf
(
°dîr
, "AtÜeast one connector should be specified.\n");

1784 
	`exô
(1);

1789 i‡(!
	`xlu_cfg_gë_li°
(
c⁄fig
, "pvˇŒs", &
pvˇŒsifs_devs
, 0, 0)) {

1790 
d_c⁄fig
->
num_pvˇŒsifs
 = 0;

1791 
d_c⁄fig
->
pvˇŒsifs
 = 
NULL
;

1792 (
buf
 = 
	`xlu_cfg_gë_li°ôem
 (
pvˇŒsifs_devs
, 
d_c⁄fig
->
num_pvˇŒsifs
)Ë!
NULL
) {

1793 
libxl_devi˚_pvˇŒsif
 *
pvˇŒsif
;

1794 *
backíd
 = 
NULL
;

1795 *
p
, *
p2
, *
buf2
;

1796 
pvˇŒsif
 = 
	`ARRAY_EXTEND_INIT
(
d_c⁄fig
->
pvˇŒsifs
,

1797 
d_c⁄fig
->
num_pvˇŒsifs
,

1798 
libxl_devi˚_pvˇŒsif_öô
);

1800 
buf2
 = 
	`°rdup
(
buf
);

1801 
p
 = 
	`°πok
(
buf2
, ",");

1802 i‡(
p
) {

1804 *
p
 == ' ')

1805 ++
p
;

1806 i‡((
p2
 = 
	`°rchr
(
p
, '=')Ë=
NULL
)

1808 *
p2
 = '\0';

1809 if(!
	`°rcmp
(
p
, "backend")) {

1810 
backíd
 = 
	`°rdup
(
p2
 + 1);

1812 
	`Ârötf
(
°dîr
, "Unknow¿°rög `%s' i¿pvˇŒ†•ec\n", 
p
);

1813 
	`exô
(1);

1815 } (
p
 = 
	`°πok
(
NULL
, ",")) != NULL);

1817 
	`‰ì
(
buf2
);

1819 i‡(
backíd
)

1820 
	`ª∂a˚_°rög
(&
pvˇŒsif
->
backíd_dom«me
, 
backíd
);

1824 i‡(!
	`xlu_cfg_gë_li°
 (
c⁄fig
, "ch™√l", &
ch™√ls
, 0, 0)) {

1825 
d_c⁄fig
->
num_ch™√ls
 = 0;

1826 
d_c⁄fig
->
ch™√ls
 = 
NULL
;

1827 (
buf
 = 
	`xlu_cfg_gë_li°ôem
 (
ch™√ls
,

1828 
d_c⁄fig
->
num_ch™√ls
)Ë!
NULL
) {

1829 
libxl_devi˚_ch™√l
 *
chn
;

1830 
libxl_°rög_li°
 
∑ús
;

1831 *
∑th
 = 
NULL
;

1832 
Àn
;

1834 
chn
 = 
	`ARRAY_EXTEND_INIT
(
d_c⁄fig
->
ch™√ls
, d_c⁄fig->
num_ch™√ls
,

1835 
libxl_devi˚_ch™√l_öô
);

1837 
	`•lô_°rög_öto_°rög_li°
(
buf
, ",", &
∑ús
);

1838 
Àn
 = 
	`libxl_°rög_li°_Àngth
(&
∑ús
);

1839 
i
 = 0; i < 
Àn
; i++) {

1840 *
key
, *
key_u¡rimmed
, *
vÆue
, *
vÆue_u¡rimmed
;

1841 
rc
;

1842 
rc
 = 
	`•lô_°rög_öto_∑ú
(
∑ús
[
i
], "=",

1843 &
key_u¡rimmed
,

1844 &
vÆue_u¡rimmed
);

1845 i‡(
rc
 != 0) {

1846 
	`Ârötf
(
°dîr
, "failedÅoÖarse channel configuration: %s",

1847 
∑ús
[
i
]);

1848 
	`exô
(1);

1850 
	`åim
(
is•a˚
, 
key_u¡rimmed
, &
key
);

1851 
	`åim
(
is•a˚
, 
vÆue_u¡rimmed
, &
vÆue
);

1853 i‡(!
	`°rcmp
(
key
, "backend")) {

1854 
	`ª∂a˚_°rög
(&
chn
->
backíd_dom«me
, 
vÆue
);

1855 } i‡(!
	`°rcmp
(
key
, "name")) {

1856 
	`ª∂a˚_°rög
(&
chn
->
«me
, 
vÆue
);

1857 } i‡(!
	`°rcmp
(
key
, "path")) {

1858 
	`ª∂a˚_°rög
(&
∑th
, 
vÆue
);

1859 } i‡(!
	`°rcmp
(
key
, "connection")) {

1860 i‡(!
	`°rcmp
(
vÆue
, "pty")) {

1861 
chn
->
c⁄√˘i⁄
 = 
LIBXL_CHANNEL_CONNECTION_PTY
;

1862 } i‡(!
	`°rcmp
(
vÆue
, "socket")) {

1863 
chn
->
c⁄√˘i⁄
 = 
LIBXL_CHANNEL_CONNECTION_SOCKET
;

1865 
	`Ârötf
(
°dîr
, "unknown channel connection '%s'\n",

1866 
vÆue
);

1867 
	`exô
(1);

1870 
	`Ârötf
(
°dîr
, "unknown channelÖarameter '%s',"

1871 " ign‹ög\n", 
key
);

1873 
	`‰ì
(
key
);

1874 
	`‰ì
(
key_u¡rimmed
);

1875 
	`‰ì
(
vÆue
);

1876 
	`‰ì
(
vÆue_u¡rimmed
);

1878 
chn
->
c⁄√˘i⁄
) {

1879 
LIBXL_CHANNEL_CONNECTION_UNKNOWN
:

1880 
	`Ârötf
(
°dîr
, "channel has unknown 'connection'\n");

1881 
	`exô
(1);

1882 
LIBXL_CHANNEL_CONNECTION_SOCKET
:

1883 i‡(!
∑th
) {

1884 
	`Ârötf
(
°dîr
, "channel connection 'socket'ÑequiresÖath=..\n");

1885 
	`exô
(1);

1887 
chn
->
u
.
sockë
.
∑th
 = 
	`x°rdup
(path);

1889 
LIBXL_CHANNEL_CONNECTION_PTY
:

1893 
	`Ârötf
(
°dîr
, "unknown channel connection: %d",

1894 
chn
->
c⁄√˘i⁄
);

1895 
	`exô
(1);

1897 
	`libxl_°rög_li°_di•o£
(&
∑ús
);

1898 
	`‰ì
(
∑th
);

1902 i‡(!
	`xlu_cfg_gë_li°
 (
c⁄fig
, "vif", &
nics
, 0, 0)) {

1903 
d_c⁄fig
->
num_nics
 = 0;

1904 
d_c⁄fig
->
nics
 = 
NULL
;

1905 (
buf
 = 
	`xlu_cfg_gë_li°ôem
 (
nics
, 
d_c⁄fig
->
num_nics
)Ë!
NULL
) {

1906 
libxl_devi˚_nic
 *
nic
;

1907 *
buf2
 = 
	`°rdup
(
buf
);

1908 *
p
;

1910 
nic
 = 
	`ARRAY_EXTEND_INIT
(
d_c⁄fig
->
nics
,

1911 
d_c⁄fig
->
num_nics
,

1912 
libxl_devi˚_nic_öô
);

1913 
	`£t_deÁu…_nic_vÆues
(
nic
);

1915 
p
 = 
	`°πok
(
buf2
, ",");

1916 i‡(!
p
)

1917 
skù_nic
;

1919 *
p
 == ' ')

1920 
p
++;

1921 
	`∑r£_nic_c⁄fig
(
nic
, &
c⁄fig
, 
p
);

1922 } (
p
 = 
	`°πok
(
NULL
, ",")) != NULL);

1923 
skù_nic
:

1924 
	`‰ì
(
buf2
);

1928 i‡(!
	`xlu_cfg_gë_li°
(
c⁄fig
, "vif2", 
NULL
, 0, 0)) {

1929 
	`Ârötf
(
°dîr
, "WARNING: vif2:Çetchannel2 is deprecatedándÇot supported by xl\n");

1932 
d_c⁄fig
->
num_vfbs
 = 0;

1933 
d_c⁄fig
->
num_vkbs
 = 0;

1934 
d_c⁄fig
->
vfbs
 = 
NULL
;

1935 
d_c⁄fig
->
vkbs
 = 
NULL
;

1937 i‡(!
	`xlu_cfg_gë_li°
 (
c⁄fig
, "vfb", &
cvfbs
, 0, 0)) {

1938 (
buf
 = 
	`xlu_cfg_gë_li°ôem
 (
cvfbs
, 
d_c⁄fig
->
num_vfbs
)Ë!
NULL
) {

1939 
libxl_devi˚_vfb
 *
vfb
;

1940 
libxl_devi˚_vkb
 *
vkb
;

1942 *
buf2
 = 
	`°rdup
(
buf
);

1943 *
p
, *
p2
;

1945 
vfb
 = 
	`ARRAY_EXTEND_INIT
(
d_c⁄fig
->
vfbs
, d_c⁄fig->
num_vfbs
,

1946 
libxl_devi˚_vfb_öô
);

1948 
vkb
 = 
	`ARRAY_EXTEND_INIT
(
d_c⁄fig
->
vkbs
, d_c⁄fig->
num_vkbs
,

1949 
libxl_devi˚_vkb_öô
);

1951 
p
 = 
	`°πok
(
buf2
, ",");

1952 i‡(!
p
)

1953 
skù_vfb
;

1955 *
p
 == ' ')

1956 
p
++;

1957 i‡((
p2
 = 
	`°rchr
(
p
, '=')Ë=
NULL
)

1959 *
p2
 = '\0';

1960 i‡(!
	`°rcmp
(
p
, "vnc")) {

1961 
	`libxl_defboﬁ_£t
(&
vfb
->
vnc
.
íabÀ
, 
	`©oi
(
p2
 + 1));

1962 } i‡(!
	`°rcmp
(
p
, "vnclisten")) {

1963 
	`‰ì
(
vfb
->
vnc
.
li°í
);

1964 
vfb
->
vnc
.
li°í
 = 
	`°rdup
(
p2
 + 1);

1965 } i‡(!
	`°rcmp
(
p
, "vncpasswd")) {

1966 
	`‰ì
(
vfb
->
vnc
.
∑sswd
);

1967 
vfb
->
vnc
.
∑sswd
 = 
	`°rdup
(
p2
 + 1);

1968 } i‡(!
	`°rcmp
(
p
, "vncdisplay")) {

1969 
vfb
->
vnc
.
di•œy
 = 
	`©oi
(
p2
 + 1);

1970 } i‡(!
	`°rcmp
(
p
, "vncunused")) {

1971 
	`libxl_defboﬁ_£t
(&
vfb
->
vnc
.
födunu£d
, 
	`©oi
(
p2
 + 1));

1972 } i‡(!
	`°rcmp
(
p
, "keymap")) {

1973 
	`‰ì
(
vfb
->
keym≠
);

1974 
vfb
->
keym≠
 = 
	`°rdup
(
p2
 + 1);

1975 } i‡(!
	`°rcmp
(
p
, "sdl")) {

1976 
	`libxl_defboﬁ_£t
(&
vfb
->
sdl
.
íabÀ
, 
	`©oi
(
p2
 + 1));

1977 } i‡(!
	`°rcmp
(
p
, "opengl")) {

1978 
	`libxl_defboﬁ_£t
(&
vfb
->
sdl
.
›ígl
, 
	`©oi
(
p2
 + 1));

1979 } i‡(!
	`°rcmp
(
p
, "display")) {

1980 
	`‰ì
(
vfb
->
sdl
.
di•œy
);

1981 
vfb
->
sdl
.
di•œy
 = 
	`°rdup
(
p2
 + 1);

1982 } i‡(!
	`°rcmp
(
p
, "xauthority")) {

1983 
	`‰ì
(
vfb
->
sdl
.
xauth‹ôy
);

1984 
vfb
->
sdl
.
xauth‹ôy
 = 
	`°rdup
(
p2
 + 1);

1986 } (
p
 = 
	`°πok
(
NULL
, ",")) != NULL);

1988 
skù_vfb
:

1989 
	`‰ì
(
buf2
);

1993 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "pci_msôøn¶©e", &
l
, 0))

1994 
pci_msôøn¶©e
 = 
l
;

1996 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "pci_powî_mgmt", &
l
, 0))

1997 
pci_powî_mgmt
 = 
l
;

1999 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "pci_≥rmissive", &
l
, 0))

2000 
pci_≥rmissive
 = 
l
;

2002 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "pci_£ize", &
l
, 0))

2003 
pci_£ize
 = 
l
;

2007 i‡(
c_öfo
->
ty≥
 =
LIBXL_DOMAIN_TYPE_PV
) {

2008 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "e820_ho°", &
b_öfo
->
u
.
pv
.
e820_ho°
, 0);

2011 i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "rdm", &
buf
, 0)) {

2012 
libxl_rdm_ª£rve
 
rdm
;

2013 i‡(!
	`xlu_rdm_∑r£
(
c⁄fig
, &
rdm
, 
buf
)) {

2014 
b_öfo
->
u
.
hvm
.
rdm
.
°øãgy
 =Ñdm.strategy;

2015 
b_öfo
->
u
.
hvm
.
rdm
.
pﬁicy
 =Ñdm.policy;

2019 i‡(!
	`xlu_cfg_gë_li°
 (
c⁄fig
, "pci", &
pcis
, 0, 0)) {

2020 
d_c⁄fig
->
num_pcidevs
 = 0;

2021 
d_c⁄fig
->
pcidevs
 = 
NULL
;

2022 
i
 = 0; (
buf
 = 
	`xlu_cfg_gë_li°ôem
 (
pcis
, i)Ë!
NULL
; i++) {

2023 
libxl_devi˚_pci
 *
pcidev
;

2025 
pcidev
 = 
	`ARRAY_EXTEND_INIT_NODEVID
(
d_c⁄fig
->
pcidevs
,

2026 
d_c⁄fig
->
num_pcidevs
,

2027 
libxl_devi˚_pci_öô
);

2028 
pcidev
->
msôøn¶©e
 = 
pci_msôøn¶©e
;

2029 
pcidev
->
powî_mgmt
 = 
pci_powî_mgmt
;

2030 
pcidev
->
≥rmissive
 = 
pci_≥rmissive
;

2031 
pcidev
->
£ize
 = 
pci_£ize
;

2036 
pcidev
->
rdm_pﬁicy
 = 
b_öfo
->
u
.
hvm
.
rdm
.
pﬁicy
;

2037 
e
 = 
	`xlu_pci_∑r£_bdf
(
c⁄fig
, 
pcidev
, 
buf
);

2038 i‡(
e
) {

2039 
	`Ârötf
(
°dîr
,

2041 
buf
);

2042 
	`exô
(-
e
);

2045 i‡(
d_c⁄fig
->
num_pcidevs
 && 
c_öfo
->
ty≥
 =
LIBXL_DOMAIN_TYPE_PV
)

2046 
	`libxl_defboﬁ_£t
(&
b_öfo
->
u
.
pv
.
e820_ho°
, 
åue
);

2049 i‡(!
	`xlu_cfg_gë_li°
 (
c⁄fig
, "dtdev", &
dtdevs
, 0, 0)) {

2050 
d_c⁄fig
->
num_dtdevs
 = 0;

2051 
d_c⁄fig
->
dtdevs
 = 
NULL
;

2052 
i
 = 0; (
buf
 = 
	`xlu_cfg_gë_li°ôem
(
dtdevs
, i)Ë!
NULL
; i++) {

2053 
libxl_devi˚_dtdev
 *
dtdev
;

2055 
dtdev
 = 
	`ARRAY_EXTEND_INIT_NODEVID
(
d_c⁄fig
->
dtdevs
,

2056 
d_c⁄fig
->
num_dtdevs
,

2057 
libxl_devi˚_dtdev_öô
);

2059 
dtdev
->
∑th
 = 
	`°rdup
(
buf
);

2060 i‡(
dtdev
->
∑th
 =
NULL
) {

2061 
	`Ârötf
(
°dîr
, "unableÅo duplicate string for dtdevs\n");

2062 
	`exô
(-1);

2067 i‡(!
	`xlu_cfg_gë_li°
(
c⁄fig
, "usb˘æ", &
usb˘æs
, 0, 0)) {

2068 
d_c⁄fig
->
num_usb˘æs
 = 0;

2069 
d_c⁄fig
->
usb˘æs
 = 
NULL
;

2070 (
buf
 = 
	`xlu_cfg_gë_li°ôem
(
usb˘æs
, 
d_c⁄fig
->
num_usb˘æs
))

2071 !
NULL
) {

2072 
libxl_devi˚_usb˘æ
 *
usb˘æ
;

2073 *
buf2
 = 
	`°rdup
(
buf
);

2074 *
p
;

2076 
usb˘æ
 = 
	`ARRAY_EXTEND_INIT
(
d_c⁄fig
->
usb˘æs
,

2077 
d_c⁄fig
->
num_usb˘æs
,

2078 
libxl_devi˚_usb˘æ_öô
);

2079 
p
 = 
	`°πok
(
buf2
, ",");

2080 i‡(!
p
)

2081 
skù_usb˘æ
;

2083 *
p
 == ' ')

2084 
p
++;

2085 i‡(
	`∑r£_usb˘æ_c⁄fig
(
usb˘æ
, 
p
))

2086 
	`exô
(1);

2087 } (
p
 = 
	`°πok
(
NULL
, ",")) != NULL);

2088 
skù_usb˘æ
:

2089 
	`‰ì
(
buf2
);

2093 i‡(!
	`xlu_cfg_gë_li°
(
c⁄fig
, "usbdev", &
usbdevs
, 0, 0)) {

2094 
d_c⁄fig
->
num_usbdevs
 = 0;

2095 
d_c⁄fig
->
usbdevs
 = 
NULL
;

2096 (
buf
 = 
	`xlu_cfg_gë_li°ôem
(
usbdevs
, 
d_c⁄fig
->
num_usbdevs
))

2097 !
NULL
) {

2098 
libxl_devi˚_usbdev
 *
usbdev
;

2099 *
buf2
 = 
	`°rdup
(
buf
);

2100 *
p
;

2102 
usbdev
 = 
	`ARRAY_EXTEND_INIT_NODEVID
(
d_c⁄fig
->
usbdevs
,

2103 
d_c⁄fig
->
num_usbdevs
,

2104 
libxl_devi˚_usbdev_öô
);

2105 
p
 = 
	`°πok
(
buf2
, ",");

2106 i‡(!
p
)

2107 
skù_usbdev
;

2109 *
p
 == ' ')

2110 
p
++;

2111 i‡(
	`∑r£_usbdev_c⁄fig
(
usbdev
, 
p
))

2112 
	`exô
(1);

2113 } (
p
 = 
	`°πok
(
NULL
, ",")) != NULL);

2114 
skù_usbdev
:

2115 
	`‰ì
(
buf2
);

2119 
	`xlu_cfg_gë_li°
(
c⁄fig
, "˝uid", &
˝uids
, 0, 1)) {

2122 c⁄° *
îr°r
;

2124 
i
 = 0; (
buf
 = 
	`xlu_cfg_gë_li°ôem
(
˝uids
, i)Ë!
NULL
; i++) {

2125 
e
 = 
	`libxl_˝uid_∑r£_c⁄fig_xíd
(&
b_öfo
->
˝uid
, 
buf
);

2126 
e
) {

2129 
îr°r
 = "illegalÜeafÇumber";

2132 
îr°r
 = "illegal subleafÇumber";

2135 
îr°r
 = "missing colon";

2138 
îr°r
 = "invalidÑegisterÇame (must beÉ[abcd]x)";

2141 
îr°r
 = "policy string must beÉxactly 32 charactersÜong";

2144 
îr°r
 = "unknownÉrror";

2147 
	`Ârötf
(
°dîr
, "whûê∑rsög CPUIDÜöe: \"%s\":\n", 
buf
);

2148 
	`Ârötf
(
°dîr
, "Éº‹ #%i: %s\n", 
e
, 
îr°r
);

2152 
EINVAL
:

2153 i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "˝uid", &
buf
, 0)) {

2154 *
buf2
, *
p
, *
°πok_±r
 = 
NULL
;

2155 c⁄° *
îr°r
;

2157 
buf2
 = 
	`°rdup
(
buf
);

2158 
p
 = 
	`°πok_r
(
buf2
, ",", &
°πok_±r
);

2159 i‡(
p
 =
NULL
) {

2160 
	`‰ì
(
buf2
);

2163 i‡(
	`°rcmp
(
p
, "host")) {

2164 
	`Ârötf
(
°dîr
, "whûê∑rsög CPUID såög: \"%s\":\n", 
buf
);

2165 
	`Ârötf
(
°dîr
, "Érror: first word must be \"host\"\n");

2166 
	`‰ì
(
buf2
);

2169 
p
 = 
	`°πok_r
(
NULL
, ",", &
°πok_±r
);Ö != NULL;

2170 
p
 = 
	`°πok_r
(
NULL
, ",", &
°πok_±r
)) {

2171 
e
 = 
	`libxl_˝uid_∑r£_c⁄fig
(&
b_öfo
->
˝uid
, 
p
);

2172 
e
) {

2175 
îr°r
 = "missing \"=\" in key=value";

2178 
îr°r
 = "unknown CPUID flagÇame";

2181 
îr°r
 = "illegal CPUID value (must be: [0|1|x|k|s])";

2184 
îr°r
 = "unknownÉrror";

2187 
	`Ârötf
(
°dîr
, "whûê∑rsög CPUID fœg: \"%s\":\n", 
p
);

2188 
	`Ârötf
(
°dîr
, "Éº‹ #%i: %s\n", 
e
, 
îr°r
);

2190 
	`‰ì
(
buf2
);

2198 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "devi˚_modñ", &
buf
, 0)) {

2199 
	`Ârötf
(
°dîr
,

2203 i‡(
	`°r°r
(
buf
, "stubdom-dm")) {

2204 i‡(
c_öfo
->
ty≥
 =
LIBXL_DOMAIN_TYPE_HVM
)

2205 
	`Ârötf
(
°dîr
, "WARNING: Or use"

2209 
	`Ârötf
(
°dîr
, "WARNING: ignoring"

2216 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "device_model_override",

2217 &
b_öfo
->
devi˚_modñ
, 0);

2218 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "devi˚_modñ_vîsi⁄", &
buf
, 0)) {

2219 i‡(!
	`°rcmp
(
buf
, "qemu-xen-traditional")) {

2220 
b_öfo
->
devi˚_modñ_vîsi⁄


2221 
LIBXL_DEVICE_MODEL_VERSION_QEMU_XEN_TRADITIONAL
;

2222 } i‡(!
	`°rcmp
(
buf
, "qemu-xen")) {

2223 
b_öfo
->
devi˚_modñ_vîsi⁄


2224 
LIBXL_DEVICE_MODEL_VERSION_QEMU_XEN
;

2226 
	`Ârötf
(
°dîr
,

2227 "Unknow¿devi˚_modñ_vîsi⁄ \"%s\" s≥cifõd\n", 
buf
);

2228 
	`exô
(1);

2230 } i‡(
b_öfo
->
devi˚_modñ
)

2231 
	`Ârötf
(
°dîr
, "WARNING: device model override given without specific DM version\n");

2232 
	`xlu_cfg_gë_defboﬁ
 (
c⁄fig
, "device_model_stubdomain_override",

2233 &
b_öfo
->
devi˚_modñ_°ubdomaö
, 0);

2235 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "device_model_stubdomain_seclabel",

2236 &
buf
, 0))

2237 
	`xlu_cfg_ª∂a˚_°rög
(
c⁄fig
, "device_model_stubdomain_seclabel",

2238 &
b_öfo
->
devi˚_modñ_ssid_œbñ
, 0);

2240 
	`xlu_cfg_ª∂a˚_°rög
(
c⁄fig
, "device_model_user",

2241 &
b_öfo
->
devi˚_modñ_u£r
, 0);

2243 
	#∑r£_exåa_¨gs
(
ty≥
) \

2244 
e
 = 
	`xlu_cfg_gë_li°_as_°rög_li°
(
c⁄fig
, "device_model_args"#type, \

2245 &
b_öfo
->
exåa
##
ty≥
, 0); \

2246 i‡(
e
 &&É !
ESRCH
) { \

2247 
	`Ârötf
(
°dîr
,"xl: UnableÅoÖarse device_model_args"#type".\n");\

2248 
	`exô
(-
ERROR_FAIL
); \

2249 }

	)

2252 
	`∑r£_exåa_¨gs
();

2255 
	`∑r£_exåa_¨gs
(
_pv
);

2258 
	`∑r£_exåa_¨gs
(
_hvm
);

2260 #unde‡
∑r£_exåa_¨gs


2264 i‡(
c_öfo
->
ty≥
 =
LIBXL_DOMAIN_TYPE_PV
 && !
d_c⁄fig
->
num_vfbs
) {

2265 
vnc_íabÀd
 = 0;

2267 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "vnc", &
l
, 0))

2268 
vnc_íabÀd
 = 
l
;

2270 i‡(
vnc_íabÀd
) {

2271 
libxl_devi˚_vfb
 *
vfb
;

2272 
libxl_devi˚_vkb
 *
vkb
;

2274 
vfb
 = 
	`ARRAY_EXTEND_INIT
(
d_c⁄fig
->
vfbs
, d_c⁄fig->
num_vfbs
,

2275 
libxl_devi˚_vfb_öô
);

2277 
vkb
 = 
	`ARRAY_EXTEND_INIT
(
d_c⁄fig
->
vkbs
, d_c⁄fig->
num_vkbs
,

2278 
libxl_devi˚_vkb_öô
);

2280 
	`∑r£_t›_Àvñ_vnc_›ti⁄s
(
c⁄fig
, &
vfb
->
vnc
);

2281 
	`∑r£_t›_Àvñ_sdl_›ti⁄s
(
c⁄fig
, &
vfb
->
sdl
);

2282 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "keym≠", &
vfb
->
keym≠
, 0);

2285 
	`∑r£_t›_Àvñ_vnc_›ti⁄s
(
c⁄fig
, &
b_öfo
->
u
.
hvm
.
vnc
);

2286 
	`∑r£_t›_Àvñ_sdl_›ti⁄s
(
c⁄fig
, &
b_öfo
->
u
.
hvm
.
sdl
);

2289 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "dm_ª°ri˘", &
b_öfo
->
dm_ª°ri˘
, 0);

2291 i‡(
c_öfo
->
ty≥
 =
LIBXL_DOMAIN_TYPE_HVM
) {

2292 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "vga", &
buf
, 0)) {

2293 i‡(!
	`°rcmp
(
buf
, "stdvga")) {

2294 
b_öfo
->
u
.
hvm
.
vga
.
köd
 = 
LIBXL_VGA_INTERFACE_TYPE_STD
;

2295 } i‡(!
	`°rcmp
(
buf
, "cirrus")) {

2296 
b_öfo
->
u
.
hvm
.
vga
.
köd
 = 
LIBXL_VGA_INTERFACE_TYPE_CIRRUS
;

2297 } i‡(!
	`°rcmp
(
buf
, "none")) {

2298 
b_öfo
->
u
.
hvm
.
vga
.
köd
 = 
LIBXL_VGA_INTERFACE_TYPE_NONE
;

2299 } i‡(!
	`°rcmp
(
buf
, "qxl")) {

2300 
b_öfo
->
u
.
hvm
.
vga
.
köd
 = 
LIBXL_VGA_INTERFACE_TYPE_QXL
;

2302 
	`Ârötf
(
°dîr
, "Unknow¿vg®\"%s\" s≥cifõd\n", 
buf
);

2303 
	`exô
(1);

2305 } i‡(!
	`xlu_cfg_gë_l⁄g
(
c⁄fig
, "°dvga", &
l
, 0))

2306 
b_öfo
->
u
.
hvm
.
vga
.
köd
 = 
l
 ? 
LIBXL_VGA_INTERFACE_TYPE_STD
 :

2307 
LIBXL_VGA_INTERFACE_TYPE_CIRRUS
;

2309 i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "hdty≥", &
buf
, 0) &&

2310 
	`libxl_hdty≥_‰om_°rög
(
buf
, &
b_öfo
->
u
.
hvm
.
hdty≥
)) {

2311 
	`Ârötf
(
°dîr
, "ERROR: invalid value \"%s\" for \"hdtype\"\n",

2312 
buf
);

2313 
	`exô
 (1);

2316 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "keym≠", &
b_öfo
->
u
.
hvm
.
keym≠
, 0);

2317 
	`xlu_cfg_gë_defboﬁ
 (
c⁄fig
, "•i˚", &
b_öfo
->
u
.
hvm
.
•i˚
.
íabÀ
, 0);

2318 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "•i˚p‹t", &
l
, 0))

2319 
b_öfo
->
u
.
hvm
.
•i˚
.
p‹t
 = 
l
;

2320 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "•i˚és_p‹t", &
l
, 0))

2321 
b_öfo
->
u
.
hvm
.
•i˚
.
és_p‹t
 = 
l
;

2322 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "spicehost",

2323 &
b_öfo
->
u
.
hvm
.
•i˚
.
ho°
, 0);

2324 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "spicedisable_ticketing",

2325 &
b_öfo
->
u
.
hvm
.
•i˚
.
dißbÀ_tickëög
, 0);

2326 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "spicepasswd",

2327 &
b_öfo
->
u
.
hvm
.
•i˚
.
∑sswd
, 0);

2328 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "spiceagent_mouse",

2329 &
b_öfo
->
u
.
hvm
.
•i˚
.
agít_mou£
, 0);

2330 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "spicevdagent",

2331 &
b_öfo
->
u
.
hvm
.
•i˚
.
vdagít
, 0);

2332 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "spice_clipboard_sharing",

2333 &
b_öfo
->
u
.
hvm
.
•i˚
.
˛ùbﬂrd_sh¨ög
, 0);

2334 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "•i˚usbªdúe˘i⁄", &
l
, 0))

2335 
b_öfo
->
u
.
hvm
.
•i˚
.
usbªdúe˘i⁄
 = 
l
;

2336 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "spice_image_compression",

2337 &
b_öfo
->
u
.
hvm
.
•i˚
.
image_com¥essi⁄
, 0);

2338 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "spice_streaming_video",

2339 &
b_öfo
->
u
.
hvm
.
•i˚
.
°ªamög_video
, 0);

2340 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "nogøphic", &
b_öfo
->
u
.
hvm
.
nogøphic
, 0);

2341 i‡(!
	`xlu_cfg_gë_l⁄g
(
c⁄fig
, "gfx_∑s°hru", &
l
, 1)) {

2342 
	`libxl_defboﬁ_£t
(&
b_öfo
->
u
.
hvm
.
gfx_∑s°hru
, 
l
);

2343 } i‡(!
	`xlu_cfg_gë_°rög
(
c⁄fig
, "gfx_∑s°hru", &
buf
, 0)) {

2344 i‡(
	`libxl_gfx_∑s°hru_köd_‰om_°rög
(
buf
,

2345 &
b_öfo
->
u
.
hvm
.
gfx_∑s°hru_köd
)) {

2346 
	`Ârötf
(
°dîr
,

2348 
buf
);

2349 
	`exô
 (1);

2351 
	`libxl_defboﬁ_£t
(&
b_öfo
->
u
.
hvm
.
gfx_∑s°hru
, 
åue
);

2353 
	`xlu_cfg_gë_li°_as_°rög_li°
(
c⁄fig
, "serial",

2354 &
b_öfo
->
u
.
hvm
.
£rül_li°
,

2359 
ESRCH
: ;

2360 
EINVAL
:

2363 i‡(!
	`xlu_cfg_ª∂a˚_°rög
(
c⁄fig
, "serial",

2364 &
b_öfo
->
u
.
hvm
.
£rül
, 0))

2368 
	`Ârötf
(
°dîr
,"xl: UnableÅoÖarse serial.\n");

2369 
	`exô
(-
ERROR_FAIL
);

2371 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "boŸ", &
b_öfo
->
u
.
hvm
.
boŸ
, 0);

2372 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "usb", &
b_öfo
->
u
.
hvm
.
usb
, 0);

2373 i‡(!
	`xlu_cfg_gë_l⁄g
 (
c⁄fig
, "usbvîsi⁄", &
l
, 0))

2374 
b_öfo
->
u
.
hvm
.
usbvîsi⁄
 = 
l
;

2375 
	`xlu_cfg_gë_li°_as_°rög_li°
(
c⁄fig
, "usbdevice",

2376 &
b_öfo
->
u
.
hvm
.
usbdevi˚_li°
,

2381 
ESRCH
: ;

2382 
EINVAL
:

2385 i‡(!
	`xlu_cfg_ª∂a˚_°rög
(
c⁄fig
, "usbdevice",

2386 &
b_öfo
->
u
.
hvm
.
usbdevi˚
, 0))

2390 
	`Ârötf
(
°dîr
,"xl: UnableÅoÖarse usbdevice.\n");

2391 
	`exô
(-
ERROR_FAIL
);

2393 
	`xlu_cfg_ª∂a˚_°rög
 (
c⁄fig
, "soundhw", &
b_öfo
->
u
.
hvm
.
soundhw
, 0);

2394 
	`xlu_cfg_gë_defboﬁ
(
c⁄fig
, "xen_platform_pci",

2395 &
b_öfo
->
u
.
hvm
.
xí_∂©f‹m_pci
, 0);

2397 if(
b_öfo
->
u
.
hvm
.
vnc
.
li°í


2398 && 
b_öfo
->
u
.
hvm
.
vnc
.
di•œy


2399 && 
	`°rchr
(
b_öfo
->
u
.
hvm
.
vnc
.
li°í
, ':'Ë!
NULL
) {

2400 
	`Ârötf
(
°dîr
,

2403 
	`exô
 (1);

2407 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "víd‹_devi˚", &
buf
, 0)) {

2408 
libxl_víd‹_devi˚
 
d
;

2410 
e
 = 
	`libxl_víd‹_devi˚_‰om_°rög
(
buf
, &
d
);

2411 i‡(
e
) {

2412 
	`Ârötf
(
°dîr
,

2414 
buf
);

2415 
	`exô
(-
ERROR_FAIL
);

2418 
b_öfo
->
u
.
hvm
.
víd‹_devi˚
 = 
d
;

2422 i‡(!
	`xlu_cfg_gë_°rög
 (
c⁄fig
, "gic_vîsi⁄", &
buf
, 1)) {

2423 
e
 = 
	`libxl_gic_vîsi⁄_‰om_°rög
(
buf
, &
b_öfo
->
¨ch_¨m
.
gic_vîsi⁄
);

2424 i‡(
e
) {

2425 
	`Ârötf
(
°dîr
,

2426 "Unknow¿gic_vîsi⁄ \"%s\" s≥cifõd\n", 
buf
);

2427 
	`exô
(-
ERROR_FAIL
);

2431 if(
b_öfo
)

2432 
	`¥ötf
("I'm hîê©Ö¨£_c⁄fig_d©®2, maxmem=%lu\n",
b_öfo
->
max_memkb
);

2433 
	`xlu_cfg_de°roy
(
c⁄fig
);

2434 
	}
}

2437 
öt64_t
 
	$∑r£_mem_size_kb
(c⁄° *
mem
)

2439 *
íd±r
;

2440 
öt64_t
 
kbyãs
;

2442 
kbyãs
 = 
	`°πﬁl
(
mem
, &
íd±r
, 10);

2444 i‡(
	`°æí
(
íd±r
) > 1)

2447 
	`tﬁowî
((
uöt8_t
)*
íd±r
)) {

2449 
kbyãs
 <<= 10;

2452 
kbyãs
 <<= 10;

2456 
kbyãs
 <<= 10;

2461 
kbyãs
 >>= 10;

2467  
kbyãs
;

2468 
	}
}

2471 
	$•lô_°rög_öto_°rög_li°
(c⁄° *
°r
,

2472 c⁄° *
dñim
,

2473 
libxl_°rög_li°
 *
p¶
)

2475 *
s
, *
ßvïå
;

2476 c⁄° *
p
;

2477 
libxl_°rög_li°
 
¶
;

2479 
i
 = 0, 
ƒ
 = 0;

2481 
s
 = 
	`°rdup
(
°r
);

2482 i‡(
s
 =
NULL
) {

2483 
	`Ârötf
(
°dîr
, "unableÅoállocate memoryÅo split string\n");

2484 
	`exô
(-1);

2488 
p
 = 
	`°πok_r
(
s
, 
dñim
, &
ßvïå
);

2490 
ƒ
++;

2491 } (
p
 = 
	`°πok_r
(
NULL
, 
dñim
, &
ßvïå
)));

2493 
	`‰ì
(
s
);

2495 
s
 = 
	`°rdup
(
°r
);

2497 
¶
 = 
	`mÆloc
((
ƒ
+1) *  (*));

2498 i‡(
¶
 =
NULL
) {

2499 
	`Ârötf
(
°dîr
, "unableÅoállocate memoryÅo split string\n");

2500 
	`exô
(-1);

2503 
p
 = 
	`°πok_r
(
s
, 
dñim
, &
ßvïå
);

2505 
	`as£π
(
i
 < 
ƒ
);

2506 
¶
[
i
] = 
	`°rdup
(
p
);

2507 
i
++;

2508 } (
p
 = 
	`°πok_r
(
NULL
, 
dñim
, &
ßvïå
)));

2509 
¶
[
i
] = 
NULL
;

2511 *
p¶
 = 
¶
;

2513 
	`‰ì
(
s
);

2514 
	}
}

2516 
	$åim
(
ch¨_¥ediˇã_t
 
¥ediˇã
, c⁄° *
öput
, **
ouçut
)

2518 c⁄° *
fú°
, *
a·î
;

2520 
fú°
 = 
öput
;

2521 *
fú°
 && 
	`¥ediˇã
(()first[0]);

2522 
fú°
++)

2525 
a·î
 = 
fú°
 + 
	`°æí
(first);

2526 
a·î
 > 
fú°
 && 
	`¥ediˇã
(()after[-1]);

2527 
a·î
--)

2530 
size_t
 
Àn_n⁄nuŒ
 = 
a·î
 - 
fú°
;

2531 *
ªsu…
 = 
	`xmÆloc
(
Àn_n⁄nuŒ
 + 1);

2533 
	`mem˝y
(
ªsu…
, 
fú°
, 
Àn_n⁄nuŒ
);

2534 
ªsu…
[
Àn_n⁄nuŒ
] = 0;

2536 *
ouçut
 = 
ªsu…
;

2537 
	}
}

2539 
	$•lô_°rög_öto_∑ú
(c⁄° *
°r
,

2540 c⁄° *
dñim
,

2541 **
a
,

2542 **
b
)

2544 *
s
, *
p
, *
ßvïå
, *
Ø
 = 
NULL
, *
bb
 = NULL;

2545 
rc
 = 0;

2547 
s
 = 
	`x°rdup
(
°r
);

2549 
p
 = 
	`°πok_r
(
s
, 
dñim
, &
ßvïå
);

2550 i‡(
p
 =
NULL
) {

2551 
rc
 = 
ERROR_INVAL
;

2552 
out
;

2554 
Ø
 = 
	`x°rdup
(
p
);

2555 
p
 = 
	`°πok_r
(
NULL
, 
dñim
, &
ßvïå
);

2556 i‡(
p
 =
NULL
) {

2557 
rc
 = 
ERROR_INVAL
;

2558 
out
;

2560 
bb
 = 
	`x°rdup
(
p
);

2562 *
a
 = 
Ø
;

2563 
Ø
 = 
NULL
;

2564 *
b
 = 
bb
;

2565 
bb
 = 
NULL
;

2566 
out
:

2567 
	`‰ì
(
s
);

2568 
	`‰ì
(
Ø
);

2569 
	`‰ì
(
bb
);

2570  
rc
;

2571 
	}
}

	@xl_parse.h

15 #i‚de‡
XL_PARSE_H


16 
	#XL_PARSE_H


	)

18 
	~<libxl.h
>

21 
	gvnode_öfo_∑ømëî
;

23 
∑r£_c⁄fig_d©a
(c⁄° *
c⁄fig_sour˚
,

24 c⁄° *
c⁄fig_d©a
,

25 
c⁄fig_Àn
,

26 
libxl_domaö_c⁄fig
 *
d_c⁄fig
,

27 
vnode_öfo_∑ømëî
* 
vnode_∑ø
);

28 
∑r£_ønge
(c⁄° *
°r
, *
a
, *
b
);

29 
öt64_t
 
∑r£_mem_size_kb
(c⁄° *
mem
);

30 
∑r£_disk_c⁄fig
(
XLU_C⁄fig
 **
c⁄fig
, c⁄° *
•ec
,

31 
libxl_devi˚_disk
 *
disk
);

33 
∑r£_disk_c⁄fig_mu…i°rög
(
XLU_C⁄fig
 **
c⁄fig
,

34 
n•ecs
, c⁄° *c⁄° *
•ecs
,

35 
libxl_devi˚_disk
 *
disk
);

36 
∑r£_usb˘æ_c⁄fig
(
libxl_devi˚_usb˘æ
 *
usb˘æ
, *
tokí
);

37 
∑r£_usbdev_c⁄fig
(
libxl_devi˚_usbdev
 *
usbdev
, *
tokí
);

38 
∑r£_˝uønge
(c⁄° *
˝u
, 
libxl_bôm≠
 *
˝um≠
);

39 
∑r£_nic_c⁄fig
(
libxl_devi˚_nic
 *
nic
, 
XLU_C⁄fig
 **
c⁄fig
, *
tokí
);

40 
∑r£_vdi•l_c⁄fig
(
libxl_devi˚_vdi•l
 *
vdi•l
, *
tokí
);

42 
m©ch_›ti⁄_size
(c⁄° *
¥efix
, 
size_t
 
Àn
,

43 *
¨g
, **
¨g›t
);

44 
	#MATCH_OPTION
(
¥efix
, 
¨g
, 
›¨g
) \

45 
	`m©ch_›ti⁄_size
((
¥efix
 "="), (’ªfix)), (
¨g
), &(
›¨g
))

	)

48 
•lô_°rög_öto_°rög_li°
(c⁄° *
°r
, c⁄° *
dñim
,

49 
libxl_°rög_li°
 *
p¶
);

50 
•lô_°rög_öto_∑ú
(c⁄° *
°r
, c⁄° *
dñim
,

51 **
a
, **
b
);

52 
ª∂a˚_°rög
(**
°r
, c⁄° *
vÆ
);

56 (*
	tch¨_¥ediˇã_t
)(c⁄° 
	tc
);

57 
	`åim
(
ch¨_¥ediˇã_t
 
¥ediˇã
, c⁄° *
öput
, **
ouçut
);

59 c⁄° *
	`gë_a˘i⁄_⁄_shutdown_«me
(
libxl_a˘i⁄_⁄_shutdown
 
a
);

67 
	svnode_öfo
{

68 
≤ode
;

69 
èrgë
;

70 
ˇ∑côy
;

71 * 
v˝u
;

72 
num_v˝us
;

75 
	svnode_öfo_∑ømëî
{

76 
num_nodes
;

77 
vnode_öfo
* 
vnode_öfos
;

	@xl_pci.c

15 
	~<°dlib.h
>

17 
	~<libxl.h
>

18 
	~<libxl_utûs.h
>

19 
	~<libxlutû.h
>

21 
	~"xl.h
"

22 
	~"xl_utûs.h
"

23 
	~"xl_∑r£.h
"

25 
	$pcûi°
(
uöt32_t
 
domid
)

27 
libxl_devi˚_pci
 *
pcidevs
;

28 
num
, 
i
;

30 
pcidevs
 = 
	`libxl_devi˚_pci_li°
(
˘x
, 
domid
, &
num
);

31 i‡(
pcidevs
 =
NULL
)

33 
	`¥ötf
("Vdev Device\n");

34 
i
 = 0; i < 
num
; i++) {

35 
	`¥ötf
("%02x.%01x %04x:%02x:%02x.%01x\n",

36 (
pcidevs
[
i
].
vdev‚
 >> 3) & 0x1f,Öcidevs[i].vdevfn & 0x7,

37 
pcidevs
[
i
].
domaö
,Öcidevs[i].
bus
,Öcidevs[i].
dev
,Öcidevs[i].
func
);

38 
	`libxl_devi˚_pci_di•o£
(&
pcidevs
[
i
]);

40 
	`‰ì
(
pcidevs
);

41 
	}
}

43 
	$maö_pcûi°
(
¨gc
, **
¨gv
)

45 
uöt32_t
 
domid
;

46 
›t
;

48 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "pci-list", 1) {

52 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

54 
	`pcûi°
(
domid
);

56 
	}
}

58 
	$pcidëach
(
uöt32_t
 
domid
, c⁄° *
bdf
, 
f‹˚
)

60 
libxl_devi˚_pci
 
pcidev
;

61 
XLU_C⁄fig
 *
c⁄fig
;

62 
r
 = 0;

64 
	`libxl_devi˚_pci_öô
(&
pcidev
);

66 
c⁄fig
 = 
	`xlu_cfg_öô
(
°dîr
, "commandÜine");

67 i‡(!
c⁄fig
Ë{ 
	`≥º‹
("xlu_cfg_öig"); 
	`exô
(-1); }

69 i‡(
	`xlu_pci_∑r£_bdf
(
c⁄fig
, &
pcidev
, 
bdf
)) {

70 
	`Ârötf
(
°dîr
, "pci-dëach: mÆf‹med BDF s≥cifiˇti⁄ \"%s\"\n", 
bdf
);

71 
	`exô
(2);

73 i‡(
f‹˚
) {

74 i‡(
	`libxl_devi˚_pci_de°roy
(
˘x
, 
domid
, &
pcidev
, 0))

75 
r
 = 1;

77 i‡(
	`libxl_devi˚_pci_ªmove
(
˘x
, 
domid
, &
pcidev
, 0))

78 
r
 = 1;

81 
	`libxl_devi˚_pci_di•o£
(&
pcidev
);

82 
	`xlu_cfg_de°roy
(
c⁄fig
);

84  
r
;

85 
	}
}

87 
	$maö_pcidëach
(
¨gc
, **
¨gv
)

89 
uöt32_t
 
domid
;

90 
›t
;

91 
f‹˚
 = 0;

92 c⁄° *
bdf
 = 
NULL
;

94 
	`SWITCH_FOREACH_OPT
(
›t
, "f", 
NULL
, "pci-detach", 2) {

96 
f‹˚
 = 1;

100 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

101 
bdf
 = 
¨gv
[
›töd
 + 1];

103 i‡(
	`pcidëach
(
domid
, 
bdf
, 
f‹˚
))

104  
EXIT_FAILURE
;

106  
EXIT_SUCCESS
;

107 
	}
}

109 
	$pcüâach
(
uöt32_t
 
domid
, c⁄° *
bdf
, c⁄° *
vs
)

111 
libxl_devi˚_pci
 
pcidev
;

112 
XLU_C⁄fig
 *
c⁄fig
;

113 
r
 = 0;

115 
	`libxl_devi˚_pci_öô
(&
pcidev
);

117 
c⁄fig
 = 
	`xlu_cfg_öô
(
°dîr
, "commandÜine");

118 i‡(!
c⁄fig
Ë{ 
	`≥º‹
("xlu_cfg_öig"); 
	`exô
(-1); }

120 i‡(
	`xlu_pci_∑r£_bdf
(
c⁄fig
, &
pcidev
, 
bdf
)) {

121 
	`Ârötf
(
°dîr
, "pci-©èch: mÆf‹med BDF s≥cifiˇti⁄ \"%s\"\n", 
bdf
);

122 
	`exô
(2);

125 i‡(
	`libxl_devi˚_pci_add
(
˘x
, 
domid
, &
pcidev
, 0))

126 
r
 = 1;

128 
	`libxl_devi˚_pci_di•o£
(&
pcidev
);

129 
	`xlu_cfg_de°roy
(
c⁄fig
);

131  
r
;

132 
	}
}

134 
	$maö_pcüâach
(
¨gc
, **
¨gv
)

136 
uöt32_t
 
domid
;

137 
›t
;

138 c⁄° *
bdf
 = 
NULL
, *
vs
 = NULL;

140 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "pci-attach", 2) {

144 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

145 
bdf
 = 
¨gv
[
›töd
 + 1];

147 i‡(
›töd
 + 1 < 
¨gc
)

148 
vs
 = 
¨gv
[
›töd
 + 2];

150 i‡(
	`pcüâach
(
domid
, 
bdf
, 
vs
))

151  
EXIT_FAILURE
;

153  
EXIT_SUCCESS
;

154 
	}
}

156 
	$pcüssig«bÀ_li°
()

158 
libxl_devi˚_pci
 *
pcidevs
;

159 
num
, 
i
;

161 
pcidevs
 = 
	`libxl_devi˚_pci_assig«bÀ_li°
(
˘x
, &
num
);

163 i‡–
pcidevs
 =
NULL
 )

165 
i
 = 0; i < 
num
; i++) {

166 
	`¥ötf
("%04x:%02x:%02x.%01x\n",

167 
pcidevs
[
i
].
domaö
,Öcidevs[i].
bus
,Öcidevs[i].
dev
,Öcidevs[i].
func
);

168 
	`libxl_devi˚_pci_di•o£
(&
pcidevs
[
i
]);

170 
	`‰ì
(
pcidevs
);

171 
	}
}

173 
	$maö_pcüssig«bÀ_li°
(
¨gc
, **
¨gv
)

175 
›t
;

177 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "pci-assignable-list", 0) {

181 
	`pcüssig«bÀ_li°
();

183 
	}
}

185 
	$pcüssig«bÀ_add
(c⁄° *
bdf
, 
ªböd
)

187 
libxl_devi˚_pci
 
pcidev
;

188 
XLU_C⁄fig
 *
c⁄fig
;

189 
r
 = 0;

191 
	`libxl_devi˚_pci_öô
(&
pcidev
);

193 
c⁄fig
 = 
	`xlu_cfg_öô
(
°dîr
, "commandÜine");

194 i‡(!
c⁄fig
Ë{ 
	`≥º‹
("xlu_cfg_öô"); 
	`exô
(-1); }

196 i‡(
	`xlu_pci_∑r£_bdf
(
c⁄fig
, &
pcidev
, 
bdf
)) {

197 
	`Ârötf
(
°dîr
, "pci-assig«bÀ-add: mÆf‹med BDF s≥cifiˇti⁄ \"%s\"\n", 
bdf
);

198 
	`exô
(2);

201 i‡(
	`libxl_devi˚_pci_assig«bÀ_add
(
˘x
, &
pcidev
, 
ªböd
))

202 
r
 = 1;

204 
	`libxl_devi˚_pci_di•o£
(&
pcidev
);

205 
	`xlu_cfg_de°roy
(
c⁄fig
);

207  
r
;

208 
	}
}

210 
	$maö_pcüssig«bÀ_add
(
¨gc
, **
¨gv
)

212 
›t
;

213 c⁄° *
bdf
 = 
NULL
;

215 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "pci-assignable-add", 1) {

219 
bdf
 = 
¨gv
[
›töd
];

221 i‡(
	`pcüssig«bÀ_add
(
bdf
, 1))

222  
EXIT_FAILURE
;

224  
EXIT_SUCCESS
;

225 
	}
}

227 
	$pcüssig«bÀ_ªmove
(c⁄° *
bdf
, 
ªböd
)

229 
libxl_devi˚_pci
 
pcidev
;

230 
XLU_C⁄fig
 *
c⁄fig
;

231 
r
 = 0;

233 
	`libxl_devi˚_pci_öô
(&
pcidev
);

235 
c⁄fig
 = 
	`xlu_cfg_öô
(
°dîr
, "commandÜine");

236 i‡(!
c⁄fig
Ë{ 
	`≥º‹
("xlu_cfg_öô"); 
	`exô
(-1); }

238 i‡(
	`xlu_pci_∑r£_bdf
(
c⁄fig
, &
pcidev
, 
bdf
)) {

239 
	`Ârötf
(
°dîr
, "pci-assig«bÀ-ªmove: mÆf‹med BDF s≥cifiˇti⁄ \"%s\"\n", 
bdf
);

240 
	`exô
(2);

243 i‡(
	`libxl_devi˚_pci_assig«bÀ_ªmove
(
˘x
, &
pcidev
, 
ªböd
))

244 
r
 = 1;

246 
	`libxl_devi˚_pci_di•o£
(&
pcidev
);

247 
	`xlu_cfg_de°roy
(
c⁄fig
);

249  
r
;

250 
	}
}

252 
	$maö_pcüssig«bÀ_ªmove
(
¨gc
, **
¨gv
)

254 
›t
;

255 c⁄° *
bdf
 = 
NULL
;

256 
ªböd
 = 0;

258 
	`SWITCH_FOREACH_OPT
(
›t
, "r", 
NULL
, "pci-assignable-remove", 1) {

260 
ªböd
=1;

264 
bdf
 = 
¨gv
[
›töd
];

266 i‡(
	`pcüssig«bÀ_ªmove
(
bdf
, 
ªböd
))

267  
EXIT_FAILURE
;

269  
EXIT_SUCCESS
;

270 
	}
}

	@xl_psr.c

15 
	~<˘y≥.h
>

16 
	~<öây≥s.h
>

17 
	~<°dlib.h
>

18 
	~<uni°d.h
>

20 
	~<libxl.h
>

21 
	~<libxl_utûs.h
>

22 
	~<libxlutû.h
>

24 
	~"xl.h
"

25 
	~"xl_utûs.h
"

26 
	~"xl_∑r£.h
"

28 
	$p§_cmt_hwöfo
()

30 
rc
;

31 
íabÀd
;

32 
uöt32_t
 
tŸÆ_rmid
;

34 
	`¥ötf
("Cache Monitoring Technology (CMT):\n");

36 
íabÀd
 = 
	`libxl_p§_cmt_íabÀd
(
˘x
);

37 
	`¥ötf
("%-16s: %s\n", "E«bÀd", 
íabÀd
 ? "1" : "0");

38 i‡(!
íabÀd
)

41 
rc
 = 
	`libxl_p§_cmt_gë_tŸÆ_rmid
(
˘x
, &
tŸÆ_rmid
);

42 i‡(
rc
) {

43 
	`Ârötf
(
°dîr
, "FailedÅo get max RMID value\n");

44  
rc
;

46 
	`¥ötf
("%-16s: %u\n", "TŸÆ RMID", 
tŸÆ_rmid
);

48 
	`¥ötf
("Supported monitorÅypes:\n");

49 i‡(
	`libxl_p§_cmt_ty≥_suµ‹ãd
(
˘x
, 
LIBXL_PSR_CMT_TYPE_CACHE_OCCUPANCY
))

50 
	`¥ötf
("cache-occupancy\n");

51 i‡(
	`libxl_p§_cmt_ty≥_suµ‹ãd
(
˘x
, 
LIBXL_PSR_CMT_TYPE_TOTAL_MEM_COUNT
))

52 
	`¥ötf
("total-mem-bandwidth\n");

53 i‡(
	`libxl_p§_cmt_ty≥_suµ‹ãd
(
˘x
, 
LIBXL_PSR_CMT_TYPE_LOCAL_MEM_COUNT
))

54 
	`¥ötf
("local-mem-bandwidth\n");

56  
rc
;

57 
	}
}

59 
	#MBM_SAMPLE_RETRY_MAX
 4

	)

60 
	$p§_cmt_gë_mem_b™dwidth
(
uöt32_t
 
domid
,

61 
libxl_p§_cmt_ty≥
 
ty≥
,

62 
uöt32_t
 
sockëid
,

63 
uöt64_t
 *
b™dwidth_r
)

65 
uöt64_t
 
ßm∂e1
, 
ßm∂e2
;

66 
uöt64_t
 
tsc1
, 
tsc2
;

67 
ªåy_©ãm±s
 = 0;

68 
rc
;

71 
rc
 = 
	`libxl_p§_cmt_gë_ßm∂e
(
˘x
, 
domid
, 
ty≥
, 
sockëid
,

72 &
ßm∂e1
, &
tsc1
);

73 i‡(
rc
 < 0)

74  
rc
;

76 
	`u¶ìp
(10000);

78 
rc
 = 
	`libxl_p§_cmt_gë_ßm∂e
(
˘x
, 
domid
, 
ty≥
, 
sockëid
,

79 &
ßm∂e2
, &
tsc2
);

80 i‡(
rc
 < 0)

81  
rc
;

83 i‡(
tsc2
 <
tsc1
)

91 i‡(
tsc2
 - 
tsc1
 < 1000000000 && 
ßm∂e2
 >
ßm∂e1
)

94 i‡(
ªåy_©ãm±s
 < 
MBM_SAMPLE_RETRY_MAX
) {

95 
ªåy_©ãm±s
++;

97 
	`Ârötf
(
°dîr
, "event counter overflowed\n");

102 *
b™dwidth_r
 = (
ßm∂e2
 - 
ßm∂e1
Ë* 1000000000 / (
tsc2
 - 
tsc1
) / 1024;

104 
	}
}

106 
	$p§_cmt_¥öt_domaö_öfo
(
libxl_domöfo
 *
domöfo
,

107 
libxl_p§_cmt_ty≥
 
ty≥
,

108 
libxl_bôm≠
 *
sockëm≠
)

110 *
domaö_«me
;

111 
uöt32_t
 
sockëid
;

112 
uöt64_t
 
m⁄ô‹_d©a
;

114 i‡(!
	`libxl_p§_cmt_domaö_©èched
(
˘x
, 
domöfo
->
domid
))

117 
domaö_«me
 = 
	`libxl_domid_to_«me
(
˘x
, 
domöfo
->
domid
);

118 
	`¥ötf
("%-40†%5d", 
domaö_«me
, 
domöfo
->
domid
);

119 
	`‰ì
(
domaö_«me
);

121 
	`libxl_f‹_óch_£t_bô
(
sockëid
, *
sockëm≠
) {

122 
ty≥
) {

123 
LIBXL_PSR_CMT_TYPE_CACHE_OCCUPANCY
:

124 i‡(!
	`libxl_p§_cmt_gë_ßm∂e
(
˘x
, 
domöfo
->
domid
, 
ty≥
, 
sockëid
,

125 &
m⁄ô‹_d©a
, 
NULL
))

126 
	`¥ötf
("%13"
PRIu64
" KB", 
m⁄ô‹_d©a
 / 1024);

128 
LIBXL_PSR_CMT_TYPE_TOTAL_MEM_COUNT
:

129 
LIBXL_PSR_CMT_TYPE_LOCAL_MEM_COUNT
:

130 i‡(!
	`p§_cmt_gë_mem_b™dwidth
(
domöfo
->
domid
, 
ty≥
, 
sockëid
,

131 &
m⁄ô‹_d©a
))

132 
	`¥ötf
("%11"
PRIu64
" KB/s", 
m⁄ô‹_d©a
);

139 
	`¥ötf
("\n");

140 
	}
}

142 
	$p§_cmt_show
(
libxl_p§_cmt_ty≥
 
ty≥
, 
uöt32_t
 
domid
)

144 
uöt32_t
 
i
, 
sockëid
, 
tŸÆ_rmid
;

145 
uöt32_t
 
l3_ˇche_size
;

146 
libxl_bôm≠
 
sockëm≠
;

147 
rc
, 
ƒ_domaös
;

149 i‡(!
	`libxl_p§_cmt_íabÀd
(
˘x
)) {

150 
	`Ârötf
(
°dîr
, "CMT is disabled inÅhe system\n");

154 i‡(!
	`libxl_p§_cmt_ty≥_suµ‹ãd
(
˘x
, 
ty≥
)) {

155 
	`Ârötf
(
°dîr
, "MonitorÅype '%s' isÇot supported inÅhe system\n",

156 
	`libxl_p§_cmt_ty≥_to_°rög
(
ty≥
));

160 
	`libxl_bôm≠_öô
(&
sockëm≠
);

161 
	`libxl_sockë_bôm≠_Æloc
(
˘x
, &
sockëm≠
, 0);

162 
rc
 = 
	`libxl_gë_⁄löe_sockëm≠
(
˘x
, &
sockëm≠
);

163 i‡(
rc
 < 0) {

164 
	`Ârötf
(
°dîr
, "Faûed gëtögávaûabÀ sockës,Ñc: %d\n", 
rc
);

165 
out
;

168 
rc
 = 
	`libxl_p§_cmt_gë_tŸÆ_rmid
(
˘x
, &
tŸÆ_rmid
);

169 i‡(
rc
 < 0) {

170 
	`Ârötf
(
°dîr
, "FailedÅo get max RMID value\n");

171 
out
;

174 
	`¥ötf
("TŸÆ RMID: %d\n", 
tŸÆ_rmid
);

177 
	`¥ötf
("%-40s %5s", "Name", "ID");

178 
	`libxl_f‹_óch_£t_bô
(
sockëid
, 
sockëm≠
)

179 
	`¥ötf
("%14†%d", "Sockë", 
sockëid
);

180 
	`¥ötf
("\n");

182 i‡(
ty≥
 =
LIBXL_PSR_CMT_TYPE_CACHE_OCCUPANCY
) {

184 
	`¥ötf
("%-46s", "Total L3 Cache Size");

185 
	`libxl_f‹_óch_£t_bô
(
sockëid
, 
sockëm≠
) {

186 
rc
 = 
	`libxl_p§_cmt_gë_l3_ˇche_size
(
˘x
, 
sockëid
,

187 &
l3_ˇche_size
);

188 i‡(
rc
 < 0) {

189 
	`Ârötf
(
°dîr
,

191 
sockëid
);

192 
out
;

194 
	`¥ötf
("%13u KB", 
l3_ˇche_size
);

196 
	`¥ötf
("\n");

200 i‡(
domid
 !
INVALID_DOMID
) {

201 
libxl_domöfo
 
domöfo
;

203 
	`libxl_domöfo_öô
(&
domöfo
);

204 i‡(
	`libxl_domaö_öfo
(
˘x
, &
domöfo
, 
domid
)) {

205 
	`Ârötf
(
°dîr
, "FaûedÅÿgë domaö infÿf‹ %d\n", 
domid
);

206 
rc
 = -1;

207 
out
;

209 
	`p§_cmt_¥öt_domaö_öfo
(&
domöfo
, 
ty≥
, &
sockëm≠
);

210 
	`libxl_domöfo_di•o£
(&
domöfo
);

214 
libxl_domöfo
 *
li°
;

215 i‡(!(
li°
 = 
	`libxl_li°_domaö
(
˘x
, &
ƒ_domaös
))) {

216 
	`Ârötf
(
°dîr
, "FailedÅo get domain info for domainÜist.\n");

217 
rc
 = -1;

218 
out
;

220 
i
 = 0; i < 
ƒ_domaös
; i++)

221 
	`p§_cmt_¥öt_domaö_öfo
(
li°
 + 
i
, 
ty≥
, &
sockëm≠
);

222 
	`libxl_domöfo_li°_‰ì
(
li°
, 
ƒ_domaös
);

225 
out
:

226 
	`libxl_bôm≠_di•o£
(&
sockëm≠
);

227  
rc
;

228 
	}
}

230 
	$maö_p§_cmt_©èch
(
¨gc
, **
¨gv
)

232 
uöt32_t
 
domid
;

233 
›t
, 
ªt
 = 0;

235 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "psr-cmt-attach", 1) {

239 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

240 
ªt
 = 
	`libxl_p§_cmt_©èch
(
˘x
, 
domid
);

242  
ªt
;

243 
	}
}

245 
	$maö_p§_cmt_dëach
(
¨gc
, **
¨gv
)

247 
uöt32_t
 
domid
;

248 
›t
, 
ªt
 = 0;

250 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "psr-cmt-detach", 1) {

254 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

255 
ªt
 = 
	`libxl_p§_cmt_dëach
(
˘x
, 
domid
);

257  
ªt
;

258 
	}
}

260 
	$maö_p§_cmt_show
(
¨gc
, **
¨gv
)

262 
›t
, 
ªt
 = 0;

263 
uöt32_t
 
domid
;

264 
libxl_p§_cmt_ty≥
 
ty≥
;

266 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "psr-cmt-show", 1) {

270 i‡(!
	`°rcmp
(
¨gv
[
›töd
], "cache-occupancy"))

271 
ty≥
 = 
LIBXL_PSR_CMT_TYPE_CACHE_OCCUPANCY
;

272 i‡(!
	`°rcmp
(
¨gv
[
›töd
], "total-mem-bandwidth"))

273 
ty≥
 = 
LIBXL_PSR_CMT_TYPE_TOTAL_MEM_COUNT
;

274 i‡(!
	`°rcmp
(
¨gv
[
›töd
], "local-mem-bandwidth"))

275 
ty≥
 = 
LIBXL_PSR_CMT_TYPE_LOCAL_MEM_COUNT
;

277 
	`hñp
("psr-cmt-show");

281 i‡(
›töd
 + 1 >
¨gc
)

282 
domid
 = 
INVALID_DOMID
;

283 i‡(
›töd
 + 1 =
¨gc
 - 1)

284 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
 + 1]);

286 
	`hñp
("psr-cmt-show");

290 
ªt
 = 
	`p§_cmt_show
(
ty≥
, 
domid
);

292  
ªt
;

293 
	}
}

295 
	$p§_l3_ˇt_hwöfo
()

297 
rc
;

298 
i
, 
ƒ
;

299 
uöt32_t
 
l3_ˇche_size
;

300 
libxl_p§_ˇt_öfo
 *
öfo
;

302 
rc
 = 
	`libxl_p§_ˇt_gë_öfo
(
˘x
, &
öfo
, &
ƒ
, 3);

303 i‡(
rc
)

304  
rc
;

306 
	`¥ötf
("Cache Allocation Technology (CAT):\n");

308 
i
 = 0; i < 
ƒ
; i++) {

309 
rc
 = 
	`libxl_p§_cmt_gë_l3_ˇche_size
(
˘x
, 
öfo
[
i
].
id
, &
l3_ˇche_size
);

310 i‡(
rc
) {

311 
	`Ârötf
(
°dîr
, "FailedÅo getÜ3 cache size for socket:%d\n",

312 
öfo
[
i
].
id
);

313 
out
;

315 
	`¥ötf
("%-16s: %u\n", "Sockë ID", 
öfo
[
i
].
id
);

316 
	`¥ötf
("%-16s: %uKB\n", "L3 Cache", 
l3_ˇche_size
);

317 
	`¥ötf
("%-16s: %s\n", "CDP Status",

318 
öfo
[
i
].
cdp_íabÀd
 ? "Enabled" : "Disabled");

319 
	`¥ötf
("%-16s: %u\n", "Maximum COS", 
öfo
[
i
].
cos_max
);

320 
	`¥ötf
("%-16s: %u\n", "CBMÜígth", 
öfo
[
i
].
cbm_Àn
);

321 
	`¥ötf
("%-16s: %#llx\n", "Default CBM",

322 (1uŒ << 
öfo
[
i
].
cbm_Àn
) - 1);

325 
out
:

326 
	`libxl_p§_ˇt_öfo_li°_‰ì
(
öfo
, 
ƒ
);

327  
rc
;

328 
	}
}

330 
	$p§_¥öt_⁄e_domaö_vÆ_ty≥
(
uöt32_t
 
domid
,

331 
libxl_p§_hw_öfo
 *
öfo
,

332 
libxl_p§_ty≥
 
ty≥
)

334 
uöt64_t
 
vÆ
;

336 i‡(!
	`libxl_p§_gë_vÆ
(
˘x
, 
domid
, 
ty≥
, 
öfo
->
id
, &
vÆ
)) {

337 i‡(
ty≥
 =
LIBXL_PSR_CBM_TYPE_MBA_THRTL
 && 
öfo
->
u
.
mba
.
löór
)

338 
	`¥ötf
("%16"
PRIu64
, 
vÆ
);

340 
	`¥ötf
("%#16"
PRIx64
, 
vÆ
);

343 
	`¥ötf
("%16s", "error");

344 
	}
}

346 
	$p§_¥öt_⁄e_domaö_vÆ
(
uöt32_t
 
domid
,

347 
libxl_p§_hw_öfo
 *
öfo
,

348 
libxl_p§_„©_ty≥
 
ty≥
,

349 
lvl
)

351 *
domaö_«me
;

353 
domaö_«me
 = 
	`libxl_domid_to_«me
(
˘x
, 
domid
);

354 
	`¥ötf
("%5d%25s", 
domid
, 
domaö_«me
);

355 
	`‰ì
(
domaö_«me
);

357 
ty≥
) {

358 
LIBXL_PSR_FEAT_TYPE_CAT
:

359 
lvl
) {

361 i‡(!
öfo
->
u
.
ˇt
.
cdp_íabÀd
) {

362 
	`p§_¥öt_⁄e_domaö_vÆ_ty≥
(
domid
, 
öfo
,

363 
LIBXL_PSR_CBM_TYPE_L3_CBM
);

365 
	`p§_¥öt_⁄e_domaö_vÆ_ty≥
(
domid
, 
öfo
,

366 
LIBXL_PSR_CBM_TYPE_L3_CBM_CODE
);

367 
	`p§_¥öt_⁄e_domaö_vÆ_ty≥
(
domid
, 
öfo
,

368 
LIBXL_PSR_CBM_TYPE_L3_CBM_DATA
);

373 
	`p§_¥öt_⁄e_domaö_vÆ_ty≥
(
domid
, 
öfo
,

374 
LIBXL_PSR_CBM_TYPE_L2_CBM
);

378 
	`¥ötf
("I≈uàlv»%d i†wr⁄g!", 
lvl
);

382 
LIBXL_PSR_FEAT_TYPE_MBA
:

383 
	`p§_¥öt_⁄e_domaö_vÆ_ty≥
(
domid
, 
öfo
,

384 
LIBXL_PSR_CBM_TYPE_MBA_THRTL
);

388 
	`¥ötf
("\n");

389 
	}
}

391 
	$p§_¥öt_domaö_vÆ
(
uöt32_t
 
domid
,

392 
libxl_p§_hw_öfo
 *
öfo
,

393 
libxl_p§_„©_ty≥
 
ty≥
,

394 
lvl
)

396 
i
, 
ƒ_domaös
;

397 
libxl_domöfo
 *
li°
;

399 i‡(
domid
 !
INVALID_DOMID
) {

400 
	`p§_¥öt_⁄e_domaö_vÆ
(
domid
, 
öfo
, 
ty≥
, 
lvl
);

404 i‡(!(
li°
 = 
	`libxl_li°_domaö
(
˘x
, &
ƒ_domaös
))) {

405 
	`Ârötf
(
°dîr
, "FailedÅo get domainÜist for value display\n");

406  
EXIT_FAILURE
;

409 
i
 = 0; i < 
ƒ_domaös
; i++)

410 
	`p§_¥öt_⁄e_domaö_vÆ
(
li°
[
i
].
domid
, 
öfo
, 
ty≥
, 
lvl
);

411 
	`libxl_domöfo_li°_‰ì
(
li°
, 
ƒ_domaös
);

414 
	}
}

416 
	$p§_¥öt_sockë
(
uöt32_t
 
domid
,

417 
libxl_p§_hw_öfo
 *
öfo
,

418 
libxl_p§_„©_ty≥
 
ty≥
,

419 
lvl
)

421 
	`¥ötf
("%-16s: %u\n", "Sockë ID", 
öfo
->
id
);

423 
ty≥
) {

424 
LIBXL_PSR_FEAT_TYPE_CAT
:

426 
rc
;

427 
uöt32_t
 
l3_ˇche_size
;

430 i‡(
lvl
 == 3) {

431 
rc
 = 
	`libxl_p§_cmt_gë_l3_ˇche_size
(
˘x
, 
öfo
->
id
, &
l3_ˇche_size
);

432 i‡(
rc
) {

433 
	`Ârötf
(
°dîr
, "FailedÅo getÜ3 cache size for socket:%d\n",

434 
öfo
->
id
);

437 
	`¥ötf
("%-16s: %uKB\n", "L3 Cache", 
l3_ˇche_size
);

440 
	`¥ötf
("%-16s: %#llx\n", "Default CBM",

441 (1uŒ << 
öfo
->
u
.
ˇt
.
cbm_Àn
) - 1);

442 i‡(
öfo
->
u
.
ˇt
.
cdp_íabÀd
)

443 
	`¥ötf
("%5s%25s%16s%16s\n", "ID", "NAME", "CBM (code)", "CBM (data)");

445 
	`¥ötf
("%5s%25s%16s\n", "ID", "NAME", "CBM");

450 
LIBXL_PSR_FEAT_TYPE_MBA
:

451 
	`¥ötf
("%-16s: %u\n", "Default THRTL", 0);

452 
	`¥ötf
("%5s%25s%16s\n", "ID", "NAME", "THRTL");

456 
	`Ârötf
(
°dîr
, "I≈uà„©uªÅy≥ %d i†wr⁄g\n", 
ty≥
);

457  
EXIT_FAILURE
;

460  
	`p§_¥öt_domaö_vÆ
(
domid
, 
öfo
, 
ty≥
, 
lvl
);

461 
	}
}

463 
	$p§_vÆ_show
(
uöt32_t
 
domid
,

464 
libxl_p§_„©_ty≥
 
ty≥
,

465 
lvl
)

467 
i
, 
ƒ
;

468 
rc
;

469 
libxl_p§_hw_öfo
 *
öfo
;

471 
ty≥
) {

472 
LIBXL_PSR_FEAT_TYPE_CAT
:

473 i‡(
lvl
 != 2 &&Üvl != 3) {

474 
	`Ârötf
(
°dîr
, "I≈uàlv»%d i†wr⁄g\n", 
lvl
);

475  
EXIT_FAILURE
;

479 
LIBXL_PSR_FEAT_TYPE_MBA
:

480 i‡(
lvl
) {

481 
	`Ârötf
(
°dîr
,

482 "U√x≥˘edÜv»∑ømëî %d f‹ MBA fótuª\n", 
lvl
);

483  
EXIT_FAILURE
;

488 
	`Ârötf
(
°dîr
, "I≈uà„©uªÅy≥ %d i†wr⁄g\n", 
ty≥
);

489  
EXIT_FAILURE
;

492 
rc
 = 
	`libxl_p§_gë_hw_öfo
(
˘x
, 
ty≥
, 
lvl
, &
ƒ
, &
öfo
);

493 i‡(
rc
) {

494 
	`Ârötf
(
°dîr
, "FailedÅo get info\n");

495  
rc
;

498 
i
 = 0; i < 
ƒ
; i++) {

499 
rc
 = 
	`p§_¥öt_sockë
(
domid
, 
öfo
 + 
i
, 
ty≥
, 
lvl
);

500 i‡(
rc
)

501 
out
;

504 
out
:

505 
	`libxl_p§_hw_öfo_li°_‰ì
(
öfo
, 
ƒ
);

506  
rc
;

507 
	}
}

509 
	$p§_l2_ˇt_hwöfo
()

511 
rc
;

512 
i
, 
ƒ
;

513 
libxl_p§_ˇt_öfo
 *
öfo
;

515 
rc
 = 
	`libxl_p§_ˇt_gë_öfo
(
˘x
, &
öfo
, &
ƒ
, 2);

516 i‡(
rc
)

517  
rc
;

519 
	`¥ötf
("Cache Allocation Technology (CAT): L2\n");

521 
i
 = 0; i < 
ƒ
; i++) {

523 
	`¥ötf
("%-16s: %u\n", "Sockë ID", 
öfo
[
i
].
id
);

524 
	`¥ötf
("%-16s: %u\n", "Maximum COS", 
öfo
[
i
].
cos_max
);

525 
	`¥ötf
("%-16s: %u\n", "CBMÜígth", 
öfo
[
i
].
cbm_Àn
);

526 
	`¥ötf
("%-16s: %#llx\n", "Default CBM",

527 (1uŒ << 
öfo
[
i
].
cbm_Àn
) - 1);

530 
	`libxl_p§_ˇt_öfo_li°_‰ì
(
öfo
, 
ƒ
);

531  
rc
;

532 
	}
}

534 
	$maö_p§_mba_show
(
¨gc
, **
¨gv
)

536 
›t
;

537 
uöt32_t
 
domid
;

539 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "psr-mba-show", 0) {

543 i‡(
›töd
 >
¨gc
)

544 
domid
 = 
INVALID_DOMID
;

545 i‡(
›töd
 =
¨gc
 - 1)

546 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

548 
	`hñp
("psr-mba-show");

552  
	`p§_vÆ_show
(
domid
, 
LIBXL_PSR_FEAT_TYPE_MBA
, 0);

553 
	}
}

555 
	$maö_p§_mba_£t
(
¨gc
, **
¨gv
)

557 
uöt32_t
 
domid
;

558 
libxl_p§_ty≥
 
ty≥
;

559 
uöt64_t
 
thπl
;

560 
ªt
, 
›t
 = 0;

561 
libxl_bôm≠
 
èrgë_m≠
;

562 *
vÆue
;

563 
libxl_°rög_li°
 
sockë_li°
;

564 
°¨t
, 
íd
;

565 
i
, 
j
, 
Àn
;

567 c⁄° 
›ti⁄
 
›ts
[] = {

569 
COMMON_LONG_OPTS


572 
	`libxl_sockë_bôm≠_Æloc
(
˘x
, &
èrgë_m≠
, 0);

573 
	`libxl_bôm≠_£t_n⁄e
(&
èrgë_m≠
);

575 
	`SWITCH_FOREACH_OPT
(
›t
, "s:", 
›ts
, "psr-mba-set", 0) {

577 
	`åim
(
is•a˚
, 
›èrg
, &
vÆue
);

578 
	`•lô_°rög_öto_°rög_li°
(
vÆue
, ",", &
sockë_li°
);

579 
Àn
 = 
	`libxl_°rög_li°_Àngth
(&
sockë_li°
);

580 
i
 = 0; i < 
Àn
; i++) {

581 
	`∑r£_ønge
(
sockë_li°
[
i
], &
°¨t
, &
íd
);

582 
j
 = 
°¨t
; j <
íd
; j++)

583 
	`libxl_bôm≠_£t
(&
èrgë_m≠
, 
j
);

586 
	`libxl_°rög_li°_di•o£
(&
sockë_li°
);

587 
	`‰ì
(
vÆue
);

591 
ty≥
 = 
LIBXL_PSR_CBM_TYPE_MBA_THRTL
;

593 i‡(
	`libxl_bôm≠_is_em±y
(&
èrgë_m≠
))

594 
	`libxl_bôm≠_£t_™y
(&
èrgë_m≠
);

596 i‡(
¨gc
 !
›töd
 + 2) {

597 
	`hñp
("psr-mba-set");

598  
EXIT_FAILURE
;

601 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

602 
thπl
 = 
	`°πﬁl
(
¨gv
[
›töd
 + 1], 
NULL
 , 0);

604 
ªt
 = 
	`libxl_p§_£t_vÆ
(
˘x
, 
domid
, 
ty≥
, &
èrgë_m≠
, 
thπl
);

606 
	`libxl_bôm≠_di•o£
(&
èrgë_m≠
);

607  
ªt
;

608 
	}
}

610 
	$p§_mba_hwöfo
()

612 
rc
;

613 
i
, 
ƒ
;

614 
libxl_p§_hw_öfo
 *
öfo
;

616 
rc
 = 
	`libxl_p§_gë_hw_öfo
(
˘x
, 
LIBXL_PSR_FEAT_TYPE_MBA
, 0, &
ƒ
, &
öfo
);

617 i‡(
rc
)

618  
rc
;

620 
	`¥ötf
("Memory Bandwidth Allocation (MBA):\n");

622 
i
 = 0; i < 
ƒ
; i++) {

623 
	`¥ötf
("Sockë ID : %u\n", 
öfo
[
i
].
id
);

624 
	`¥ötf
("Linear Mode : %s\n",

625 
öfo
[
i
].
u
.
mba
.
löór
 ? "Enabled" : "Disabled");

626 
	`¥ötf
("Maximum COS : %u\n", 
öfo
[
i
].
u
.
mba
.
cos_max
);

627 
	`¥ötf
("Maximum ThrŸéög VÆue: %u\n", 
öfo
[
i
].
u
.
mba
.
thπl_max
);

628 
	`¥ötf
("Default Throttling Value: %u\n", 0);

631 
	`libxl_p§_hw_öfo_li°_‰ì
(
öfo
, 
ƒ
);

632  
rc
;

633 
	}
}

635 
	$maö_p§_ˇt_cbm_£t
(
¨gc
, **
¨gv
)

637 
uöt32_t
 
domid
;

638 
libxl_p§_cbm_ty≥
 
ty≥
;

639 
uöt64_t
 
cbm
;

640 
ªt
, 
›t
 = 0;

641 
›t_d©a
 = 0, 
›t_code
 = 0;

642 
libxl_bôm≠
 
èrgë_m≠
;

643 *
vÆue
;

644 
libxl_°rög_li°
 
sockë_li°
;

645 
°¨t
, 
íd
;

646 
i
, 
j
, 
Àn
;

647 
lvl
 = 3;

649 
›ti⁄
 
›ts
[] = {

654 
COMMON_LONG_OPTS


657 
	`libxl_sockë_bôm≠_Æloc
(
˘x
, &
èrgë_m≠
, 0);

658 
	`libxl_bôm≠_£t_n⁄e
(&
èrgë_m≠
);

660 
	`SWITCH_FOREACH_OPT
(
›t
, "s:l:cd", 
›ts
, "psr-cat-set", 2) {

662 
	`åim
(
is•a˚
, 
›èrg
, &
vÆue
);

663 
	`•lô_°rög_öto_°rög_li°
(
vÆue
, ",", &
sockë_li°
);

664 
Àn
 = 
	`libxl_°rög_li°_Àngth
(&
sockë_li°
);

665 
i
 = 0; i < 
Àn
; i++) {

666 
	`∑r£_ønge
(
sockë_li°
[
i
], &
°¨t
, &
íd
);

667 
j
 = 
°¨t
; j <
íd
; j++)

668 
	`libxl_bôm≠_£t
(&
èrgë_m≠
, 
j
);

671 
	`libxl_°rög_li°_di•o£
(&
sockë_li°
);

672 
	`‰ì
(
vÆue
);

675 
›t_d©a
 = 1;

678 
›t_code
 = 1;

681 
lvl
 = 
	`©oi
(
›èrg
);

685 i‡(
lvl
 == 2)

686 
ty≥
 = 
LIBXL_PSR_CBM_TYPE_L2_CBM
;

687 i‡(
lvl
 == 3) {

688 i‡(
›t_d©a
 && 
›t_code
) {

689 
	`Ârötf
(
°dîr
, "Cannot handle -cánd -dátÅhe sameÅime\n");

690  
EXIT_FAILURE
;

691 } i‡(
›t_d©a
) {

692 
ty≥
 = 
LIBXL_PSR_CBM_TYPE_L3_CBM_DATA
;

693 } i‡(
›t_code
) {

694 
ty≥
 = 
LIBXL_PSR_CBM_TYPE_L3_CBM_CODE
;

696 
ty≥
 = 
LIBXL_PSR_CBM_TYPE_L3_CBM
;

699 
ty≥
 = 
LIBXL_PSR_CBM_TYPE_L3_CBM
;

700 
	`Ârötf
(
°dîr
, "I≈uàlv»%d i†wr⁄g\n", 
lvl
);

701  
EXIT_FAILURE
;

704 i‡(
	`libxl_bôm≠_is_em±y
(&
èrgë_m≠
))

705 
	`libxl_bôm≠_£t_™y
(&
èrgë_m≠
);

707 i‡(
¨gc
 !
›töd
 + 2) {

708 
	`hñp
("psr-cat-set");

712 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

713 
cbm
 = 
	`°πﬁl
(
¨gv
[
›töd
 + 1], 
NULL
 , 0);

715 
ªt
 = 
	`libxl_p§_ˇt_£t_cbm
(
˘x
, 
domid
, 
ty≥
, &
èrgë_m≠
, 
cbm
);

717 
	`libxl_bôm≠_di•o£
(&
èrgë_m≠
);

718  
ªt
;

719 
	}
}

721 
	$maö_p§_ˇt_show
(
¨gc
, **
¨gv
)

723 
›t
 = 0;

724 
uöt32_t
 
domid
;

725 
lvl
 = 3;

727 
›ti⁄
 
›ts
[] = {

729 
COMMON_LONG_OPTS


732 
	`SWITCH_FOREACH_OPT
(
›t
, "l:", 
›ts
, "psr-cat-show", 0) {

734 
lvl
 = 
	`©oi
(
›èrg
);

738 i‡(
›töd
 >
¨gc
)

739 
domid
 = 
INVALID_DOMID
;

740 i‡(
›töd
 =
¨gc
 - 1)

741 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

743 
	`hñp
("psr-cat-show");

747  
	`p§_vÆ_show
(
domid
, 
LIBXL_PSR_FEAT_TYPE_CAT
, 
lvl
);

748 
	}
}

750 
	$maö_p§_hwöfo
(
¨gc
, **
¨gv
)

752 
›t
, 
ªt
 = 0;

753 
boﬁ
 
Æl
 = 
åue
, 
cmt
 = 
Ál£
, 
ˇt
 = fÆ£, 
mba
 = false;

754 c⁄° 
›ti⁄
 
›ts
[] = {

758 
COMMON_LONG_OPTS


761 
	`SWITCH_FOREACH_OPT
(
›t
, "mab", 
›ts
, "psr-hwinfo", 0) {

763 
Æl
 = 
Ál£
; 
cmt
 = 
åue
;

766 
Æl
 = 
Ál£
; 
ˇt
 = 
åue
;

769 
Æl
 = 
Ál£
; 
mba
 = 
åue
;

773 i‡(!
ªt
 && (
Æl
 || 
cmt
))

774 
ªt
 = 
	`p§_cmt_hwöfo
();

776 i‡(!
ªt
 && (
Æl
 || 
ˇt
))

777 
ªt
 = 
	`p§_l3_ˇt_hwöfo
();

780 i‡(
Æl
 || 
ˇt
)

781 
ªt
 = 
	`p§_l2_ˇt_hwöfo
();

784 i‡(
Æl
 || 
mba
)

785 
ªt
 = 
	`p§_mba_hwöfo
();

787  
ªt
;

788 
	}
}

	@xl_saverestore.c

15 
	~<f˙é.h
>

16 
	~<öây≥s.h
>

17 
	~<°dlib.h
>

18 
	~<sys/°©.h
>

19 
	~<sys/ty≥s.h
>

20 
	~<sys/ut¢ame.h
>

21 
	~<time.h
>

22 
	~<uni°d.h
>

24 
	~<libxl.h
>

25 
	~<libxl_utûs.h
>

26 
	~<libxlutû.h
>

28 
	~"xl.h
"

29 
	~"xl_utûs.h
"

30 
	~"xl_∑r£.h
"

32 #i‚de‡
LIBXL_HAVE_NO_SUSPEND_RESUME


34 
	$ßve_domaö_c‹e_begö
(
uöt32_t
 
domid
,

35 c⁄° *
ovîride_c⁄fig_fûe
,

36 
uöt8_t
 **
c⁄fig_d©a_r
,

37 *
c⁄fig_Àn_r
)

39 
rc
;

40 
libxl_domaö_c⁄fig
 
d_c⁄fig
;

41 *
c⁄fig_c
 = 0;

45 
	`libxl_domaö_c⁄fig_öô
(&
d_c⁄fig
);

47 i‡(
ovîride_c⁄fig_fûe
) {

48 *
c⁄fig_v
 = 0;

49 
rc
 = 
	`libxl_ªad_fûe_c⁄ã¡s
(
˘x
, 
ovîride_c⁄fig_fûe
,

50 &
c⁄fig_v
, 
c⁄fig_Àn_r
);

51 i‡(
rc
) {

52 
	`Ârötf
(
°dîr
, "unableÅoÑead overridden config file\n");

53 
	`exô
(
EXIT_FAILURE
);

55 
	`∑r£_c⁄fig_d©a
(
ovîride_c⁄fig_fûe
, 
c⁄fig_v
, *
c⁄fig_Àn_r
,

56 &
d_c⁄fig
, 
NULL
);

57 
	`‰ì
(
c⁄fig_v
);

59 
rc
 = 
	`libxl_ªåõve_domaö_c⁄figuøti⁄
(
˘x
, 
domid
, &
d_c⁄fig
);

60 i‡(
rc
) {

61 
	`Ârötf
(
°dîr
, "unableÅoÑetrieve domain configuration\n");

62 
	`exô
(
EXIT_FAILURE
);

66 
c⁄fig_c
 = 
	`libxl_domaö_c⁄fig_to_js⁄
(
˘x
, &
d_c⁄fig
);

67 i‡(!
c⁄fig_c
) {

68 
	`Ârötf
(
°dîr
, "unableÅo convert config fileÅo JSON\n");

69 
	`exô
(
EXIT_FAILURE
);

71 *
c⁄fig_d©a_r
 = (
uöt8_t
 *)
c⁄fig_c
;

72 *
c⁄fig_Àn_r
 = 
	`°æí
(
c⁄fig_c
) + 1;

74 
	`libxl_domaö_c⁄fig_di•o£
(&
d_c⁄fig
);

75 
	}
}

77 
	$ßve_domaö_c‹e_wrôec⁄fig
(
fd
, c⁄° *
sour˚
,

78 c⁄° 
uöt8_t
 *
c⁄fig_d©a
, 
c⁄fig_Àn
)

80 
ßve_fûe_hódî
 
hdr
;

81 
uöt8_t
 *
›td©a_begö
;

82 uni⁄ { 
uöt32_t
 
u32
; 
b
[4]; } 
u32buf
;

84 
	`mem£t
(&
hdr
, 0, (hdr));

85 
	`mem˝y
(
hdr
.
magic
, 
ßvefûehódî_magic
, (hdr.magic));

86 
hdr
.
byã‹dî
 = 
SAVEFILE_BYTEORDER_VALUE
;

87 
hdr
.
m™d©‹y_Êags
 = 
XL_MANDATORY_FLAG_STREAMv2
;

89 
›td©a_begö
= 0;

91 
	#ADD_OPTDATA
(
±r
, 
Àn
) ({ \

92 i‡((
Àn
)) { \

93 
hdr
.
›ti⁄Æ_d©a_Àn
 +(
Àn
); \

94 
›td©a_begö
 = 
	`xªÆloc
(›td©a_begö, 
hdr
.
›ti⁄Æ_d©a_Àn
); \

95 
	`mem˝y
(
›td©a_begö
 + 
hdr
.
›ti⁄Æ_d©a_Àn
 - (
Àn
), \

96 (
±r
), (
Àn
)); \

98 })

	)

100 
u32buf
.
u32
 = 
c⁄fig_Àn
;

101 
	`ADD_OPTDATA
(
u32buf
.
b
, 4);

102 
	`ADD_OPTDATA
(
c⁄fig_d©a
, 
c⁄fig_Àn
);

103 i‡(
c⁄fig_Àn
)

104 
hdr
.
m™d©‹y_Êags
 |
XL_MANDATORY_FLAG_JSON
;

108 
	`CHK_ERRNOVAL
(
	`libxl_wrôe_exa˘ly
(

109 
˘x
, 
fd
, &
hdr
, (hdr), 
sour˚
, "header"));

110 
	`CHK_ERRNOVAL
(
	`libxl_wrôe_exa˘ly
(

111 
˘x
, 
fd
, 
›td©a_begö
, 
hdr
.
›ti⁄Æ_d©a_Àn
,

112 
sour˚
, "header"));

114 
	`‰ì
(
›td©a_begö
);

116 
	`Ârötf
(
°dîr
, "SavingÅo %sÇew xl format (info"

117 " 0x%"
PRIx32
"/0x%"PRIx32"/%"
PRIu32
")\n",

118 
sour˚
, 
hdr
.
m™d©‹y_Êags
, hdr.
›ti⁄Æ_Êags
,

119 
hdr
.
›ti⁄Æ_d©a_Àn
);

120 
	}
}

122 
	$ßve_domaö
(
uöt32_t
 
domid
, c⁄° *
fûíame
, 
checkpoöt
,

123 
Àavïau£d
, c⁄° *
ovîride_c⁄fig_fûe
)

125 
fd
;

126 
uöt8_t
 *
c⁄fig_d©a
;

127 
c⁄fig_Àn
;

129 
	`ßve_domaö_c‹e_begö
(
domid
, 
ovîride_c⁄fig_fûe
,

130 &
c⁄fig_d©a
, &
c⁄fig_Àn
);

132 i‡(!
c⁄fig_Àn
) {

133 
	`Âuts
(" Savefûêwû»nŸ c⁄èö x»domaö c⁄fig\n", 
°dîr
);

136 
fd
 = 
	`›í
(
fûíame
, 
O_WRONLY
|
O_CREAT
|
O_TRUNC
, 0644);

137 i‡(
fd
 < 0) {

138 
	`Ârötf
(
°dîr
, "FaûedÅÿ›íÅem∞fûê%†f‹ wrôög\n", 
fûíame
);

139 
	`exô
(
EXIT_FAILURE
);

142 
	`ßve_domaö_c‹e_wrôec⁄fig
(
fd
, 
fûíame
, 
c⁄fig_d©a
, 
c⁄fig_Àn
);

144 
rc
 = 
	`libxl_domaö_su•íd
(
˘x
, 
domid
, 
fd
, 0, 
NULL
);

145 
	`˛o£
(
fd
);

147 i‡(
rc
 < 0) {

148 
	`Ârötf
(
°dîr
, "FailedÅo save domain,Ñesuming domain\n");

149 
	`libxl_domaö_ªsume
(
˘x
, 
domid
, 1, 0);

151 i‡(
Àavïau£d
 || 
checkpoöt
) {

152 i‡(
Àavïau£d
)

153 
	`libxl_domaö_∑u£
(
˘x
, 
domid
);

154 
	`libxl_domaö_ªsume
(
˘x
, 
domid
, 1, 0);

157 
	`libxl_domaö_de°roy
(
˘x
, 
domid
, 0);

159 
	`exô
(
rc
 < 0 ? 
EXIT_FAILURE
 : 
EXIT_SUCCESS
);

160 
	}
}

162 
	$maö_ª°‹e
(
¨gc
, **
¨gv
)

164 c⁄° *
checkpoöt_fûe
 = 
NULL
;

165 c⁄° *
c⁄fig_fûe
 = 
NULL
;

166 
domaö_¸óã
 
dom_öfo
;

167 
∑u£d
 = 0, 
debug
 = 0, 
d´m⁄ize
 = 1, 
m⁄ô‹
 = 1,

168 
c⁄sﬁe_autoc⁄√˘
 = 0, 
vnc
 = 0, 
vnˇut›ass
 = 0;

169 
›t
, 
rc
;

170 
›ti⁄
 
›ts
[] = {

173 
COMMON_LONG_OPTS


176 
	`SWITCH_FOREACH_OPT
(
›t
, "F˝deVA", 
›ts
, "restore", 1) {

178 
c⁄sﬁe_autoc⁄√˘
 = 1;

181 
∑u£d
 = 1;

184 
debug
 = 1;

187 
d´m⁄ize
 = 0;

190 
d´m⁄ize
 = 0;

191 
m⁄ô‹
 = 0;

194 
vnc
 = 1;

197 
vnc
 = 
vnˇut›ass
 = 1;

201 i‡(
¨gc
-
›töd
 == 1) {

202 
checkpoöt_fûe
 = 
¨gv
[
›töd
];

203 } i‡(
¨gc
-
›töd
 == 2) {

204 
c⁄fig_fûe
 = 
¨gv
[
›töd
];

205 
checkpoöt_fûe
 = 
¨gv
[
›töd
 + 1];

207 
	`hñp
("restore");

208  
EXIT_FAILURE
;

211 
	`mem£t
(&
dom_öfo
, 0, (dom_info));

212 
dom_öfo
.
debug
 = debug;

213 
dom_öfo
.
d´m⁄ize
 = daemonize;

214 
dom_öfo
.
m⁄ô‹
 = monitor;

215 
dom_öfo
.
∑u£d
 =Öaused;

216 
dom_öfo
.
c⁄fig_fûe
 = config_file;

217 
dom_öfo
.
ª°‹e_fûe
 = 
checkpoöt_fûe
;

218 
dom_öfo
.
migøã_fd
 = -1;

219 
dom_öfo
.
£nd_back_fd
 = -1;

220 
dom_öfo
.
vnc
 = vnc;

221 
dom_öfo
.
vnˇut›ass
 = vncautopass;

222 
dom_öfo
.
c⁄sﬁe_autoc⁄√˘
 = console_autoconnect;

224 
rc
 = 
	`¸óã_domaö
(&
dom_öfo
);

225 i‡(
rc
 < 0)

226  
EXIT_FAILURE
;

228  
EXIT_SUCCESS
;

229 
	}
}

231 
	$maö_ßve
(
¨gc
, **
¨gv
)

233 
uöt32_t
 
domid
;

234 c⁄° *
fûíame
;

235 c⁄° *
c⁄fig_fûíame
 = 
NULL
;

236 
checkpoöt
 = 0;

237 
Àavïau£d
 = 0;

238 
›t
;

240 
	`SWITCH_FOREACH_OPT
(
›t
, "˝", 
NULL
, "save", 2) {

242 
checkpoöt
 = 1;

245 
Àavïau£d
 = 1;

249 i‡(
¨gc
-
›töd
 > 3) {

250 
	`hñp
("save");

251  
EXIT_FAILURE
;

254 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

255 
fûíame
 = 
¨gv
[
›töd
 + 1];

256 i‡–
¨gc
 - 
›töd
 >= 3 )

257 
c⁄fig_fûíame
 = 
¨gv
[
›töd
 + 2];

259 
	`ßve_domaö
(
domid
, 
fûíame
, 
checkpoöt
, 
Àavïau£d
, 
c⁄fig_fûíame
);

260  
EXIT_SUCCESS
;

261 
	}
}

	@xl_sched.c

15 
	~<öây≥s.h
>

16 
	~<°dlib.h
>

18 
	~<libxl.h
>

19 
	~<libxl_utûs.h
>

20 
	~<libxlutû.h
>

22 
	~"xl.h
"

23 
	~"xl_utûs.h
"

24 
	~"xl_∑r£.h
"

26 
	$sched_domaö_gë
(
libxl_scheduÀr
 
sched
, 
domid
,

27 
libxl_domaö_sched_∑øms
 *
scöfo
)

29 i‡(
	`libxl_domaö_sched_∑øms_gë
(
˘x
, 
domid
, 
scöfo
)) {

30 
	`Ârötf
(
°dîr
, "libxl_domain_sched_params_get failed.\n");

33 i‡(
scöfo
->
sched
 != sched) {

34 
	`Ârötf
(
°dîr
, "libxl_domain_sched_params_getÑeturned %sÇot %s.\n",

35 
	`libxl_scheduÀr_to_°rög
(
scöfo
->
sched
),

36 
	`libxl_scheduÀr_to_°rög
(
sched
));

41 
	}
}

43 
	$sched_domaö_£t
(
domid
, c⁄° 
libxl_domaö_sched_∑øms
 *
scöfo
)

45 i‡(
	`libxl_domaö_sched_∑øms_£t
(
˘x
, 
domid
, 
scöfo
)) {

46 
	`Ârötf
(
°dîr
, "libxl_domain_sched_params_set failed.\n");

51 
	}
}

53 
	$sched_v˝u_gë
(
libxl_scheduÀr
 
sched
, 
domid
,

54 
libxl_v˝u_sched_∑øms
 *
scöfo
)

56 
rc
;

58 
rc
 = 
	`libxl_v˝u_sched_∑øms_gë
(
˘x
, 
domid
, 
scöfo
);

59 i‡(
rc
) {

60 
	`Ârötf
(
°dîr
, "libxl_vcpu_sched_params_get failed.\n");

61 
	`exô
(
EXIT_FAILURE
);

63 i‡(
scöfo
->
sched
 != sched) {

64 
	`Ârötf
(
°dîr
, "libxl_vcpu_sched_params_getÑeturned %sÇot %s.\n",

65 
	`libxl_scheduÀr_to_°rög
(
scöfo
->
sched
),

66 
	`libxl_scheduÀr_to_°rög
(
sched
));

71 
	}
}

73 
	$sched_v˝u_gë_Æl
(
libxl_scheduÀr
 
sched
, 
domid
,

74 
libxl_v˝u_sched_∑øms
 *
scöfo
)

76 
rc
;

78 
rc
 = 
	`libxl_v˝u_sched_∑øms_gë_Æl
(
˘x
, 
domid
, 
scöfo
);

79 i‡(
rc
) {

80 
	`Ârötf
(
°dîr
, "libxl_vcpu_sched_params_get_all failed.\n");

81 
	`exô
(
EXIT_FAILURE
);

83 i‡(
scöfo
->
sched
 != sched) {

84 
	`Ârötf
(
°dîr
, "libxl_vcpu_sched_params_get_allÑeturned %sÇot %s.\n",

85 
	`libxl_scheduÀr_to_°rög
(
scöfo
->
sched
),

86 
	`libxl_scheduÀr_to_°rög
(
sched
));

91 
	}
}

93 
	$sched_v˝u_£t
(
domid
, c⁄° 
libxl_v˝u_sched_∑øms
 *
scöfo
)

95 
rc
;

97 
rc
 = 
	`libxl_v˝u_sched_∑øms_£t
(
˘x
, 
domid
, 
scöfo
);

98 i‡(
rc
) {

99 
	`Ârötf
(
°dîr
, "libxl_vcpu_sched_params_set failed.\n");

100 
	`exô
(
EXIT_FAILURE
);

104 
	}
}

106 
	$sched_v˝u_£t_Æl
(
domid
, c⁄° 
libxl_v˝u_sched_∑øms
 *
scöfo
)

108 
rc
;

110 
rc
 = 
	`libxl_v˝u_sched_∑øms_£t_Æl
(
˘x
, 
domid
, 
scöfo
);

111 i‡(
rc
) {

112 
	`Ârötf
(
°dîr
, "libxl_vcpu_sched_params_set_all failed.\n");

113 
	`exô
(
EXIT_FAILURE
);

117 
	}
}

119 
	$sched_¸edô_∑øms_£t
(
poﬁid
, 
libxl_sched_¸edô_∑øms
 *
scöfo
)

121 i‡(
	`libxl_sched_¸edô_∑øms_£t
(
˘x
, 
poﬁid
, 
scöfo
)) {

122 
	`Ârötf
(
°dîr
, "libxl_sched_credit_params_set failed.\n");

127 
	}
}

129 
	$sched_¸edô_∑øms_gë
(
poﬁid
, 
libxl_sched_¸edô_∑øms
 *
scöfo
)

131 i‡(
	`libxl_sched_¸edô_∑øms_gë
(
˘x
, 
poﬁid
, 
scöfo
)) {

132 
	`Ârötf
(
°dîr
, "libxl_sched_credit_params_get failed.\n");

137 
	}
}

139 
	$sched_¸edô_domaö_ouçut
(
domid
)

141 *
dom«me
;

142 
libxl_domaö_sched_∑øms
 
scöfo
;

144 i‡(
domid
 < 0) {

145 
	`¥ötf
("%-33s %4s %6s %4s\n", "Name", "ID", "Weight", "Cap");

149 
	`libxl_domaö_sched_∑øms_öô
(&
scöfo
);

150 i‡(
	`sched_domaö_gë
(
LIBXL_SCHEDULER_CREDIT
, 
domid
, &
scöfo
)) {

151 
	`libxl_domaö_sched_∑øms_di•o£
(&
scöfo
);

154 
dom«me
 = 
	`libxl_domid_to_«me
(
˘x
, 
domid
);

155 
	`¥ötf
("%-33s %4d %6d %4d\n",

156 
dom«me
,

157 
domid
,

158 
scöfo
.
weight
,

159 
scöfo
.
ˇp
);

160 
	`‰ì
(
dom«me
);

161 
	`libxl_domaö_sched_∑øms_di•o£
(&
scöfo
);

163 
	}
}

165 
	$sched_¸edô_poﬁ_ouçut
(
uöt32_t
 
poﬁid
)

167 
libxl_sched_¸edô_∑øms
 
s˝¨am
;

168 *
poﬁ«me
;

170 
poﬁ«me
 = 
	`libxl_˝upoﬁid_to_«me
(
˘x
, 
poﬁid
);

171 i‡(
	`sched_¸edô_∑øms_gë
(
poﬁid
, &
s˝¨am
)) {

172 
	`¥ötf
("Cpupool %s: [schedÖarams unavailable]\n",

173 
poﬁ«me
);

175 
	`¥ötf
("Cpupool %s:Åslice=%dmsÑatelimit=%dus migration-delay=%dus\n",

176 
poﬁ«me
,

177 
s˝¨am
.
t¶i˚_ms
,

178 
s˝¨am
.
øãlimô_us
,

179 
s˝¨am
.
v˝u_migr_dñay_us
);

181 
	`‰ì
(
poﬁ«me
);

183 
	}
}

185 
	$sched_¸edô2_∑øms_£t
(
poﬁid
,

186 
libxl_sched_¸edô2_∑øms
 *
scöfo
)

188 i‡(
	`libxl_sched_¸edô2_∑øms_£t
(
˘x
, 
poﬁid
, 
scöfo
)) {

189 
	`Ârötf
(
°dîr
, "libxl_sched_credit2_params_set failed.\n");

194 
	}
}

196 
	$sched_¸edô2_∑øms_gë
(
poﬁid
,

197 
libxl_sched_¸edô2_∑øms
 *
scöfo
)

199 i‡(
	`libxl_sched_¸edô2_∑øms_gë
(
˘x
, 
poﬁid
, 
scöfo
)) {

200 
	`Ârötf
(
°dîr
, "libxl_sched_credit2_params_get failed.\n");

205 
	}
}

207 
	$sched_¸edô2_domaö_ouçut
(
domid
)

209 *
dom«me
;

210 
libxl_domaö_sched_∑øms
 
scöfo
;

212 i‡(
domid
 < 0) {

213 
	`¥ötf
("%-33s %4s %6s %4s\n", "Name", "ID", "Weight", "Cap");

217 
	`libxl_domaö_sched_∑øms_öô
(&
scöfo
);

218 i‡(
	`sched_domaö_gë
(
LIBXL_SCHEDULER_CREDIT2
, 
domid
, &
scöfo
)) {

219 
	`libxl_domaö_sched_∑øms_di•o£
(&
scöfo
);

222 
dom«me
 = 
	`libxl_domid_to_«me
(
˘x
, 
domid
);

223 
	`¥ötf
("%-33s %4d %6d %4d\n",

224 
dom«me
,

225 
domid
,

226 
scöfo
.
weight
,

227 
scöfo
.
ˇp
);

228 
	`‰ì
(
dom«me
);

229 
	`libxl_domaö_sched_∑øms_di•o£
(&
scöfo
);

231 
	}
}

233 
	$sched_¸edô2_poﬁ_ouçut
(
uöt32_t
 
poﬁid
)

235 
libxl_sched_¸edô2_∑øms
 
s˝¨am
;

236 *
poﬁ«me
 = 
	`libxl_˝upoﬁid_to_«me
(
˘x
, 
poﬁid
);

238 i‡(
	`sched_¸edô2_∑øms_gë
(
poﬁid
, &
s˝¨am
))

239 
	`¥ötf
("Cpupoﬁ %s: [schedÖ¨am†u«vaûabÀ]\n", 
poﬁ«me
);

241 
	`¥ötf
("Cpupool %s:Ñatelimit=%dus\n",

242 
poﬁ«me
, 
s˝¨am
.
øãlimô_us
);

244 
	`‰ì
(
poﬁ«me
);

247 
	}
}

249 
	$sched_πds_domaö_ouçut
(

250 
domid
)

252 *
dom«me
;

253 
libxl_domaö_sched_∑øms
 
scöfo
;

255 i‡(
domid
 < 0) {

256 
	`¥ötf
("%-33s %4s %9s %9s %10s\n", "Name", "ID", "Period", "Budget", "Extratime");

260 
	`libxl_domaö_sched_∑øms_öô
(&
scöfo
);

261 i‡(
	`sched_domaö_gë
(
LIBXL_SCHEDULER_RTDS
, 
domid
, &
scöfo
)) {

262 
	`libxl_domaö_sched_∑øms_di•o£
(&
scöfo
);

266 
dom«me
 = 
	`libxl_domid_to_«me
(
˘x
, 
domid
);

267 
	`¥ötf
("%-33s %4d %9d %9d %10s\n",

268 
dom«me
,

269 
domid
,

270 
scöfo
.
≥riod
,

271 
scöfo
.
budgë
,

272 
scöfo
.
exå©ime
 ? "yes" : "no");

273 
	`‰ì
(
dom«me
);

274 
	`libxl_domaö_sched_∑øms_di•o£
(&
scöfo
);

276 
	}
}

278 
	$sched_πds_v˝u_ouçut
(
domid
, 
libxl_v˝u_sched_∑øms
 *
scöfo
)

280 *
dom«me
;

281 
rc
 = 0;

282 
i
;

284 i‡(
domid
 < 0) {

285 
	`¥ötf
("%-33s %4s %4s %9s %9s %10s\n", "Name", "ID",

290 
rc
 = 
	`sched_v˝u_gë
(
LIBXL_SCHEDULER_RTDS
, 
domid
, 
scöfo
);

291 i‡(
rc
)

294 
dom«me
 = 
	`libxl_domid_to_«me
(
˘x
, 
domid
);

295  
i
 = 0; i < 
scöfo
->
num_v˝us
; i++ ) {

296 
	`¥ötf
("%-33†%4d %4d %9"
PRIu32
" %9"PRIu32" %10s\n",

297 
dom«me
,

298 
domid
,

299 
scöfo
->
v˝us
[
i
].
v˝uid
,

300 
scöfo
->
v˝us
[
i
].
≥riod
,

301 
scöfo
->
v˝us
[
i
].
budgë
,

302 
scöfo
->
v˝us
[
i
].
exå©ime
 ? "yes" : "no");

304 
	`‰ì
(
dom«me
);

306 
	}
}

308 
	$sched_πds_v˝u_ouçut_Æl
(
domid
,

309 
libxl_v˝u_sched_∑øms
 *
scöfo
)

311 *
dom«me
;

312 
rc
 = 0;

313 
i
;

315 i‡(
domid
 < 0) {

316 
	`¥ötf
("%-33s %4s %4s %9s %9s %10s\n", "Name", "ID",

321 
scöfo
->
num_v˝us
 = 0;

322 
rc
 = 
	`sched_v˝u_gë_Æl
(
LIBXL_SCHEDULER_RTDS
, 
domid
, 
scöfo
);

323 i‡(
rc
)

326 
dom«me
 = 
	`libxl_domid_to_«me
(
˘x
, 
domid
);

327  
i
 = 0; i < 
scöfo
->
num_v˝us
; i++ ) {

328 
	`¥ötf
("%-33†%4d %4d %9"
PRIu32
" %9"PRIu32" %10s\n",

329 
dom«me
,

330 
domid
,

331 
scöfo
->
v˝us
[
i
].
v˝uid
,

332 
scöfo
->
v˝us
[
i
].
≥riod
,

333 
scöfo
->
v˝us
[
i
].
budgë
,

334 
scöfo
->
v˝us
[
i
].
exå©ime
 ? "yes" : "no");

336 
	`‰ì
(
dom«me
);

338 
	}
}

340 
	$sched_πds_poﬁ_ouçut
(
uöt32_t
 
poﬁid
)

342 *
poﬁ«me
;

344 
poﬁ«me
 = 
	`libxl_˝upoﬁid_to_«me
(
˘x
, 
poﬁid
);

345 
	`¥ötf
("Cpupoﬁ %s: sched=RTDS\n", 
poﬁ«me
);

347 
	`‰ì
(
poﬁ«me
);

349 
	}
}

351 
	$sched_domaö_ouçut
(
libxl_scheduÀr
 
sched
, (*
ouçut
)(),

352 (*
poﬁouçut
)(
uöt32_t
), c⁄° *
˝upoﬁ
)

354 
libxl_domöfo
 *
öfo
;

355 
libxl_˝upoﬁöfo
 *
poﬁöfo
 = 
NULL
;

356 
uöt32_t
 
poﬁid
;

357 
nb_domaö
, 
n_poﬁs
 = 0, 
i
, 
p
;

358 
rc
 = 0;

360 i‡(
˝upoﬁ
) {

361 i‡(
	`libxl_˝upoﬁ_quÆifõr_to_˝upoﬁid
(
˘x
, 
˝upoﬁ
, &
poﬁid
, 
NULL
) ||

362 !
	`libxl_˝upoﬁid_is_vÆid
(
˘x
, 
poﬁid
)) {

363 
	`Ârötf
(
°dîr
, "unknow¿˝upoﬁ \'%s\'\n", 
˝upoﬁ
);

368 
öfo
 = 
	`libxl_li°_domaö
(
˘x
, &
nb_domaö
);

369 i‡(!
öfo
) {

370 
	`Ârötf
(
°dîr
, "libxl_list_domain failed.\n");

373 
poﬁöfo
 = 
	`libxl_li°_˝upoﬁ
(
˘x
, &
n_poﬁs
);

374 i‡(!
poﬁöfo
) {

375 
	`Ârötf
(
°dîr
, "error getting cpupool info\n");

376 
	`libxl_domöfo_li°_‰ì
(
öfo
, 
nb_domaö
);

380 
p
 = 0; !
rc
 && (∞< 
n_poﬁs
);Ö++) {

381 i‡((
poﬁöfo
[
p
].
sched
 != sched) ||

382 (
˝upoﬁ
 && (
poﬁid
 !
poﬁöfo
[
p
].poolid)))

385 
	`poﬁouçut
(
poﬁöfo
[
p
].
poﬁid
);

387 
	`ouçut
(-1);

388 
i
 = 0; i < 
nb_domaö
; i++) {

389 i‡(
öfo
[
i
].
˝upoﬁ
 !
poﬁöfo
[
p
].
poﬁid
)

391 
rc
 = 
	`ouçut
(
öfo
[
i
].
domid
);

392 i‡(
rc
)

397 
	`libxl_˝upoﬁöfo_li°_‰ì
(
poﬁöfo
, 
n_poﬁs
);

398 
	`libxl_domöfo_li°_‰ì
(
öfo
, 
nb_domaö
);

400 
	}
}

402 
	$sched_v˝u_ouçut
(
libxl_scheduÀr
 
sched
,

403 (*
ouçut
)(, 
libxl_v˝u_sched_∑øms
 *),

404 (*
poﬁouçut
)(
uöt32_t
), c⁄° *
˝upoﬁ
)

406 
libxl_domöfo
 *
öfo
;

407 
libxl_˝upoﬁöfo
 *
poﬁöfo
 = 
NULL
;

408 
uöt32_t
 
poﬁid
;

409 
nb_domaö
, 
n_poﬁs
 = 0, 
i
, 
p
;

410 
rc
 = 0;

412 i‡(
˝upoﬁ
) {

413 i‡(
	`libxl_˝upoﬁ_quÆifõr_to_˝upoﬁid
(
˘x
, 
˝upoﬁ
, &
poﬁid
, 
NULL
)

414 || !
	`libxl_˝upoﬁid_is_vÆid
(
˘x
, 
poﬁid
)) {

415 
	`Ârötf
(
°dîr
, "unknow¿˝upoﬁ \'%s\'\n", 
˝upoﬁ
);

420 
öfo
 = 
	`libxl_li°_domaö
(
˘x
, &
nb_domaö
);

421 i‡(!
öfo
) {

422 
	`Ârötf
(
°dîr
, "libxl_list_domain failed.\n");

425 
poﬁöfo
 = 
	`libxl_li°_˝upoﬁ
(
˘x
, &
n_poﬁs
);

426 i‡(!
poﬁöfo
) {

427 
	`Ârötf
(
°dîr
, "error getting cpupool info\n");

428 
	`libxl_domöfo_li°_‰ì
(
öfo
, 
nb_domaö
);

432 
p
 = 0; !
rc
 && (∞< 
n_poﬁs
);Ö++) {

433 i‡((
poﬁöfo
[
p
].
sched
 != sched) ||

434 (
˝upoﬁ
 && (
poﬁid
 !
poﬁöfo
[
p
].poolid)))

437 
	`poﬁouçut
(
poﬁöfo
[
p
].
poﬁid
);

439 
	`ouçut
(-1, 
NULL
);

440 
i
 = 0; i < 
nb_domaö
; i++) {

441 
libxl_v˝u_sched_∑øms
 
scöfo
;

442 i‡(
öfo
[
i
].
˝upoﬁ
 !
poﬁöfo
[
p
].
poﬁid
)

444 
	`libxl_v˝u_sched_∑øms_öô
(&
scöfo
);

445 
rc
 = 
	`ouçut
(
öfo
[
i
].
domid
, &
scöfo
);

446 
	`libxl_v˝u_sched_∑øms_di•o£
(&
scöfo
);

447 i‡(
rc
)

452 
	`libxl_˝upoﬁöfo_li°_‰ì
(
poﬁöfo
, 
n_poﬁs
);

453 
	`libxl_domöfo_li°_‰ì
(
öfo
, 
nb_domaö
);

455 
	}
}

468 
	$maö_sched_¸edô
(
¨gc
, **
¨gv
)

470 c⁄° *
dom
 = 
NULL
;

471 c⁄° *
˝upoﬁ
 = 
NULL
;

472 
weight
 = 256, 
ˇp
 = 0;

473 
t¶i˚
 = 0, 
øãlimô
 = 0, 
migrdñay
 = 0;

474 
boﬁ
 
›t_w
 = 
Ál£
, 
›t_c
 = false;

475 
boﬁ
 
›t_t
 = 
Ál£
, 
›t_r
 = false;

476 
boﬁ
 
›t_s
 = 
Ál£
, 
›t_m
 = false;

477 
›t
, 
rc
;

478 
›ti⁄
 
›ts
[] = {

487 
COMMON_LONG_OPTS


490 
	`SWITCH_FOREACH_OPT
(
›t
, "d:w:c:p:t:r:m:s", 
›ts
, "sched-credit", 0) {

492 
dom
 = 
›èrg
;

495 
weight
 = 
	`°πﬁ
(
›èrg
, 
NULL
, 10);

496 
›t_w
 = 
åue
;

499 
ˇp
 = 
	`°πﬁ
(
›èrg
, 
NULL
, 10);

500 
›t_c
 = 
åue
;

503 
t¶i˚
 = 
	`°πﬁ
(
›èrg
, 
NULL
, 10);

504 
›t_t
 = 
åue
;

507 
øãlimô
 = 
	`°πﬁ
(
›èrg
, 
NULL
, 10);

508 
›t_r
 = 
åue
;

511 
migrdñay
 = 
	`°πﬁ
(
›èrg
, 
NULL
, 10);

512 
›t_m
 = 
åue
;

515 
›t_s
 = 
åue
;

518 
˝upoﬁ
 = 
›èrg
;

522 i‡((
˝upoﬁ
 || 
›t_s
Ë&& (
dom
 || 
›t_w
 || 
›t_c
)) {

523 
	`Ârötf
(
°dîr
, "Specifyingá cpupool or schedparam isÇot "

525  
EXIT_FAILURE
;

527 i‡(!
dom
 && (
›t_w
 || 
›t_c
)) {

528 
	`Ârötf
(
°dîr
, "Must specifyá domain.\n");

529  
EXIT_FAILURE
;

531 i‡(!
›t_s
 && (
›t_t
 || 
›t_r
 || 
›t_m
)) {

532 
	`Ârötf
(
°dîr
, "Must specify schedparamÅo set schedule "

534  
EXIT_FAILURE
;

537 i‡(
›t_s
) {

538 
libxl_sched_¸edô_∑øms
 
s˝¨am
;

539 
uöt32_t
 
poﬁid
 = 0;

541 i‡(
˝upoﬁ
) {

542 i‡(
	`libxl_˝upoﬁ_quÆifõr_to_˝upoﬁid
(
˘x
, 
˝upoﬁ
,

543 &
poﬁid
, 
NULL
) ||

544 !
	`libxl_˝upoﬁid_is_vÆid
(
˘x
, 
poﬁid
)) {

545 
	`Ârötf
(
°dîr
, "unknow¿˝upoﬁ \'%s\'\n", 
˝upoﬁ
);

546  
EXIT_FAILURE
;

550 i‡(!
›t_t
 && !
›t_r
 && !
›t_m
) {

551 i‡(
	`sched_¸edô_poﬁ_ouçut
(
poﬁid
))

552  
EXIT_FAILURE
;

554 i‡(
	`sched_¸edô_∑øms_gë
(
poﬁid
, &
s˝¨am
))

555  
EXIT_FAILURE
;

557 i‡(
›t_t
)

558 
s˝¨am
.
t¶i˚_ms
 = 
t¶i˚
;

560 i‡(
›t_r
)

561 
s˝¨am
.
øãlimô_us
 = 
øãlimô
;

563 i‡(
›t_m
)

564 
s˝¨am
.
v˝u_migr_dñay_us
 = 
migrdñay
;

566 i‡(
	`sched_¸edô_∑øms_£t
(
poﬁid
, &
s˝¨am
))

567  
EXIT_FAILURE
;

569 } i‡(!
dom
) {

570 i‡(
	`sched_domaö_ouçut
(
LIBXL_SCHEDULER_CREDIT
,

571 
sched_¸edô_domaö_ouçut
,

572 
sched_¸edô_poﬁ_ouçut
,

573 
˝upoﬁ
))

574  
EXIT_FAILURE
;

576 
uöt32_t
 
domid
 = 
	`föd_domaö
(
dom
);

578 i‡(!
›t_w
 && !
›t_c
) {

579 
	`sched_¸edô_domaö_ouçut
(-1);

580 i‡(
	`sched_¸edô_domaö_ouçut
(
domid
))

581  
EXIT_FAILURE
;

583 
libxl_domaö_sched_∑øms
 
scöfo
;

584 
	`libxl_domaö_sched_∑øms_öô
(&
scöfo
);

585 
scöfo
.
sched
 = 
LIBXL_SCHEDULER_CREDIT
;

586 i‡(
›t_w
)

587 
scöfo
.
weight
 = weight;

588 i‡(
›t_c
)

589 
scöfo
.
ˇp
 = cap;

590 
rc
 = 
	`sched_domaö_£t
(
domid
, &
scöfo
);

591 
	`libxl_domaö_sched_∑øms_di•o£
(&
scöfo
);

592 i‡(
rc
)

593  
EXIT_FAILURE
;

597  
EXIT_SUCCESS
;

598 
	}
}

600 
	$maö_sched_¸edô2
(
¨gc
, **
¨gv
)

602 c⁄° *
dom
 = 
NULL
;

603 c⁄° *
˝upoﬁ
 = 
NULL
;

604 
øãlimô
 = 0;

605 
weight
 = 256, 
ˇp
 = 0;

606 
boﬁ
 
›t_s
 = 
Ál£
;

607 
boﬁ
 
›t_r
 = 
Ál£
;

608 
boﬁ
 
›t_w
 = 
Ál£
;

609 
boﬁ
 
›t_c
 = 
Ál£
;

610 
›t
, 
rc
;

611 
›ti⁄
 
›ts
[] = {

618 
COMMON_LONG_OPTS


621 
	`SWITCH_FOREACH_OPT
(
›t
, "d:w:c:p:r:s", 
›ts
, "sched-credit2", 0) {

623 
dom
 = 
›èrg
;

626 
weight
 = 
	`°πﬁ
(
›èrg
, 
NULL
, 10);

627 
›t_w
 = 
åue
;

630 
ˇp
 = 
	`°πﬁ
(
›èrg
, 
NULL
, 10);

631 
›t_c
 = 
åue
;

634 
›t_s
 = 
åue
;

637 
øãlimô
 = 
	`°πﬁ
(
›èrg
, 
NULL
, 10);

638 
›t_r
 = 
åue
;

641 
˝upoﬁ
 = 
›èrg
;

645 i‡(
˝upoﬁ
 && (
dom
 || 
›t_w
 || 
›t_c
)) {

646 
	`Ârötf
(
°dîr
, "Specifyingá cpupool isÇotállowed with other "

648  
EXIT_FAILURE
;

650 i‡(!
dom
 && (
›t_w
 || 
›t_c
)) {

651 
	`Ârötf
(
°dîr
, "Must specifyá domain.\n");

652  
EXIT_FAILURE
;

655 i‡(
›t_s
) {

656 
libxl_sched_¸edô2_∑øms
 
s˝¨am
;

657 
uöt32_t
 
poﬁid
 = 0;

659 i‡(
˝upoﬁ
) {

660 i‡(
	`libxl_˝upoﬁ_quÆifõr_to_˝upoﬁid
(
˘x
, 
˝upoﬁ
,

661 &
poﬁid
, 
NULL
) ||

662 !
	`libxl_˝upoﬁid_is_vÆid
(
˘x
, 
poﬁid
)) {

663 
	`Ârötf
(
°dîr
, "unknow¿˝upoﬁ \'%s\'\n", 
˝upoﬁ
);

664  
EXIT_FAILURE
;

668 i‡(!
›t_r
) {

669 i‡(
	`sched_¸edô2_poﬁ_ouçut
(
poﬁid
))

670  
EXIT_FAILURE
;

672 
s˝¨am
.
øãlimô_us
 = 
øãlimô
;

673 i‡(
	`sched_¸edô2_∑øms_£t
(
poﬁid
, &
s˝¨am
))

674  
EXIT_FAILURE
;

676 } i‡(!
dom
) {

677 i‡(
	`sched_domaö_ouçut
(
LIBXL_SCHEDULER_CREDIT2
,

678 
sched_¸edô2_domaö_ouçut
,

679 
sched_¸edô2_poﬁ_ouçut
,

680 
˝upoﬁ
))

681  
EXIT_FAILURE
;

683 
uöt32_t
 
domid
 = 
	`föd_domaö
(
dom
);

685 i‡(!
›t_w
 && !
›t_c
) {

686 
	`sched_¸edô2_domaö_ouçut
(-1);

687 i‡(
	`sched_¸edô2_domaö_ouçut
(
domid
))

688  
EXIT_FAILURE
;

690 
libxl_domaö_sched_∑øms
 
scöfo
;

691 
	`libxl_domaö_sched_∑øms_öô
(&
scöfo
);

692 
scöfo
.
sched
 = 
LIBXL_SCHEDULER_CREDIT2
;

693 i‡(
›t_w
)

694 
scöfo
.
weight
 = weight;

695 i‡(
›t_c
)

696 
scöfo
.
ˇp
 = cap;

697 
rc
 = 
	`sched_domaö_£t
(
domid
, &
scöfo
);

698 
	`libxl_domaö_sched_∑øms_di•o£
(&
scöfo
);

699 i‡(
rc
)

700  
EXIT_FAILURE
;

704  
EXIT_SUCCESS
;

705 
	}
}

719 
	$maö_sched_πds
(
¨gc
, **
¨gv
)

721 c⁄° *
dom
 = 
NULL
;

722 c⁄° *
˝upoﬁ
 = 
NULL
;

723 *
v˝us
 = (*)
	`xmÆloc
(());

724 *
≥riods
 = (*)
	`xmÆloc
(());

725 *
budgës
 = (*)
	`xmÆloc
(());

726 
boﬁ
 *
exå©imes
 = (boﬁ *)
	`xmÆloc
((bool));

727 
v_size
 = 1;

728 
p_size
 = 1;

729 
b_size
 = 1;

730 
e_size
 = 1;

731 
v_ödex
 = 0;

732 
p_ödex
 =0;

733 
b_ödex
 =0;

734 
e_ödex
 = 0;

735 
boﬁ
 
›t_p
 = 
Ál£
;

736 
boﬁ
 
›t_b
 = 
Ál£
;

737 
boﬁ
 
›t_e
 = 
Ál£
;

738 
boﬁ
 
›t_v
 = 
Ál£
;

739 
boﬁ
 
›t_Æl
 = 
Ál£
;

740 
›t
, 
i
, 
rc
, 
r
;

741 
›ti⁄
 
›ts
[] = {

748 
COMMON_LONG_OPTS


751 
	`SWITCH_FOREACH_OPT
(
›t
, "d:p:b:e:v:c", 
›ts
, "sched-rtds", 0) {

753 
dom
 = 
›èrg
;

756 i‡(
p_ödex
 >
p_size
) {

761 
p_size
 *= 2;

762 
≥riods
 = 
	`xªÆloc
’îiods, 
p_size
);

764 
≥riods
[
p_ödex
++] = 
	`°πﬁ
(
›èrg
, 
NULL
, 10);

765 
›t_p
 = 1;

768 i‡(
b_ödex
 >
b_size
) {

769 
b_size
 *= 2;

770 
budgës
 = 
	`xªÆloc
(budgës, 
b_size
);

772 
budgës
[
b_ödex
++] = 
	`°πﬁ
(
›èrg
, 
NULL
, 10);

773 
›t_b
 = 1;

776 i‡(
e_ödex
 >
e_size
) {

777 
e_size
 *= 2;

778 
exå©imes
 = 
	`xªÆloc
”xå©imes, 
e_size
);

780 i‡(
	`°rcmp
(
›èrg
, "0") && strcmp(optarg, "1"))

782 
	`Ârötf
(
°dîr
, "InvalidÉxtratime.\n");

783 
r
 = 
EXIT_FAILURE
;

784 
out
;

786 
exå©imes
[
e_ödex
++] = 
	`°πﬁ
(
›èrg
, 
NULL
, 10);

787 
›t_e
 = 1;

790 i‡(!
	`°rcmp
(
›èrg
, "all")) {

791 
›t_Æl
 = 1;

794 i‡(
v_ödex
 >
v_size
) {

795 
v_size
 *= 2;

796 
v˝us
 = 
	`xªÆloc
(v˝us, 
v_size
);

798 
v˝us
[
v_ödex
++] = 
	`°πﬁ
(
›èrg
, 
NULL
, 10);

799 
›t_v
 = 1;

802 
˝upoﬁ
 = 
›èrg
;

806 i‡(
˝upoﬁ
 && (
dom
 || 
›t_p
 || 
›t_b
 || 
›t_e
 || 
›t_v
 || 
›t_Æl
)) {

807 
	`Ârötf
(
°dîr
, "Specifyingá cpupool isÇotállowed with "

809 
r
 = 
EXIT_FAILURE
;

810 
out
;

812 i‡(!
dom
 && (
›t_p
 || 
›t_b
 || 
›t_e
 || 
›t_v
)) {

813 
	`Ârötf
(
°dîr
, "MissingÖarameters.\n");

814 
r
 = 
EXIT_FAILURE
;

815 
out
;

817 i‡(
dom
 && !
›t_v
 && !
›t_Æl
 && (
›t_p
 || 
›t_b
 || 
›t_e
)) {

818 
	`Ârötf
(
°dîr
, "Must specify VCPU.\n");

819 
r
 = 
EXIT_FAILURE
;

820 
out
;

822 i‡(
›t_v
 && 
›t_Æl
) {

823 
	`Ârötf
(
°dîr
, "Incorrect VCPU IDs.\n");

824 
r
 = 
EXIT_FAILURE
;

825 
out
;

827 i‡(((
v_ödex
 > 
b_ödex
Ë&& 
›t_b
Ë|| ((v_ödex > 
p_ödex
Ë&& 
›t_p
)

828 || ((
v_ödex
 > 
e_ödex
Ë&& 
›t_e
Ë|| 
p_ödex
 !
b_ödex


829 || 
p_ödex
 !
e_ödex
 ) {

830 
	`Ârötf
(
°dîr
, "IncorrectÇumber ofÖeriod, budgetándÉxtratime\n");

831 
r
 = 
EXIT_FAILURE
;

832 
out
;

835 i‡((!
dom
Ë&& 
›t_Æl
) {

837 
rc
 = -
	`sched_v˝u_ouçut
(
LIBXL_SCHEDULER_RTDS
,

838 
sched_πds_v˝u_ouçut_Æl
,

839 
sched_πds_poﬁ_ouçut
,

840 
˝upoﬁ
);

841 i‡(
rc
) {

842 
r
 = 
EXIT_FAILURE
;

843 
out
;

845 } i‡(!
dom
 && !
›t_Æl
) {

847 
rc
 = -
	`sched_domaö_ouçut
(
LIBXL_SCHEDULER_RTDS
,

848 
sched_πds_domaö_ouçut
,

849 
sched_πds_poﬁ_ouçut
,

850 
˝upoﬁ
);

851 i‡(
rc
) {

852 
r
 = 
EXIT_FAILURE
;

853 
out
;

856 
uöt32_t
 
domid
 = 
	`föd_domaö
(
dom
);

857 i‡(!
›t_v
 && !
›t_Æl
) {

858 
	`sched_πds_domaö_ouçut
(-1);

859 
rc
 = -
	`sched_πds_domaö_ouçut
(
domid
);

860 i‡(
rc
) {

861 
r
 = 
EXIT_FAILURE
;

862 
out
;

864 } i‡(!
›t_p
 && !
›t_b
 && !
›t_e
) {

866 
libxl_v˝u_sched_∑øms
 
scöfo
;

867 
	`libxl_v˝u_sched_∑øms_öô
(&
scöfo
);

868 
	`sched_πds_v˝u_ouçut
(-1, &
scöfo
);

869 
scöfo
.
num_v˝us
 = 
v_ödex
;

870 i‡(
v_ödex
 > 0) {

871 
scöfo
.
v˝us
 = (
libxl_sched_∑øms
 *)

872 
	`xmÆloc
((
libxl_sched_∑øms
Ë* (
v_ödex
));

873 
i
 = 0; i < 
v_ödex
; i++)

874 
scöfo
.
v˝us
[
i
].
v˝uid
 = vcpus[i];

875 
rc
 = -
	`sched_πds_v˝u_ouçut
(
domid
, &
scöfo
);

877 
rc
 = -
	`sched_πds_v˝u_ouçut_Æl
(
domid
, &
scöfo
);

878 
	`libxl_v˝u_sched_∑øms_di•o£
(&
scöfo
);

879 i‡(
rc
) {

880 
r
 = 
EXIT_FAILURE
;

881 
out
;

883 } i‡(
›t_v
 || 
›t_Æl
) {

885 
libxl_v˝u_sched_∑øms
 
scöfo
;

886 
	`libxl_v˝u_sched_∑øms_öô
(&
scöfo
);

887 
scöfo
.
sched
 = 
LIBXL_SCHEDULER_RTDS
;

888 i‡(
v_ödex
 > 0) {

889 
scöfo
.
num_v˝us
 = 
v_ödex
;

890 
scöfo
.
v˝us
 = (
libxl_sched_∑øms
 *)

891 
	`xmÆloc
((
libxl_sched_∑øms
Ë* (
v_ödex
));

892 
i
 = 0; i < 
v_ödex
; i++) {

893 
scöfo
.
v˝us
[
i
].
v˝uid
 = vcpus[i];

894 
scöfo
.
v˝us
[
i
].
≥riod
 = 
≥riods
[i];

895 
scöfo
.
v˝us
[
i
].
budgë
 = 
budgës
[i];

896 
scöfo
.
v˝us
[
i
].
exå©ime
 = 
exå©imes
[i] ? 1 : 0;

898 
rc
 = 
	`sched_v˝u_£t
(
domid
, &
scöfo
);

900 
scöfo
.
num_v˝us
 = 1;

901 
scöfo
.
v˝us
 = (
libxl_sched_∑øms
 *)

902 
	`xmÆloc
((
libxl_sched_∑øms
));

903 
scöfo
.
v˝us
[0].
≥riod
 = 
≥riods
[0];

904 
scöfo
.
v˝us
[0].
budgë
 = 
budgës
[0];

905 
scöfo
.
v˝us
[0].
exå©ime
 = 
exå©imes
[0] ? 1 : 0;

906 
rc
 = 
	`sched_v˝u_£t_Æl
(
domid
, &
scöfo
);

909 
	`libxl_v˝u_sched_∑øms_di•o£
(&
scöfo
);

910 i‡(
rc
) {

911 
r
 = 
EXIT_FAILURE
;

912 
out
;

917 
r
 = 
EXIT_SUCCESS
;

918 
out
:

919 
	`‰ì
(
v˝us
);

920 
	`‰ì
(
≥riods
);

921 
	`‰ì
(
budgës
);

922 
	`‰ì
(
exå©imes
);

923  
r
;

924 
	}
}

	@xl_sxp.c

19 
	~<°dlib.h
>

20 
	~<öây≥s.h
>

22 
	~<libxl.h
>

23 
	~<libxl_utûs.h
>

24 
	~"xl.h
"

29 
	$¥ötf_öfo_£xp
(
domid
, 
libxl_domaö_c⁄fig
 *
d_c⁄fig
, 
FILE
 *
fh
)

31 
i
;

32 
libxl_domöfo
 
öfo
;

34 
libxl_domaö_¸óã_öfo
 *
c_öfo
 = &
d_c⁄fig
->c_info;

35 
libxl_domaö_buûd_öfo
 *
b_öfo
 = &
d_c⁄fig
->b_info;

37 
	`Ârötf
(
fh
, "(domaö\n\t(domid %d)\n", 
domid
);

38 
	`Ârötf
(
fh
, "\t(create_info)\n");

39 
	`Ârötf
(
fh
, "\t(hvm %d)\n", 
c_öfo
->
ty≥
 =
LIBXL_DOMAIN_TYPE_HVM
);

40 
	`Ârötf
(
fh
, "\t(h≠ %s)\n", 
	`libxl_defboﬁ_to_°rög
(
c_öfo
->
h≠
));

41 
	`Ârötf
(
fh
, "\t(oo†%s)\n", 
	`libxl_defboﬁ_to_°rög
(
c_öfo
->
oos
));

42 
	`Ârötf
(
fh
, "\t(ssidª‡%d)\n", 
c_öfo
->
ssidªf
);

43 
	`Ârötf
(
fh
, "\t“amê%s)\n", 
c_öfo
->
«me
);

48 i‡(
	`libxl_domaö_öfo
(
˘x
, &
öfo
, 
domid
) == 0) {

49 
	`Ârötf
(
fh
, "\t(uuid " 
LIBXL_UUID_FMT
 ")\n", 
	`LIBXL_UUID_BYTES
(
öfo
.
uuid
));

51 
	`Ârötf
(
fh
, "\t(uuid <unknown>)\n");

53 i‡(
c_öfo
->
poﬁ_«me
)

54 
	`Ârötf
(
fh
, "\t(˝upoﬁ %s)\n", 
c_öfo
->
poﬁ_«me
);

55 i‡(
c_öfo
->
xsd©a
)

56 
	`Ârötf
(
fh
, "\t(xsdata contains data)\n");

58 
	`Ârötf
(
fh
, "\t(xsdata (null))\n");

59 i‡(
c_öfo
->
∂©f‹md©a
)

60 
	`Ârötf
(
fh
, "\t(platformdata contains data)\n");

62 
	`Ârötf
(
fh
, "\t(platformdata (null))\n");

65 
	`Ârötf
(
fh
, "\t(build_info)\n");

66 
	`Ârötf
(
fh
, "\t(max_v˝u†%d)\n", 
b_öfo
->
max_v˝us
);

67 
	`Ârötf
(
fh
, "\t(max_gø¡_‰ame†%d)\n", 
b_öfo
->
max_gø¡_‰ames
);

68 
	`Ârötf
(
fh
, "\t(max_m≠åack_‰ame†%d)\n", 
b_öfo
->
max_m≠åack_‰ames
);

69 
	`Ârötf
(
fh
, "\t—sc_modê%s)\n", 
	`libxl_tsc_mode_to_°rög
(
b_öfo
->
tsc_mode
));

70 
	`Ârötf
(
fh
, "\t(max_memkb %"
PRId64
")\n", 
b_öfo
->
max_memkb
);

71 
	`Ârötf
(
fh
, "\t—¨gë_memkb %"
PRId64
")\n", 
b_öfo
->
èrgë_memkb
);

72 
	`Ârötf
(
fh
, "\t(nomigrate %s)\n",

73 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
dißbÀ_migøã
));

75 i‡(
c_öfo
->
ty≥
 =
LIBXL_DOMAIN_TYPE_PV
 && 
b_öfo
->
boŸlﬂdî
) {

76 
	`Ârötf
(
fh
, "\t(boŸlﬂdî %s)\n", 
b_öfo
->
boŸlﬂdî
);

77 i‡(
b_öfo
->
boŸlﬂdî_¨gs
) {

78 
	`Ârötf
(
fh
, "\t(bootloader_args");

79 
i
=0; 
b_öfo
->
boŸlﬂdî_¨gs
[i]; i++)

80 
	`Ârötf
(
fh
, " %s", 
b_öfo
->
boŸlﬂdî_¨gs
[
i
]);

81 
	`Ârötf
(
fh
, ")\n");

85 
	`Ârötf
(
fh
, "\t(image\n");

86 
c_öfo
->
ty≥
) {

87 
LIBXL_DOMAIN_TYPE_HVM
:

88 
	`Ârötf
(
fh
, "\t\t(hvm\n");

89 
	`Ârötf
(
fh
, "\t\t\t(fúmw¨ê%s)\n", 
b_öfo
->
u
.
hvm
.
fúmw¨e
);

90 
	`Ârötf
(
fh
, "\t\t\t(video_memkb %"
PRId64
")\n", 
b_öfo
->
video_memkb
);

91 
	`Ârötf
(
fh
, "\t\t\t(shadow_memkb %"
PRId64
")\n", 
b_öfo
->
shadow_memkb
);

92 
	`Ârötf
(
fh
, "\t\t\t’´ %s)\n", 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
u
.
hvm
.
∑e
));

93 
	`Ârötf
(
fh
, "\t\t\t(apic %s)\n",

94 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
≠ic
));

95 
	`Ârötf
(
fh
, "\t\t\t(acpi %s)\n",

96 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
u
.
hvm
.
a˝i
));

97 
	`Ârötf
(
fh
, "\t\t\t“x %s)\n", 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
u
.
hvm
.
nx
));

98 
	`Ârötf
(
fh
, "\t\t\t(viridian %s)\n",

99 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
u
.
hvm
.
vúidün
));

100 
	`Ârötf
(
fh
, "\t\t\t(hpet %s)\n",

101 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
u
.
hvm
.
h≥t
));

102 
	`Ârötf
(
fh
, "\t\t\t(vpt_align %s)\n",

103 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
u
.
hvm
.
v±_Æign
));

104 
	`Ârötf
(
fh
, "\t\t\t(timer_mode %s)\n",

105 
	`libxl_timî_mode_to_°rög
(
b_öfo
->
timî_mode
));

106 
	`Ârötf
(
fh
, "\t\t\t(nestedhvm %s)\n",

107 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
√°ed_hvm
));

108 
	`Ârötf
(
fh
, "\t\t\t(°dvg®%s)\n", 
b_öfo
->
u
.
hvm
.
vga
.
köd
 ==

109 
LIBXL_VGA_INTERFACE_TYPE_STD
 ?

111 
	`Ârötf
(
fh
, "\t\t\t(vnc %s)\n",

112 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
u
.
hvm
.
vnc
.
íabÀ
));

113 
	`Ârötf
(
fh
, "\t\t\t(vn˛i°í %s)\n", 
b_öfo
->
u
.
hvm
.
vnc
.
li°í
);

114 
	`Ârötf
(
fh
, "\t\t\t(vncdi•œy %d)\n", 
b_öfo
->
u
.
hvm
.
vnc
.
di•œy
);

115 
	`Ârötf
(
fh
, "\t\t\t(vncunused %s)\n",

116 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
u
.
hvm
.
vnc
.
födunu£d
));

117 
	`Ârötf
(
fh
, "\t\t\t(keym≠ %s)\n", 
b_öfo
->
u
.
hvm
.
keym≠
);

118 
	`Ârötf
(
fh
, "\t\t\t(sdl %s)\n",

119 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
u
.
hvm
.
sdl
.
íabÀ
));

120 
	`Ârötf
(
fh
, "\t\t\t(opengl %s)\n",

121 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
u
.
hvm
.
sdl
.
›ígl
));

122 
	`Ârötf
(
fh
, "\t\t\t(nographic %s)\n",

123 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
u
.
hvm
.
nogøphic
));

124 
	`Ârötf
(
fh
, "\t\t\t(spice %s)\n",

125 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
u
.
hvm
.
•i˚
.
íabÀ
));

126 
	`Ârötf
(
fh
, "\t\t\t(•i˚p‹à%d)\n", 
b_öfo
->
u
.
hvm
.
•i˚
.
p‹t
);

127 
	`Ârötf
(
fh
, "\t\t\t(•i˚és_p‹à%d)\n", 
b_öfo
->
u
.
hvm
.
•i˚
.
és_p‹t
);

128 
	`Ârötf
(
fh
, "\t\t\t(•i˚ho° %s)\n", 
b_öfo
->
u
.
hvm
.
•i˚
.
ho°
);

129 
	`Ârötf
(
fh
, "\t\t\t(spicedisable_ticketing %s)\n",

130 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
u
.
hvm
.
•i˚
.
dißbÀ_tickëög
));

131 
	`Ârötf
(
fh
, "\t\t\t(spiceagent_mouse %s)\n",

132 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
u
.
hvm
.
•i˚
.
agít_mou£
));

134 
	`Ârötf
(
fh
, "\t\t\t(devi˚_modñ %s)\n", 
b_öfo
->
devi˚_modñ
 ? : "default");

135 
	`Ârötf
(
fh
, "\t\t\t(gfx_passthru %s)\n",

136 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
u
.
hvm
.
gfx_∑s°hru
));

137 
	`Ârötf
(
fh
, "\t\t\t(£rü»%s)\n", 
b_öfo
->
u
.
hvm
.
£rül
);

138 
	`Ârötf
(
fh
, "\t\t\t(boŸ %s)\n", 
b_öfo
->
u
.
hvm
.
boŸ
);

139 
	`Ârötf
(
fh
, "\t\t\t(usb %s)\n", 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
u
.
hvm
.
usb
));

140 
	`Ârötf
(
fh
, "\t\t\t(usbdevi˚ %s)\n", 
b_öfo
->
u
.
hvm
.
usbdevi˚
);

141 
	`Ârötf
(
fh
, "\t\t)\n");

143 
LIBXL_DOMAIN_TYPE_PV
:

144 
	`Ârötf
(
fh
, "\t\t(linux %d)\n", 0);

145 
	`Ârötf
(
fh
, "\t\t\t(kî√»%s)\n", 
b_öfo
->
kî√l
);

146 
	`Ârötf
(
fh
, "\t\t\t(cmdlöê%s)\n", 
b_öfo
->
cmdlöe
);

147 
	`Ârötf
(
fh
, "\t\t\t‘amdisk %s)\n", 
b_öfo
->
ømdisk
);

148 
	`Ârötf
(
fh
, "\t\t\t(e820_host %s)\n",

149 
	`libxl_defboﬁ_to_°rög
(
b_öfo
->
u
.
pv
.
e820_ho°
));

150 
	`Ârötf
(
fh
, "\t\t)\n");

153 
	`Ârötf
(
°dîr
, "Unknow¿domaöÅy≥ %d\n", 
c_öfo
->
ty≥
);

154 
	`exô
(1);

156 
	`Ârötf
(
fh
, "\t)\n");

158 
i
 = 0; i < 
d_c⁄fig
->
num_disks
; i++) {

159 
	`Ârötf
(
fh
, "\t(device\n");

160 
	`Ârötf
(
fh
, "\t\t(tap\n");

161 
	`Ârötf
(
fh
, "\t\t\t(backíd_domid %d)\n", 
d_c⁄fig
->
disks
[
i
].
backíd_domid
);

162 
	`Ârötf
(
fh
, "\t\t\t(‰⁄ãnd_domid %d)\n", 
domid
);

163 
	`Ârötf
(
fh
, "\t\t\t’hy•©h %s)\n", 
d_c⁄fig
->
disks
[
i
].
pdev_∑th
);

164 
	`Ârötf
(
fh
, "\t\t\t’hy°y≥ %d)\n", 
d_c⁄fig
->
disks
[
i
].
backíd
);

165 
	`Ârötf
(
fh
, "\t\t\t(vúç©h %s)\n", 
d_c⁄fig
->
disks
[
i
].
vdev
);

166 
	`Ârötf
(
fh
, "\t\t\t(u≈luggabÀ %d)\n", 
d_c⁄fig
->
disks
[
i
].
ªmovabÀ
);

167 
	`Ârötf
(
fh
, "\t\t\t‘ódwrôê%d)\n", 
d_c⁄fig
->
disks
[
i
].
ªadwrôe
);

168 
	`Ârötf
(
fh
, "\t\t\t(is_cdrom %d)\n", 
d_c⁄fig
->
disks
[
i
].
is_cdrom
);

169 
	`Ârötf
(
fh
, "\t\t)\n");

170 
	`Ârötf
(
fh
, "\t)\n");

173 
i
 = 0; i < 
d_c⁄fig
->
num_nics
; i++) {

174 
	`Ârötf
(
fh
, "\t(device\n");

175 
	`Ârötf
(
fh
, "\t\t(vif\n");

176 i‡(
d_c⁄fig
->
nics
[
i
].
i‚ame
)

177 
	`Ârötf
(
fh
, "\t\t\t(vi‚amê%s)\n", 
d_c⁄fig
->
nics
[
i
].
i‚ame
);

178 
	`Ârötf
(
fh
, "\t\t\t(backíd_domid %d)\n", 
d_c⁄fig
->
nics
[
i
].
backíd_domid
);

179 
	`Ârötf
(
fh
, "\t\t\t(‰⁄ãnd_domid %d)\n", 
domid
);

180 
	`Ârötf
(
fh
, "\t\t\t(devid %d)\n", 
d_c⁄fig
->
nics
[
i
].
devid
);

181 
	`Ârötf
(
fh
, "\t\t\t(mtu %d)\n", 
d_c⁄fig
->
nics
[
i
].
mtu
);

182 
	`Ârötf
(
fh
, "\t\t\t(modñ %s)\n", 
d_c⁄fig
->
nics
[
i
].
modñ
);

183 
	`Ârötf
(
fh
, "\t\t\t(mac %02x%02x%02x%02x%02x%02x)\n",

184 
d_c⁄fig
->
nics
[
i
].
mac
[0], d_config->nics[i].mac[1],

185 
d_c⁄fig
->
nics
[
i
].
mac
[2], d_config->nics[i].mac[3],

186 
d_c⁄fig
->
nics
[
i
].
mac
[4], d_config->nics[i].mac[5]);

187 
	`Ârötf
(
fh
, "\t\t)\n");

188 
	`Ârötf
(
fh
, "\t)\n");

191 
i
 = 0; i < 
d_c⁄fig
->
num_pcidevs
; i++) {

192 
	`Ârötf
(
fh
, "\t(device\n");

193 
	`Ârötf
(
fh
, "\t\t(pci\n");

194 
	`Ârötf
(
fh
, "\t\t\t(pci dev %04x:%02x:%02x.%01x@%02x)\n",

195 
d_c⁄fig
->
pcidevs
[
i
].
domaö
, d_c⁄fig->pcidevs[i].
bus
,

196 
d_c⁄fig
->
pcidevs
[
i
].
dev
, d_c⁄fig->pcidevs[i].
func
,

197 
d_c⁄fig
->
pcidevs
[
i
].
vdev‚
);

198 
	`Ârötf
(
fh
, "\t\t\t(opts msitranslate %dÖower_mgmt %d)\n",

199 
d_c⁄fig
->
pcidevs
[
i
].
msôøn¶©e
,

200 
d_c⁄fig
->
pcidevs
[
i
].
powî_mgmt
);

201 
	`Ârötf
(
fh
, "\t\t)\n");

202 
	`Ârötf
(
fh
, "\t)\n");

205 
i
 = 0; i < 
d_c⁄fig
->
num_vfbs
; i++) {

206 
	`Ârötf
(
fh
, "\t(device\n");

207 
	`Ârötf
(
fh
, "\t\t(vfb\n");

208 
	`Ârötf
(
fh
, "\t\t\t(backíd_domid %d)\n", 
d_c⁄fig
->
vfbs
[
i
].
backíd_domid
);

209 
	`Ârötf
(
fh
, "\t\t\t(‰⁄ãnd_domid %d)\n", 
domid
);

210 
	`Ârötf
(
fh
, "\t\t\t(devid %d)\n", 
d_c⁄fig
->
vfbs
[
i
].
devid
);

211 
	`Ârötf
(
fh
, "\t\t\t(vnc %s)\n",

212 
	`libxl_defboﬁ_to_°rög
(
d_c⁄fig
->
vfbs
[
i
].
vnc
.
íabÀ
));

213 
	`Ârötf
(
fh
, "\t\t\t(vn˛i°í %s)\n", 
d_c⁄fig
->
vfbs
[
i
].
vnc
.
li°í
);

214 
	`Ârötf
(
fh
, "\t\t\t(vncdi•œy %d)\n", 
d_c⁄fig
->
vfbs
[
i
].
vnc
.
di•œy
);

215 
	`Ârötf
(
fh
, "\t\t\t(vncunused %s)\n",

216 
	`libxl_defboﬁ_to_°rög
(
d_c⁄fig
->
vfbs
[
i
].
vnc
.
födunu£d
));

217 
	`Ârötf
(
fh
, "\t\t\t(keym≠ %s)\n", 
d_c⁄fig
->
vfbs
[
i
].
keym≠
);

218 
	`Ârötf
(
fh
, "\t\t\t(sdl %s)\n",

219 
	`libxl_defboﬁ_to_°rög
(
d_c⁄fig
->
vfbs
[
i
].
sdl
.
íabÀ
));

220 
	`Ârötf
(
fh
, "\t\t\t(opengl %s)\n",

221 
	`libxl_defboﬁ_to_°rög
(
d_c⁄fig
->
vfbs
[
i
].
sdl
.
›ígl
));

222 
	`Ârötf
(
fh
, "\t\t\t(di•œy %s)\n", 
d_c⁄fig
->
vfbs
[
i
].
sdl
.
di•œy
);

223 
	`Ârötf
(
fh
, "\t\t\t(xauth‹ôy %s)\n", 
d_c⁄fig
->
vfbs
[
i
].
sdl
.
xauth‹ôy
);

224 
	`Ârötf
(
fh
, "\t\t)\n");

225 
	`Ârötf
(
fh
, "\t)\n");

227 
	`Ârötf
(
fh
, ")\n");

228 
	}
}

	@xl_tmem.c

15 
	~<°dlib.h
>

16 
	~<uni°d.h
>

18 
	~<libxl.h
>

20 
	~"xl.h
"

21 
	~"xl_utûs.h
"

23 
	$maö_tmem_li°
(
¨gc
, **
¨gv
)

25 
uöt32_t
 
domid
;

26 c⁄° *
dom
 = 
NULL
;

27 *
buf
 = 
NULL
;

28 
u£_l⁄g
 = 0;

29 
Æl
 = 0;

30 
›t
;

32 
	`SWITCH_FOREACH_OPT
(
›t
, "Æ", 
NULL
, "tmem-list", 0) {

34 
u£_l⁄g
 = 1;

37 
Æl
 = 1;

41 
dom
 = 
¨gv
[
›töd
];

42 i‡(!
dom
 && 
Æl
 == 0) {

43 
	`Ârötf
(
°dîr
, "You must specify -a orá domain id.\n\n");

44 
	`hñp
("tmem-list");

48 i‡(
Æl
)

49 
domid
 = 
INVALID_DOMID
;

51 
domid
 = 
	`föd_domaö
(
dom
);

53 
buf
 = 
	`libxl_tmem_li°
(
˘x
, 
domid
, 
u£_l⁄g
);

54 i‡(
buf
 =
NULL
)

55  
EXIT_FAILURE
;

57 
	`¥ötf
("%s\n", 
buf
);

58 
	`‰ì
(
buf
);

59  
EXIT_SUCCESS
;

60 
	}
}

62 
	$maö_tmem_‰ìze
(
¨gc
, **
¨gv
)

64 
uöt32_t
 
domid
;

65 c⁄° *
dom
 = 
NULL
;

66 
Æl
 = 0;

67 
›t
;

69 
	`SWITCH_FOREACH_OPT
(
›t
, "a", 
NULL
, "tmem-freeze", 0) {

71 
Æl
 = 1;

75 
dom
 = 
¨gv
[
›töd
];

76 i‡(!
dom
 && 
Æl
 == 0) {

77 
	`Ârötf
(
°dîr
, "You must specify -a orá domain id.\n\n");

78 
	`hñp
("tmem-freeze");

79  
EXIT_FAILURE
;

82 i‡(
Æl
)

83 
domid
 = 
INVALID_DOMID
;

85 
domid
 = 
	`föd_domaö
(
dom
);

87 i‡(
	`libxl_tmem_‰ìze
(
˘x
, 
domid
) < 0)

88  
EXIT_FAILURE
;

90  
EXIT_SUCCESS
;

91 
	}
}

93 
	$maö_tmem_thaw
(
¨gc
, **
¨gv
)

95 
uöt32_t
 
domid
;

96 c⁄° *
dom
 = 
NULL
;

97 
Æl
 = 0;

98 
›t
;

100 
	`SWITCH_FOREACH_OPT
(
›t
, "a", 
NULL
, "tmem-thaw", 0) {

102 
Æl
 = 1;

106 
dom
 = 
¨gv
[
›töd
];

107 i‡(!
dom
 && 
Æl
 == 0) {

108 
	`Ârötf
(
°dîr
, "You must specify -a orá domain id.\n\n");

109 
	`hñp
("tmem-thaw");

110  
EXIT_FAILURE
;

113 i‡(
Æl
)

114 
domid
 = 
INVALID_DOMID
;

116 
domid
 = 
	`föd_domaö
(
dom
);

118 i‡(
	`libxl_tmem_thaw
(
˘x
, 
domid
) < 0)

119  
EXIT_FAILURE
;

121  
EXIT_SUCCESS
;

122 
	}
}

124 
	$maö_tmem_£t
(
¨gc
, **
¨gv
)

126 
uöt32_t
 
domid
;

127 c⁄° *
dom
 = 
NULL
;

128 
uöt32_t
 
weight
 = 0, 
ˇp
 = 0, 
com¥ess
 = 0;

129 
›t_w
 = 0, 
›t_c
 = 0, 
›t_p
 = 0;

130 
Æl
 = 0;

131 
›t
;

132 
rc
 = 0;

134 
	`SWITCH_FOREACH_OPT
(
›t
, "aw:c:p:", 
NULL
, "tmem-set", 0) {

136 
Æl
 = 1;

139 
weight
 = 
	`°πﬁ
(
›èrg
, 
NULL
, 10);

140 
›t_w
 = 1;

143 
ˇp
 = 
	`°πﬁ
(
›èrg
, 
NULL
, 10);

144 
›t_c
 = 1;

147 
com¥ess
 = 
	`°πﬁ
(
›èrg
, 
NULL
, 10);

148 
›t_p
 = 1;

152 
dom
 = 
¨gv
[
›töd
];

153 i‡(!
dom
 && 
Æl
 == 0) {

154 
	`Ârötf
(
°dîr
, "You must specify -a orá domain id.\n\n");

155 
	`hñp
("tmem-set");

156  
EXIT_FAILURE
;

159 i‡(
Æl
)

160 
domid
 = 
INVALID_DOMID
;

162 
domid
 = 
	`föd_domaö
(
dom
);

164 i‡(!
›t_w
 && !
›t_c
 && !
›t_p
) {

165 
	`Ârötf
(
°dîr
, "No set value specified.\n\n");

166 
	`hñp
("tmem-set");

167  
EXIT_FAILURE
;

170 i‡(
›t_w
)

171 
rc
 = 
	`libxl_tmem_£t
(
˘x
, 
domid
, "weight", 
weight
);

172 i‡(
›t_c
)

173 
rc
 = 
	`libxl_tmem_£t
(
˘x
, 
domid
, "ˇp", 
ˇp
);

174 i‡(
›t_p
)

175 
rc
 = 
	`libxl_tmem_£t
(
˘x
, 
domid
, "com¥ess", 
com¥ess
);

177 i‡(
rc
 < 0)

178  
EXIT_FAILURE
;

180  
EXIT_SUCCESS
;

181 
	}
}

183 
	$maö_tmem_sh¨ed_auth
(
¨gc
, **
¨gv
)

185 
uöt32_t
 
domid
;

186 c⁄° *
auth¨g
 = 
NULL
;

187 *
íd±r
 = 
NULL
;

188 c⁄° *
dom
 = 
NULL
;

189 *
uuid
 = 
NULL
;

190 
auth
 = -1;

191 
Æl
 = 0;

192 
›t
;

194 
	`SWITCH_FOREACH_OPT
(
›t
, "au:A:", 
NULL
, "tmem-shared-auth", 0) {

196 
Æl
 = 1;

199 
uuid
 = 
›èrg
;

202 
auth¨g
 = 
›èrg
;

206 
dom
 = 
¨gv
[
›töd
];

207 i‡(!
dom
 && 
Æl
 == 0) {

208 
	`Ârötf
(
°dîr
, "You must specify -a orá domain id.\n\n");

209 
	`hñp
("tmem-shared-auth");

210  
EXIT_FAILURE
;

213 i‡(
Æl
)

214 
domid
 = 
INVALID_DOMID
;

216 
domid
 = 
	`föd_domaö
(
dom
);

218 i‡(
uuid
 =
NULL
 || 
auth¨g
 == NULL) {

219 
	`Ârötf
(
°dîr
, "No uuid oráuth specified.\n\n");

220 
	`hñp
("tmem-shared-auth");

221  
EXIT_FAILURE
;

224 
auth
 = 
	`°πﬁ
(
auth¨g
, &
íd±r
, 10);

225 i‡(*
íd±r
 != '\0') {

226 
	`Ârötf
(
°dîr
, "Invalidáuth, validáutháre <0|1>.\n\n");

227  
EXIT_FAILURE
;

230 i‡(
	`libxl_tmem_sh¨ed_auth
(
˘x
, 
domid
, 
uuid
, 
auth
) < 0)

231  
EXIT_FAILURE
;

233  
EXIT_SUCCESS
;

234 
	}
}

236 
	$maö_tmem_‰ìabÀ
(
¨gc
, **
¨gv
)

238 
›t
;

239 
mb
;

241 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "tmem-freeable", 0) {

245 
mb
 = 
	`libxl_tmem_‰ìabÀ
(
˘x
);

246 i‡(
mb
 == -1)

247  
EXIT_FAILURE
;

249 
	`¥ötf
("%d\n", 
mb
);

250  
EXIT_SUCCESS
;

251 
	}
}

	@xl_usb.c

15 
	~<°dlib.h
>

17 
	~<libxl.h
>

18 
	~<libxl_utûs.h
>

19 
	~<libxlutû.h
>

21 
	~"xl.h
"

22 
	~"xl_utûs.h
"

23 
	~"xl_∑r£.h
"

25 
	$maö_usb˘æ_©èch
(
¨gc
, **
¨gv
)

27 
uöt32_t
 
domid
;

28 
›t
, 
rc
 = 0;

29 
libxl_devi˚_usb˘æ
 
usb˘æ
;

31 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "usbctrl-attach", 1) {

35 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
++]);

37 
	`libxl_devi˚_usb˘æ_öô
(&
usb˘æ
);

39 
¨gv
 +
›töd
, 
¨gc
 -= optind;árgc > 0; ++argv, --argc) {

40 i‡(
	`∑r£_usb˘æ_c⁄fig
(&
usb˘æ
, *
¨gv
))

44 
rc
 = 
	`libxl_devi˚_usb˘æ_add
(
˘x
, 
domid
, &
usb˘æ
, 0);

45 i‡(
rc
) {

46 
	`Ârötf
(
°dîr
, "libxl_device_usbctrl_add failed.\n");

47 
rc
 = 1;

50 
	`libxl_devi˚_usb˘æ_di•o£
(&
usb˘æ
);

51  
rc
;

52 
	}
}

54 
	$maö_usb˘æ_dëach
(
¨gc
, **
¨gv
)

56 
uöt32_t
 
domid
;

57 
›t
, 
devid
, 
rc
;

58 
libxl_devi˚_usb˘æ
 
usb˘æ
;

60 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "usbctrl-detach", 2) {

64 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

65 
devid
 = 
	`©oi
(
¨gv
[
›töd
+1]);

67 
	`libxl_devi˚_usb˘æ_öô
(&
usb˘æ
);

68 i‡(
	`libxl_devid_to_devi˚_usb˘æ
(
˘x
, 
domid
, 
devid
, &
usb˘æ
)) {

69 
	`Ârötf
(
°dîr
, "Unknow¿devi˚ %s.\n", 
¨gv
[
›töd
+1]);

73 
rc
 = 
	`libxl_devi˚_usb˘æ_ªmove
(
˘x
, 
domid
, &
usb˘æ
, 0);

74 i‡(
rc
) {

75 
	`Ârötf
(
°dîr
, "libxl_device_usbctrl_remove failed.\n");

76 
rc
 = 1;

79 
	`libxl_devi˚_usb˘æ_di•o£
(&
usb˘æ
);

80  
rc
;

82 
	}
}

84 
	$maö_usbdev_©èch
(
¨gc
, **
¨gv
)

86 
uöt32_t
 
domid
;

87 
›t
, 
rc
;

88 
libxl_devi˚_usbdev
 
usbdev
;

90 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "usbdev-attach", 2) {

94 
	`libxl_devi˚_usbdev_öô
(&
usbdev
);

96 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
++]);

98 
¨gv
 +
›töd
, 
¨gc
 -= optind;árgc > 0; ++argv, --argc) {

99 i‡(
	`∑r£_usbdev_c⁄fig
(&
usbdev
, *
¨gv
))

103 
rc
 = 
	`libxl_devi˚_usbdev_add
(
˘x
, 
domid
, &
usbdev
, 0);

104 i‡(
rc
) {

105 
	`Ârötf
(
°dîr
, "libxl_device_usbdev_add failed.\n");

106 
rc
 = 1;

109 
	`libxl_devi˚_usbdev_di•o£
(&
usbdev
);

110  
rc
;

111 
	}
}

113 
	$maö_usbdev_dëach
(
¨gc
, **
¨gv
)

115 
uöt32_t
 
domid
;

116 
˘æ
, 
p‹t
;

117 
›t
, 
rc
 = 1;

118 
libxl_devi˚_usbdev
 
usbdev
;

120 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "usbdev-detach", 3) {

124 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

125 
˘æ
 = 
	`©oi
(
¨gv
[
›töd
+1]);

126 
p‹t
 = 
	`©oi
(
¨gv
[
›töd
+2]);

128 i‡(
¨gc
 - 
›töd
 > 3) {

129 
	`Ârötf
(
°dîr
, "Invalidárguments.\n");

133 
	`libxl_devi˚_usbdev_öô
(&
usbdev
);

134 i‡(
	`libxl_˘æp‹t_to_devi˚_usbdev
(
˘x
, 
domid
, 
˘æ
, 
p‹t
, &
usbdev
)) {

135 
	`Ârötf
(
°dîr
, "Unknown deviceát controller %dÖort %d.\n",

136 
˘æ
, 
p‹t
);

140 
rc
 = 
	`libxl_devi˚_usbdev_ªmove
(
˘x
, 
domid
, &
usbdev
, 0);

141 i‡(
rc
) {

142 
	`Ârötf
(
°dîr
, "libxl_device_usbdev_remove failed.\n");

143 
rc
 = 1;

146 
	`libxl_devi˚_usbdev_di•o£
(&
usbdev
);

147  
rc
;

148 
	}
}

150 
	$maö_usbli°
(
¨gc
, **
¨gv
)

152 
uöt32_t
 
domid
;

153 
libxl_devi˚_usb˘æ
 *
usb˘æs
;

154 
libxl_usb˘æöfo
 
usb˘æöfo
;

155 
num˘æ
, 
i
, 
j
, 
›t
;

157 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "usb-list", 1) {

161 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
++]);

163 i‡(
¨gc
 > 
›töd
) {

164 
	`Ârötf
(
°dîr
, "Invalidárguments.\n");

165 
	`exô
(-1);

168 
usb˘æs
 = 
	`libxl_devi˚_usb˘æ_li°
(
˘x
, 
domid
, &
num˘æ
);

169 i‡(!
usb˘æs
) {

173 
i
 = 0; i < 
num˘æ
; ++i) {

174 
	`¥ötf
("%-6s %-12s %-3s %-5s %-7s %-5s\n",

177 
	`libxl_usb˘æöfo_öô
(&
usb˘æöfo
);

179 i‡(!
	`libxl_devi˚_usb˘æ_gëöfo
(
˘x
, 
domid
,

180 &
usb˘æs
[
i
], &
usb˘æöfo
)) {

181 
	`¥ötf
("%-6d %-12s %-3d %-5d %-7d %-5d\n",

182 
usb˘æöfo
.
devid
,

183 
	`libxl_usb˘æ_ty≥_to_°rög
(
usb˘æöfo
.
ty≥
),

184 
usb˘æöfo
.
backíd_id
, usb˘æöfo.
°©e
,

185 
usb˘æöfo
.
vîsi⁄
, usb˘æöfo.
p‹ts
);

187 
j
 = 1; j <
usb˘æöfo
.
p‹ts
; j++) {

188 
libxl_devi˚_usbdev
 
usbdev
;

190 
	`libxl_devi˚_usbdev_öô
(&
usbdev
);

192 
	`¥ötf
(" P‹à%d:", 
j
);

194 i‡(!
	`libxl_˘æp‹t_to_devi˚_usbdev
(
˘x
, 
domid
,

195 
usb˘æöfo
.
devid
,

196 
j
, &
usbdev
)) {

197 
	`¥ötf
(" Bus %03x Device %03x\n",

198 
usbdev
.
u
.
ho°dev
.
ho°bus
,

199 
usbdev
.
u
.
ho°dev
.
ho°addr
);

201 
	`¥ötf
("\n");

204 
	`libxl_devi˚_usbdev_di•o£
(&
usbdev
);

208 
	`libxl_usb˘æöfo_di•o£
(&
usb˘æöfo
);

211 
	`libxl_devi˚_usb˘æ_li°_‰ì
(
usb˘æs
, 
num˘æ
);

213 
	}
}

	@xl_utils.c

15 
	#_GNU_SOURCE


	)

17 
	~<f˙é.h
>

18 
	~<limôs.h
>

19 
	~<°dlib.h
>

20 
	~<sys/°©.h
>

21 
	~<sys/ty≥s.h
>

22 
	~<uni°d.h
>

24 
	~<libxl.h
>

25 
	~<libxl_utûs.h
>

27 
	~"xl.h
"

28 
	~"xl_utûs.h
"

30 
	$dﬁog
(c⁄° *
fûe
, 
löe
, c⁄° *
func
, *
fmt
, ...)

32 
va_li°
 
≠
;

33 *
s
 = 
NULL
;

34 
rc
;

36 
	`va_°¨t
(
≠
, 
fmt
);

37 
rc
 = 
	`va•rötf
(&
s
, 
fmt
, 
≠
);

38 
	`va_íd
(
≠
);

39 i‡(
rc
 >= 0)

42 
	`libxl_wrôe_exa˘ly
(
NULL
, 
logfûe
, 
s
, 
rc
, NULL, NULL);

43 
	`‰ì
(
s
);

44 
	}
}

46 
	$xva•rötf
(**
°Ω
, c⁄° *
fmt
, 
va_li°
 
≠
)

48 
r
 = 
	`va•rötf
(
°Ω
, 
fmt
, 
≠
);

49 i‡(
r
 == -1) {

50 
	`≥º‹
("asprintf failed");

51 
	`exô
(
EXIT_FAILURE
);

53 
	}
}

55 
	$xa•rötf
(**
°Ω
, c⁄° *
fmt
, ...)

57 
va_li°
 
≠
;

58 
	`va_°¨t
(
≠
, 
fmt
);

59 
	`xva•rötf
(
°Ω
, 
fmt
, 
≠
);

60 
	`va_íd
(
≠
);

61 
	}
}

63 *
	$xmÆloc
(
size_t
 
sz
)

65 *
r
;

66 
r
 = 
	`mÆloc
(
sz
);

67 i‡(!
r
) {

68 
	`Ârötf
(
°dîr
,"xl: UnableÅo malloc %lu bytes.\n",

69 ()
sz
);

70 
	`exô
(-
ERROR_FAIL
);

72  
r
;

73 
	}
}

75 *
	$xˇŒoc
(
size_t
 
n
, size_à
sz
)

77 *
r
 = 
	`ˇŒoc
(
n
, 
sz
);

78 i‡(!
r
) {

79 
	`Ârötf
(
°dîr
,"xl: U«bÀÅÿˇŒo¯%zu byãs.\n", 
sz
*
n
);

80 
	`exô
(-
ERROR_FAIL
);

82  
r
;

83 
	}
}

85 *
	$xªÆloc
(*
±r
, 
size_t
 
sz
)

87 *
r
;

88 i‡(!
sz
) {

89 
	`‰ì
(
±r
);

95 
r
 = 
	`ªÆloc
(
±r
, 
sz
);

96 i‡(!
r
) {

97 
	`Ârötf
(
°dîr
,"xl: UnableÅoÑeallocÅo %lu bytes.\n",

98 ()
sz
);

99 
	`exô
(-
ERROR_FAIL
);

101  
r
;

102 
	}
}

104 *
	$x°rdup
(c⁄° *
x
)

106 *
r
;

107 
r
 = 
	`°rdup
(
x
);

108 i‡(!
r
) {

109 
	`Ârötf
(
°dîr
, "xl: UnableÅo strdupá string ofÜength %zu.\n",

110 
	`°æí
(
x
));

111 
	`exô
(-
ERROR_FAIL
);

113  
r
;

114 
	}
}

116 
	$Êush_°ªam
(
FILE
 *
fh
)

118 c⁄° *
fh_«me
 =

119 
fh
 =
°dout
 ? "stdout" :

120 
fh
 =
°dîr
 ? "stderr" :

121 (
	`ab‹t
(), (const *)0);

123 i‡(
	`„º‹
(
fh
Ë|| 
	`fÊush
(fh)) {

124 
	`≥º‹
(
fh_«me
);

125 
	`exô
(
EXIT_FAILURE
);

127 
	}
}

129 
uöt32_t
 
	$föd_domaö
(c⁄° *
p
)

131 
uöt32_t
 
domid
;

132 
rc
;

134 
rc
 = 
	`libxl_domaö_quÆifõr_to_domid
(
˘x
, 
p
, &
domid
);

135 i‡(
rc
) {

136 
	`Ârötf
(
°dîr
, "%†i†™ invÆid domaö idítifõ∏‘c=%d)\n", 
p
, 
rc
);

137 
	`exô
(
EXIT_FAILURE
);

139 
comm⁄_dom«me
 = 
	`libxl_domid_to_«me
(
˘x
, 
domid
);

140  
domid
;

141 
	}
}

147 
	$def_gë›t
(
¨gc
, * c⁄° 
¨gv
[],

148 c⁄° *
›t°rög
,

149 c⁄° 
›ti⁄
 *
l⁄g›ts
,

150 c⁄° * 
hñp°r
, 
ªq¨gs
)

152 
›t
;

153 c⁄° 
›ti⁄
 
def_›ti⁄s
[] = {

154 
COMMON_LONG_OPTS


157 i‡(!
l⁄g›ts
)

158 
l⁄g›ts
 = 
def_›ti⁄s
;

160 
›ãº
 = 0;

161 (
›t
 = 
	`gë›t_l⁄g
(
¨gc
, 
¨gv
, 
›t°rög
, 
l⁄g›ts
, 
NULL
)) == '?') {

162 i‡(
›t›t
 == 'h') {

163 
	`hñp
(
hñp°r
);

164 
	`exô
(0);

166 
	`Ârötf
(
°dîr
, "›ti⁄ `%c'ÇŸ suµ‹ãd.\n", 
›t›t
);

167 
	`exô
(2);

169 i‡(
›t
 == 'h') {

170 
	`hñp
(
hñp°r
);

171 
	`exô
(0);

173 i‡(
›t
 != -1)

174  
›t
;

176 i‡(
¨gc
 - 
›töd
 <
ªq¨gs
 - 1) {

177 
	`Ârötf
(
°dîr
, "'xl %s'ÑequiresátÜeast %dárgument%s.\n\n",

178 
hñp°r
, 
ªq¨gs
,Ñeqargs > 1 ? "s" : "");

179 
	`hñp
(
hñp°r
);

180 
	`exô
(2);

183 
	}
}

185 
	$°rög_ªÆloc_≠≥nd
(**
accumuœã
, c⁄° *
m‹e
)

190 
size_t
 
ﬁdÀn
 = *
accumuœã
 ? 
	`°æí
(*accumulate) : 0;

191 
size_t
 
m‹ñí
 = 
	`°æí
(
m‹e
) + 1 ;

192 i‡(
ﬁdÀn
 > 
SSIZE_MAX
 || 
m‹ñí
 > SSIZE_MAX - oldlen) {

193 
	`Ârötf
(
°dîr
,"Additional config data farÅooÜarge\n");

194 
	`exô
(-
ERROR_FAIL
);

197 *
accumuœã
 = 
	`xªÆloc
(*accumuœã, 
ﬁdÀn
 + 
m‹ñí
);

198 
	`mem˝y
(*
accumuœã
 + 
ﬁdÀn
, 
m‹e
, 
m‹ñí
);

199 
	}
}

201 
	$¥öt_bôm≠
(
uöt8_t
 *
m≠
, 
m≠Àn
, 
FILE
 *
°ªam
)

203 
i
;

204 
uöt8_t
 
pm≠
 = 0, 
bômask
 = 0;

205 
fú°£t
 = 0, 
°©e
 = 0;

207 
i
 = 0; i < 
m≠Àn
; i++) {

208 i‡(
i
 % 8 == 0) {

209 
pm≠
 = *
m≠
++;

210 
bômask
 = 1;

211 } 
bômask
 <<= 1;

213 
°©e
) {

216 i‡((
pm≠
 & 
bômask
) != 0) {

217 
fú°£t
 = 
i
;

218 
°©e
++;

223 i‡((
pm≠
 & 
bômask
) == 0) {

224 
	`Ârötf
(
°ªam
, "%s%d", 
°©e
 > 1 ? "," : "", 
fú°£t
);

225 i‡(
i
 - 1 > 
fú°£t
)

226 
	`Ârötf
(
°ªam
, "-%d", 
i
 - 1);

227 
°©e
 = 2;

232 
°©e
) {

234 
	`Ârötf
(
°ªam
, "none");

239 i‡(
fú°£t
 == 0) {

240 
	`Ârötf
(
°ªam
, "all");

244 
	`Ârötf
(
°ªam
, "%s%d", 
°©e
 > 1 ? "," : "", 
fú°£t
);

245 i‡(
i
 - 1 > 
fú°£t
)

246 
	`Ârötf
(
°ªam
, "-%d", 
i
 - 1);

249 
	}
}

251 
	$do_d´m⁄ize
(*
«me
, c⁄° *
pidfûe
)

253 *
fuŒ«me
;

254 
pid_t
 
chûd1
;

255 
nuŒfd
, 
ªt
 = 0;

257 
chûd1
 = 
	`xl_f‹k
(
chûd_waôd´m⁄
, "domain monitoring daemonizing child");

258 i‡(
chûd1
) {

259 
ªt
 = 
	`chûd_ªp‹t
(
chûd_waôd´m⁄
);

260 i‡(
ªt
Ë
out
;

261 
ªt
 = 1;

262 
out
;

265 
	`po°f‹k
();

267 
ªt
 = 
	`libxl_¸óã_logfûe
(
˘x
, 
«me
, &
fuŒ«me
);

268 i‡(
ªt
) {

269 
	`LOG
("ÁûedÅÿ›íÜogfûê%s: %s",
fuŒ«me
,
	`°ªº‹
(
î∫o
));

270 
	`exô
(-1);

273 
	`CHK_SYSCALL
(
logfûe
 = 
	`›í
(
fuŒ«me
, 
O_WRONLY
|
O_CREAT
|
O_APPEND
, 0644));

274 
	`‰ì
(
fuŒ«me
);

275 
	`as£π
(
logfûe
 >= 3);

277 
	`CHK_SYSCALL
(
nuŒfd
 = 
	`›í
("/dev/nuŒ", 
O_RDONLY
));

278 
	`as£π
(
nuŒfd
 >= 3);

280 
	`dup2
(
nuŒfd
, 0);

281 
	`dup2
(
logfûe
, 1);

282 
	`dup2
(
logfûe
, 2);

284 
	`˛o£
(
nuŒfd
);

286 
	`CHK_SYSCALL
(
	`d´m⁄
(0, 1));

288 i‡(
pidfûe
) {

289 
fd
 = 
	`›í
(
pidfûe
, 
O_RDWR
 | 
O_CREAT
, 
S_IRUSR
|
S_IWUSR
);

290 *
pid
 = 
NULL
;

292 i‡(
fd
 == -1) {

293 
	`≥º‹
("UnableÅo openÖidfile");

294 
	`exô
(1);

297 i‡(
	`a•rötf
(&
pid
, "%ld\n", ()
	`gëpid
()) == -1) {

298 
	`≥º‹
("FormattingÖid");

299 
	`exô
(1);

302 i‡(
	`wrôe
(
fd
, 
pid
, 
	`°æí
(pid)) < 0) {

303 
	`≥º‹
("WritingÖid");

304 
	`exô
(1);

307 i‡(
	`˛o£
(
fd
) < 0) {

308 
	`≥º‹
("ClosingÖidfile");

309 
	`exô
(1);

312 
	`‰ì
(
pid
);

315 
out
:

316  
ªt
;

317 
	}
}

	@xl_utils.h

15 #i‚de‡
XL_UTILS_H


16 
	#XL_UTILS_H


	)

18 
	~<gë›t.h
>

21 
	#CHK_ERRNOVAL
–
ˇŒ
 ) ({ \

22 
chk_î∫ovÆ
 = (
ˇŒ
); \

23 i‡(
chk_î∫ovÆ
 < 0) \

24 
	`ab‹t
(); \

25 i‡(
chk_î∫ovÆ
 > 0) { \

26 
	`Ârötf
(
°dîr
,"xl: fatalÉrror: %s:%d: %s: %s\n", \

27 
__FILE__
,
__LINE__
, 
	`°ªº‹
(
chk_î∫ovÆ
), #call); \

28 
	`exô
(
EXIT_FAILURE
); \

30 })

	)

33 
	#CHK_SYSCALL
–
ˇŒ
 ) ({ \

34 i‡((
ˇŒ
) == -1) { \

35 
	`Ârötf
(
°dîr
,"xl: fatalÉrror: %s:%d: %s: %s\n", \

36 
__FILE__
,
__LINE__
, 
	`°ªº‹
(
î∫o
), #call); \

37 
	`exô
(
EXIT_FAILURE
); \

39 })

	)

41 
	#MUST
–
ˇŒ
 ) ({ \

42 
mu°_rc
 = (
ˇŒ
); \

43 i‡(
mu°_rc
 < 0) { \

44 
	`Ârötf
(
°dîr
,"xl: fatalÉrror: %s:%d,Ñc=%d: %s\n", \

45 
__FILE__
,
__LINE__
, 
mu°_rc
, #call); \

46 
	`exô
(
EXIT_FAILURE
); \

48 })

	)

50 
	#STR_HAS_PREFIX
–
a
, 
b
 ) \

51 –
	`°∫cmp
(
a
, 
b
, 
	`°æí
(b)Ë=0 )

	)

52 
	#STR_SKIP_PREFIX
–
a
, 
b
 ) \

53 –
	`STR_HAS_PREFIX
(
a
, 
b
Ë? (◊Ë+
	`°æí
(b), 1Ë: 0 )

	)

55 
	#INVALID_DOMID
 ~0

	)

57 
	#LOG
(
_f
, 
_a
...Ë
	`dﬁog
(
__FILE__
, 
__LINE__
, 
__func__
, _‡"\n", ##_a)

	)

113 
	#SWITCH_FOREACH_OPT
(
›t
, 
›ts
, 
l⁄g›ts
, \

114 
comm™d«me
, 
num_ªquúed_›ts
) \

115 ((
›t
Ë
	`def_gë›t
(
¨gc
, 
¨gv
, "h" 
›ts
, (
l⁄g›ts
), \

116 (
comm™d«me
), (
num_ªquúed_›ts
))) != -1) \

117 
›t
)

	)

120 
	#COMMON_LONG_OPTS
 {"help", 0, 0, 'h'}, \

121 {0, 0, 0, 0}

	)

123 
def_gë›t
(
¨gc
, * c⁄° 
¨gv
[],

124 c⁄° *
›t°rög
,

125 c⁄° 
›ti⁄
 *
l⁄g›ts
,

126 c⁄° * 
hñp°r
, 
ªq¨gs
);

128 
	$dﬁog
(c⁄° *
fûe
, 
löe
, c⁄° *
func
, *
fmt
, ...)

129 
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,4,5)));

131 
	$xva•rötf
(**
°Ω
, c⁄° *
fmt
, 
va_li°
 
≠
)

132 
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,2,0)));

134 
	$xa•rötf
(**
°Ω
, c⁄° *
fmt
, ...)

135 
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,2,3)));

137 *
	`xmÆloc
(
size_t
 
sz
);

138 *
	`xˇŒoc
(
size_t
 
n
, size_à
sz
);

139 *
	`xªÆloc
(*
±r
, 
size_t
 
sz
);

140 *
	`x°rdup
(c⁄° *
x
);

141 
	`°rög_ªÆloc_≠≥nd
(**
accumuœã
, c⁄° *
m‹e
);

143 
	`Êush_°ªam
(
FILE
 *
fh
);

144 
uöt32_t
 
	$föd_domaö
(c⁄° *
p
Ë
	`__©åibuã__
((
w¨n_unu£d_ªsu…
));

146 
	`¥öt_bôm≠
(
uöt8_t
 *
m≠
, 
m≠Àn
, 
FILE
 *
°ªam
);

148 
	`do_d´m⁄ize
(*
«me
, c⁄° *
pidfûe
);

	@xl_vcpu.c

15 
	~<°dlib.h
>

17 
	~<libxl.h
>

18 
	~<libxl_utûs.h
>

19 
	~<libxlutû.h
>

21 
	~"xl.h
"

22 
	~"xl_utûs.h
"

23 
	~"xl_∑r£.h
"

25 
	$¥öt_v˝uöfo
(
uöt32_t
 
tdomid
,

26 c⁄° 
libxl_v˝uöfo
 *
v˝uöfo
,

27 
uöt32_t
 
ƒ_˝us
)

29 *
dom«me
;

32 
dom«me
 = 
	`libxl_domid_to_«me
(
˘x
, 
tdomid
);

33 
	`¥ötf
("%-32s %5u %5u",

34 
dom«me
, 
tdomid
, 
v˝uöfo
->
v˝uid
);

35 
	`‰ì
(
dom«me
);

36 i‡(!
v˝uöfo
->
⁄löe
) {

38 
	`¥ötf
("%5c %3c%cp ", '-', '-', '-');

41 
	`¥ötf
("%5u %3c%c- ", 
v˝uöfo
->
˝u
,

42 
v˝uöfo
->
ru¬ög
 ? 'r' : '-',

43 
v˝uöfo
->
blocked
 ? 'b' : '-');

46 
	`¥ötf
("%9.1‡ ", (()
v˝uöfo
->
v˝u_time
 / 1e9));

48 
	`¥öt_bôm≠
(
v˝uöfo
->
˝um≠
.
m≠
, 
ƒ_˝us
, 
°dout
);

49 
	`¥ötf
(" / ");

50 
	`¥öt_bôm≠
(
v˝uöfo
->
˝um≠_so·
.
m≠
, 
ƒ_˝us
, 
°dout
);

51 
	`¥ötf
("\n");

52 
	}
}

54 
	$¥öt_domaö_v˝uöfo
(
uöt32_t
 
domid
, uöt32_à
ƒ_˝us
)

56 
libxl_v˝uöfo
 *
v˝uöfo
;

57 
i
, 
nb_v˝u
, 
ƒ˝us
;

59 
v˝uöfo
 = 
	`libxl_li°_v˝u
(
˘x
, 
domid
, &
nb_v˝u
, &
ƒ˝us
);

61 i‡(!
v˝uöfo
)

64 
i
 = 0; i < 
nb_v˝u
; i++) {

65 
	`¥öt_v˝uöfo
(
domid
, &
v˝uöfo
[
i
], 
ƒ_˝us
);

68 
	`libxl_v˝uöfo_li°_‰ì
(
v˝uöfo
, 
nb_v˝u
);

69 
	}
}

71 
	$v˝uli°
(
¨gc
, **
¨gv
)

73 
libxl_domöfo
 *
domöfo
;

74 
libxl_physöfo
 
physöfo
;

75 
i
, 
nb_domaö
;

77 i‡(
	`libxl_gë_physöfo
(
˘x
, &
physöfo
) != 0) {

78 
	`Ârötf
(
°dîr
, "libxl_physinfo failed.\n");

79 
v˝uli°_out
;

82 
	`¥ötf
("%-32s %5s %5s %5s %5s %9s %s\n",

85 i‡(!
¨gc
) {

86 i‡(!(
domöfo
 = 
	`libxl_li°_domaö
(
˘x
, &
nb_domaö
))) {

87 
	`Ârötf
(
°dîr
, "libxl_list_domain failed.\n");

88 
v˝uli°_out
;

91 
i
 = 0; i<
nb_domaö
; i++)

92 
	`¥öt_domaö_v˝uöfo
(
domöfo
[
i
].
domid
, 
physöfo
.
ƒ_˝us
);

94 
	`libxl_domöfo_li°_‰ì
(
domöfo
, 
nb_domaö
);

96 ; 
¨gc
 > 0; ++
¨gv
, --argc) {

97 
uöt32_t
 
domid
 = 
	`föd_domaö
(*
¨gv
);

98 
	`¥öt_domaö_v˝uöfo
(
domid
, 
physöfo
.
ƒ_˝us
);

101 
v˝uli°_out
:

102 
	`libxl_physöfo_di•o£
(&
physöfo
);

103 
	}
}

105 
	$maö_v˝uli°
(
¨gc
, **
¨gv
)

107 
›t
;

109 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "vcpu-list", 0) {

113 
	`v˝uli°
(
¨gc
 - 
›töd
, 
¨gv
 + optind);

114  
EXIT_SUCCESS
;

115 
	}
}

117 
	$maö_v˝upö
(
¨gc
, **
¨gv
)

119 
›ti⁄
 
›ts
[] = {

121 
COMMON_LONG_OPTS


123 
libxl_v˝uöfo
 *
v˝uöfo
;

124 
libxl_bôm≠
 
˝um≠_h¨d
, 
˝um≠_so·
;;

125 
libxl_bôm≠
 *
so·
 = &
˝um≠_so·
, *
h¨d
 = &
˝um≠_h¨d
;

126 
uöt32_t
 
domid
;

131 
v˝uid
;

132 c⁄° *
v˝u
, *
h¨d_°r
, *
so·_°r
;

133 *
íd±r
;

134 
›t
, 
nb_˝u
, 
nb_v˝u
, 
rc
 = 
EXIT_FAILURE
;

135 
boﬁ
 
f‹˚
 = 
Ál£
;

137 
	`libxl_bôm≠_öô
(&
˝um≠_h¨d
);

138 
	`libxl_bôm≠_öô
(&
˝um≠_so·
);

140 
	`SWITCH_FOREACH_OPT
(
›t
, "f", 
›ts
, "vcpu-pin", 3) {

142 
f‹˚
 = 
åue
;

148 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

149 
v˝u
 = 
¨gv
[
›töd
+1];

150 
h¨d_°r
 = 
¨gv
[
›töd
+2];

151 
so·_°r
 = (
¨gc
 > 
›töd
+3Ë? 
¨gv
[›töd+3] : 
NULL
;

154 
v˝uid
 = 
	`°πﬁ
(
v˝u
, &
íd±r
, 10);

155 i‡(
v˝u
 =
íd±r
 || 
v˝uid
 < 0) {

156 i‡(
	`°rcmp
(
v˝u
, "all")) {

157 
	`Ârötf
(
°dîr
, "Eº‹: InvÆidárgumíà%†a†VCPU.\n", 
v˝u
);

158 
out
;

160 i‡(
f‹˚
) {

161 
	`Ârötf
(
°dîr
, "Error: --forceánd 'all'ás VCPUÇotállowed.\n");

162 
out
;

164 
v˝uid
 = -1;

167 i‡(
	`libxl_˝u_bôm≠_Æloc
(
˘x
, &
˝um≠_h¨d
, 0) ||

168 
	`libxl_˝u_bôm≠_Æloc
(
˘x
, &
˝um≠_so·
, 0))

169 
out
;

185 i‡(!
	`°rcmp
(
h¨d_°r
, "-"))

186 
h¨d
 = 
NULL
;

187 i‡(
	`∑r£_˝uønge
(
h¨d_°r
, 
h¨d
))

188 
out
;

193 i‡(
¨gc
 <
›töd
+3 || !
	`°rcmp
(
so·_°r
, "-"))

194 
so·
 = 
NULL
;

195 i‡(
	`∑r£_˝uønge
(
so·_°r
, 
so·
))

196 
out
;

198 i‡(
dryrun_⁄ly
) {

199 
nb_˝u
 = 
	`libxl_gë_⁄löe_˝us
(
˘x
);

200 i‡(
nb_˝u
 < 0) {

201 
	`Ârötf
(
°dîr
, "libxl_get_online_cpus failed.\n");

202 
out
;

205 
	`Ârötf
(
°dout
, "cpumap: ");

206 i‡(
h¨d
)

207 
	`¥öt_bôm≠
(
h¨d
->
m≠
, 
nb_˝u
, 
°dout
);

209 
	`Ârötf
(
°dout
, "-");

210 i‡(
so·
) {

211 
	`Ârötf
(
°dout
, " ");

212 
	`¥öt_bôm≠
(
so·
->
m≠
, 
nb_˝u
, 
°dout
);

214 
	`Ârötf
(
°dout
, "\n");

216 i‡(
	`„º‹
(
°dout
Ë|| 
	`fÊush
(stdout)) {

217 
	`≥º‹
("stdout");

218 
	`exô
(
EXIT_FAILURE
);

221 
rc
 = 
EXIT_SUCCESS
;

222 
out
;

225 i‡(
f‹˚
) {

226 i‡(
	`libxl_£t_v˝uafföôy_f‹˚
(
˘x
, 
domid
, 
v˝uid
, 
h¨d
, 
so·
)) {

227 
	`Ârötf
(
°dîr
, "CouldÇot setáffinity for vcpu `%ld'.\n",

228 
v˝uid
);

229 
out
;

232 i‡(
v˝uid
 != -1) {

233 i‡(
	`libxl_£t_v˝uafföôy
(
˘x
, 
domid
, 
v˝uid
, 
h¨d
, 
so·
)) {

234 
	`Ârötf
(
°dîr
, "CouldÇot setáffinity for vcpu `%ld'.\n",

235 
v˝uid
);

236 
out
;

239 i‡(!(
v˝uöfo
 = 
	`libxl_li°_v˝u
(
˘x
, 
domid
, &
nb_v˝u
, &
nb_˝u
))) {

240 
	`Ârötf
(
°dîr
, "libxl_list_vcpu failed.\n");

241 
out
;

243 i‡(
	`libxl_£t_v˝uafföôy_Æl
(
˘x
, 
domid
, 
nb_v˝u
, 
h¨d
, 
so·
))

244 
	`Ârötf
(
°dîr
, "CouldÇot setáffinity.\n");

245 
	`libxl_v˝uöfo_li°_‰ì
(
v˝uöfo
, 
nb_v˝u
);

248 
rc
 = 
EXIT_SUCCESS
;

249 
out
:

250 
	`libxl_bôm≠_di•o£
(&
˝um≠_so·
);

251 
	`libxl_bôm≠_di•o£
(&
˝um≠_h¨d
);

252  
rc
;

253 
	}
}

255 
	$v˝u£t
(
uöt32_t
 
domid
, c⁄° * 
ƒ_v˝us
, 
check_ho°
)

257 *
íd±r
;

258 
max_v˝us
, 
i
;

259 
libxl_bôm≠
 
˝um≠
;

260 
rc
;

262 
	`libxl_bôm≠_öô
(&
˝um≠
);

263 
max_v˝us
 = 
	`°πoul
(
ƒ_v˝us
, &
íd±r
, 10);

264 i‡(
ƒ_v˝us
 =
íd±r
) {

265 
	`Ârötf
(
°dîr
, "Error: Invalidárgument.\n");

273 i‡(
check_ho°
) {

274 
⁄löe_v˝us
, 
ho°_˝u
 = 
	`libxl_gë_max_˝us
(
˘x
);

275 
libxl_domöfo
 
domöfo
;

277 i‡(
	`libxl_domaö_öfo
(
˘x
, &
domöfo
, 
domid
))

280 
⁄löe_v˝us
 = 
domöfo
.
v˝u_⁄löe
;

281 
	`libxl_domöfo_di•o£
(&
domöfo
);

283 i‡(
max_v˝us
 > 
⁄löe_v˝us
 && max_v˝u†> 
ho°_˝u
) {

284 
	`Ârötf
(
°dîr
, "Youáre overcommmitting! You have %dÖhysical" \

286 " c⁄töue\n", 
ho°_˝u
, 
max_v˝us
);

290 
rc
 = 
	`libxl_˝u_bôm≠_Æloc
(
˘x
, &
˝um≠
, 
max_v˝us
);

291 i‡(
rc
) {

292 
	`Ârötf
(
°dîr
, "libxl_˝u_bôm≠_Ælo¯Áûed,Ñc: %d\n", 
rc
);

295 
i
 = 0; i < 
max_v˝us
; i++)

296 
	`libxl_bôm≠_£t
(&
˝um≠
, 
i
);

298 
rc
 = 
	`libxl_£t_v˝u⁄löe
(
˘x
, 
domid
, &
˝um≠
);

299 i‡(
rc
 =
ERROR_DOMAIN_NOTFOUND
)

300 
	`Ârötf
(
°dîr
, "Domaö %u d€†nŸÉxi°.\n", 
domid
);

301 i‡(
rc
)

302 
	`Ârötf
(
°dîr
, "libxl_set_vcpuonline failed domid=%u max_vcpus=%d," \

303 "Ñc: %d\n", 
domid
, 
max_v˝us
, 
rc
);

305 
	`libxl_bôm≠_di•o£
(&
˝um≠
);

306  
rc
 ? 1 : 0;

307 
	}
}

309 
	$maö_v˝u£t
(
¨gc
, **
¨gv
)

311 
›ti⁄
 
›ts
[] = {

313 
COMMON_LONG_OPTS


315 
›t
, 
check_ho°
 = 1;

317 
	`SWITCH_FOREACH_OPT
(
›t
, "i", 
›ts
, "vcpu-set", 2) {

319 
check_ho°
 = 0;

325 i‡(
	`v˝u£t
(
	`föd_domaö
(
¨gv
[
›töd
]),árgv[›töd + 1], 
check_ho°
))

326  
EXIT_FAILURE
;

328  
EXIT_SUCCESS
;

329 
	}
}

	@xl_vdispl.c

15 
	~<°dlib.h
>

17 
	~<libxl.h
>

18 
	~<libxl_utûs.h
>

19 
	~<libxlutû.h
>

21 
	~"xl.h
"

22 
	~"xl_utûs.h
"

23 
	~"xl_∑r£.h
"

25 
	$maö_vdi•œâach
(
¨gc
, **
¨gv
)

27 
›t
;

28 
rc
;

29 
uöt32_t
 
domid
;

30 
libxl_devi˚_vdi•l
 
vdi•l
;

32 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "vdispl-attach", 1) {

36 
	`libxl_devi˚_vdi•l_öô
(&
vdi•l
);

37 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
++]);

39 
¨gv
 +
›töd
, 
¨gc
 -= optind;árgc > 0; ++argv, --argc) {

40 
rc
 = 
	`∑r£_vdi•l_c⁄fig
(&
vdi•l
, *
¨gv
);

41 i‡(
rc
Ë
out
;

44 i‡(
vdi•l
.
num_c⁄√˘‹s
 == 0) {

45 
	`Ârötf
(
°dîr
, "AtÜeast one connector should be specified.\n");

46 
rc
 = 
ERROR_FAIL
; 
out
;

49 i‡(
dryrun_⁄ly
) {

50 *
js⁄
 = 
	`libxl_devi˚_vdi•l_to_js⁄
(
˘x
, &
vdi•l
);

51 
	`¥ötf
("vdi•l: %s\n", 
js⁄
);

52 
	`‰ì
(
js⁄
);

53 
rc
 = 0;

54 
out
;

57 i‡(
	`libxl_devi˚_vdi•l_add
(
˘x
, 
domid
, &
vdi•l
, 0)) {

58 
	`Ârötf
(
°dîr
, "libxl_device_vdispl_add failed.\n");

59 
rc
 = 
ERROR_FAIL
; 
out
;

62 
rc
 = 0;

64 
out
:

65 
	`libxl_devi˚_vdi•l_di•o£
(&
vdi•l
);

66  
rc
;

67 
	}
}

69 
	$maö_vdi•Œi°
(
¨gc
, **
¨gv
)

71 
›t
;

72 
i
, 
j
, 
n
;

73 
libxl_devi˚_vdi•l
 *
vdi•ls
;

74 
libxl_vdi•löfo
 
vdi•löfo
;

76 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "vdispl-list", 1) {

80 
¨gv
 +
›töd
, 
¨gc
 -= optind;árgc > 0; --argc, ++argv) {

81 
uöt32_t
 
domid
;

83 i‡(
	`libxl_domaö_quÆifõr_to_domid
(
˘x
, *
¨gv
, &
domid
) < 0) {

84 
	`Ârötf
(
°dîr
, "%†i†™ invÆid domaö idítifõr\n", *
¨gv
);

88 
vdi•ls
 = 
	`libxl_devi˚_vdi•l_li°
(
˘x
, 
domid
, &
n
);

90 i‡(!
vdi•ls
) ;

92 
i
 = 0; i < 
n
; i++) {

93 
	`libxl_vdi•löfo_öô
(&
vdi•löfo
);

94 i‡(
	`libxl_devi˚_vdi•l_gëöfo
(
˘x
, 
domid
, &
vdi•ls
[
i
],

95 &
vdi•löfo
) == 0) {

96 
	`¥ötf
("DevId: %d, BE: %d, handle: %d, state: %d, "

98 
vdi•löfo
.
devid
, vdi•löfo.
backíd_id
,

99 
vdi•löfo
.
‰⁄ãnd_id
,

100 
vdi•löfo
.
°©e
, vdi•löfo.
be_Æloc
,

101 
vdi•löfo
.
backíd
, vdi•löfo.
‰⁄ãnd
);

103 
j
 = 0; j < 
vdi•löfo
.
num_c⁄√˘‹s
; j++) {

104 
	`¥ötf
("\tConnector: %d, id: %s, width: %d, height: %d, "

107 
j
, 
vdi•löfo
.
c⁄√˘‹s
[j].
id
,

108 
vdi•löfo
.
c⁄√˘‹s
[
j
].
width
,

109 
vdi•löfo
.
c⁄√˘‹s
[
j
].
height
,

110 
vdi•löfo
.
c⁄√˘‹s
[
j
].
ªq_ºef
,

111 
vdi•löfo
.
c⁄√˘‹s
[
j
].
ªq_evtch
,

112 
vdi•löfo
.
c⁄√˘‹s
[
j
].
evt_ºef
,

113 
vdi•löfo
.
c⁄√˘‹s
[
j
].
evt_evtch
);

116 
	`libxl_vdi•löfo_di•o£
(&
vdi•löfo
);

118 
	`libxl_devi˚_vdi•l_li°_‰ì
(
vdi•ls
, 
n
);

121 
	}
}

123 
	$maö_vdi•ldëach
(
¨gc
, **
¨gv
)

125 
uöt32_t
 
domid
, 
devid
;

126 
›t
, 
rc
;

127 
libxl_devi˚_vdi•l
 
vdi•l
;

129 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "vdispl-detach", 2) {

133 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
++]);

134 
devid
 = 
	`©oi
(
¨gv
[
›töd
++]);

136 
	`libxl_devi˚_vdi•l_öô
(&
vdi•l
);

138 i‡(
	`libxl_devid_to_devi˚_vdi•l
(
˘x
, 
domid
, 
devid
, &
vdi•l
)) {

139 
	`Ârötf
(
°dîr
, "Eº‹: Devi˚ %dÇŸ c⁄√˘ed.\n", 
devid
);

140 
rc
 = 
ERROR_FAIL
;

141 
out
;

144 
rc
 = 
	`libxl_devi˚_vdi•l_ªmove
(
˘x
, 
domid
, &
vdi•l
, 0);

145 i‡(
rc
) {

146 
	`Ârötf
(
°dîr
, "libxl_device_vdispl_remove failed.\n");

147 
rc
 = 
ERROR_FAIL
;

148 
out
;

151 
rc
 = 0;

153 
out
:

154 
	`libxl_devi˚_vdi•l_di•o£
(&
vdi•l
);

155  
rc
;

156 
	}
}

	@xl_vmcontrol.c

16 
	~<f˙é.h
>

17 
	~<öây≥s.h
>

18 
	~<limôs.h
>

19 
	~<°dlib.h
>

20 
	~<sys/°©.h
>

21 
	~<sys/ty≥s.h
>

22 
	~<sys/ut¢ame.h
>

23 
	~<time.h
>

24 
	~<uni°d.h
>

26 
	~<libxl.h
>

27 
	~<libxl_utûs.h
>

28 
	~<libxlutû.h
>

30 
	~"xl.h
"

31 
	~"xl_utûs.h
"

32 
	~"xl_∑r£.h
"

35 
	gfd_lock
 = -1;

37 
	$∑u£_domaö
(
uöt32_t
 
domid
)

39 
	`libxl_domaö_∑u£
(
˘x
, 
domid
);

40 
	}
}

42 
	$u≈au£_domaö
(
uöt32_t
 
domid
)

44 
	`libxl_domaö_u≈au£
(
˘x
, 
domid
);

45 
	}
}

47 
	$de°roy_domaö
(
uöt32_t
 
domid
, 
f‹˚
)

49 
rc
;

51 i‡(
domid
 =0 && !
f‹˚
) {

52 
	`Ârötf
(
°dîr
, "Not destroying domain 0; use -fÅo force.\n"

55 
	`exô
(
EXIT_FAILURE
);

57 
rc
 = 
	`libxl_domaö_de°roy
(
˘x
, 
domid
, 0);

58 i‡(
rc
Ë{ 
	`Ârötf
(
°dîr
,"de°roy faûed (rc=%d)\n",rc); 
	`exô
(
EXIT_FAILURE
); }

59 
	}
}

61 
	$vnuma_wrôe_to_xs
(
domid
, 
num_nodes
, 
vnode_öfo
* 
vnode_öfos
){

63 *
dom_∑th
;

64 
xs_≥rmissi⁄s
 
rw≥rm
[1];

65 
buf
[50];

66 
xs_å™ß˘i⁄_t
 
t
 = 0;

68 
rw≥rm
[0].
id
 = 
domid
;

69 
rw≥rm
[0].
≥rms
 = 
XS_PERM_WRITE
;

71 
dom_∑th
 = 
	`libxl__xs_gë_dom∑th
(
gc
, 
domid
);

72 
t
 = 
	`xs_å™ß˘i⁄_°¨t
(
˘x
->
xsh
);

73 
	`libxl__xs_mknod
(
gc
, 
t
, 
	`GCSPRINTF
("%s/mem‹y/node", 
dom_∑th
), 
rw≥rm
, 
	`ARRAY_SIZE
(rwperm));

75 
i
=0; i < 
num_nodes
; i++){

76 
	`libxl__xs_mknod
(
gc
, 
t
, 
	`GCSPRINTF
("%s/mem‹y/node/%d", 
dom_∑th
, 
i
),

77 
rw≥rm
, 
	`ARRAY_SIZE
(rwperm));

78 
	`libxl__xs_mknod
(
gc
, 
t
, 
	`GCSPRINTF
("%s/mem‹y/node/%d/v˝u", 
dom_∑th
, 
i
),

79 
rw≥rm
, 
	`ARRAY_SIZE
(rwperm));

81 
	`¢¥ötf
(
buf
, (buf), "%d", 
vnode_öfos
[
i
].
≤ode
);

82 
	`xs_wrôe
(
˘x
->
xsh
, 
t
, 
	`GCSPRINTF
("%s/mem‹y/node/%d/≤ode", 
dom_∑th
, 
i
),

83 
buf
, 
	`°æí
(buf));

85 
	`¢¥ötf
(
buf
, (buf), "%lu", 
vnode_öfos
[
i
].
ˇ∑côy
);

86 
	`xs_wrôe
(
˘x
->
xsh
, 
t
, 
	`GCSPRINTF
("%s/mem‹y/node/%d/ˇ∑côy", 
dom_∑th
, 
i
),

87 
buf
, 
	`°æí
(buf));

89 
	`¢¥ötf
(
buf
, (buf), "%lu", 
vnode_öfos
[
i
].
èrgë
);

90 
	`xs_wrôe
(
˘x
->
xsh
, 
t
, 
	`GCSPRINTF
("%s/mem‹y/node/%d/èrgë", 
dom_∑th
, 
i
),

91 
buf
, 
	`°æí
(buf));

92 
j
=0; j < 
vnode_öfos
[
i
].
num_v˝us
; j++){

93 
	`xs_wrôe
(
˘x
->
xsh
, 
t
, 
	`GCSPRINTF
("%s/mem‹y/node/%d/v˝u/%d", 
dom_∑th
, 
i
, 
j
),

94 "⁄löe", 
	`°æí
("online"));

97 
	`xs_å™ß˘i⁄_íd
(
˘x
->
xsh
, 
t
, 0);

99 
	}
}

101 
	$maö_∑u£
(
¨gc
, **
¨gv
)

103 
›t
;

105 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "pause", 1) {

109 
	`∑u£_domaö
(
	`föd_domaö
(
¨gv
[
›töd
]));

111  
EXIT_SUCCESS
;

112 
	}
}

114 
	$maö_u≈au£
(
¨gc
, **
¨gv
)

116 
›t
;

118 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "unpause", 1) {

122 
	`u≈au£_domaö
(
	`föd_domaö
(
¨gv
[
›töd
]));

124  
EXIT_SUCCESS
;

125 
	}
}

127 
	$maö_de°roy
(
¨gc
, **
¨gv
)

129 
›t
;

130 
f‹˚
 = 0;

132 
	`SWITCH_FOREACH_OPT
(
›t
, "f", 
NULL
, "destroy", 1) {

134 
f‹˚
 = 1;

138 
	`de°roy_domaö
(
	`föd_domaö
(
¨gv
[
›töd
]), 
f‹˚
);

139  
EXIT_SUCCESS
;

140 
	}
}

142 
	$ªboŸ_domaö
(
uöt32_t
 
domid
, 
libxl_evgí_domaö_dóth
 **
dóthw
,

143 
libxl_ev_u£r
 
f‹_u£r
, 
ÁŒback_åiggî
)

145 
rc
;

147 
	`Ârötf
(
°dîr
, "ReboŸög domaö %u\n", 
domid
);

148 
rc
=
	`libxl_domaö_ªboŸ
(
˘x
, 
domid
);

149 i‡(
rc
 =
ERROR_NOPARAVIRT
) {

150 i‡(
ÁŒback_åiggî
) {

151 
	`Ârötf
(
°dîr
, "PV control interfaceÇotávailable:"

153 
rc
 = 
	`libxl_£nd_åiggî
(
˘x
, 
domid
, 
LIBXL_TRIGGER_RESET
, 0);

155 
	`Ârötf
(
°dîr
, "PV control interfaceÇotávailable:"

157 
	`Ârötf
(
°dîr
, "Use \"-F\"Åo fallbackÅo ACPIÑesetÉvent.\n");

160 i‡(
rc
) {

161 
	`Ârötf
(
°dîr
,"ªboŸ faûed (rc=%d)\n",
rc
);
	`exô
(
EXIT_FAILURE
);

164 i‡(
dóthw
) {

165 
rc
 = 
	`libxl_evíabÀ_domaö_dóth
(
˘x
, 
domid
, 
f‹_u£r
, 
dóthw
);

166 i‡(
rc
) {

167 
	`Ârötf
(
°dîr
,"waô f‹ dóth faûed (evgí,Ñc=%d)\n",
rc
);

168 
	`exô
(
EXIT_FAILURE
);

171 
	}
}

173 
	$shutdown_domaö
(
uöt32_t
 
domid
,

174 
libxl_evgí_domaö_dóth
 **
dóthw
,

175 
libxl_ev_u£r
 
f‹_u£r
,

176 
ÁŒback_åiggî
)

178 
rc
;

180 
	`Ârötf
(
°dîr
, "Shuâög dow¿domaö %u\n", 
domid
);

181 
rc
=
	`libxl_domaö_shutdown
(
˘x
, 
domid
);

182 i‡(
rc
 =
ERROR_NOPARAVIRT
) {

183 i‡(
ÁŒback_åiggî
) {

184 
	`Ârötf
(
°dîr
, "PV control interfaceÇotávailable:"

186 
rc
 = 
	`libxl_£nd_åiggî
(
˘x
, 
domid
, 
LIBXL_TRIGGER_POWER
, 0);

188 
	`Ârötf
(
°dîr
, "PV control interfaceÇotávailable:"

190 
	`Ârötf
(
°dîr
, "Use \"-F\"Åo fallbackÅo ACPIÖowerÉvent.\n");

194 i‡(
rc
) {

195 
	`Ârötf
(
°dîr
,"shutdow¿Áûed (rc=%d)\n",
rc
);
	`exô
(
EXIT_FAILURE
);

198 i‡(
dóthw
) {

199 
rc
 = 
	`libxl_evíabÀ_domaö_dóth
(
˘x
, 
domid
, 
f‹_u£r
, 
dóthw
);

200 i‡(
rc
) {

201 
	`Ârötf
(
°dîr
,"waô f‹ dóth faûed (evgí,Ñc=%d)\n",
rc
);

202 
	`exô
(
EXIT_FAILURE
);

205 
	}
}

207 
	$waô_f‹_domaö_dóths
(
libxl_evgí_domaö_dóth
 **
dóthws
, 
ƒ
)

209 
rc
, 
cou¡
 = 0;

210 
	`LOG
("Waôög f‹ %d domaös", 
ƒ
);

211 1 && 
cou¡
 < 
ƒ
) {

212 
libxl_evít
 *
evít
;

213 
rc
 = 
	`libxl_evít_waô
(
˘x
, &
evít
, 
LIBXL_EVENTMASK_ALL
, 0,0);

214 i‡(
rc
) {

215 
	`LOG
("FaûedÅÿgëÉvít, quôtög (rc=%d)", 
rc
);

216 
	`exô
(
EXIT_FAILURE
);

219 
evít
->
ty≥
) {

220 
LIBXL_EVENT_TYPE_DOMAIN_DEATH
:

221 
	`LOG
("Domaö %d ha†bì¿de°royed", 
evít
->
domid
);

222 
	`libxl_evdißbÀ_domaö_dóth
(
˘x
, 
dóthws
[
evít
->
f‹_u£r
]);

223 
cou¡
++;

225 
LIBXL_EVENT_TYPE_DOMAIN_SHUTDOWN
:

226 
	`LOG
("Domain %d has been shut down,Ñeason code %d",

227 
evít
->
domid
,Évít->
u
.
domaö_shutdown
.
shutdown_ªas⁄
);

228 
	`libxl_evdißbÀ_domaö_dóth
(
˘x
, 
dóthws
[
evít
->
f‹_u£r
]);

229 
cou¡
++;

232 
	`LOG
("U√x≥˘edÉvíàty≥ %d", 
evít
->
ty≥
);

235 
	`libxl_evít_‰ì
(
˘x
, 
evít
);

237 
	}
}

239 
	$maö_shutdown_‹_ªboŸ
(
do_ªboŸ
, 
¨gc
, **
¨gv
)

241 c⁄° *
wh©
 = 
do_ªboŸ
 ? "reboot" : "shutdown";

242 (*
‚
)(
uöt32_t
 
domid
,

243 
libxl_evgí_domaö_dóth
 **, 
libxl_ev_u£r
, ) =

244 
do_ªboŸ
 ? &
ªboŸ_domaö
 : &
shutdown_domaö
;

245 
›t
, 
i
, 
nb_domaö
;

246 
waô_f‹_ô
 = 0, 
Æl
 = 0, 
ƒdóthws
 = 0;

247 
ÁŒback_åiggî
 = 0;

248 
›ti⁄
 
›ts
[] = {

251 
COMMON_LONG_OPTS


254 
	`SWITCH_FOREACH_OPT
(
›t
, "awF", 
›ts
, 
wh©
, 0) {

256 
Æl
 = 1;

259 
waô_f‹_ô
 = 1;

262 
ÁŒback_åiggî
 = 1;

266 i‡(!
¨gv
[
›töd
] && !
Æl
) {

267 
	`Ârötf
(
°dîr
, "You must specify -a orá domain id.\n\n");

268  
EXIT_FAILURE
;

271 i‡(
Æl
) {

272 
libxl_domöfo
 *
domöfo
;

273 
libxl_evgí_domaö_dóth
 **
dóthws
 = 
NULL
;

274 i‡(!(
domöfo
 = 
	`libxl_li°_domaö
(
˘x
, &
nb_domaö
))) {

275 
	`Ârötf
(
°dîr
, "libxl_list_domain failed.\n");

276  
EXIT_FAILURE
;

279 i‡(
waô_f‹_ô
)

280 
dóthws
 = 
	`ˇŒoc
(
nb_domaö
, (*deathws));

282 
i
 = 0; i<
nb_domaö
; i++) {

283 i‡(
domöfo
[
i
].
domid
 =0 || domöfo[i].
√vî_°›
)

285 
	`‚
(
domöfo
[
i
].
domid
, 
dóthws
 ? &dóthws[i] : 
NULL
, i,

286 
ÁŒback_åiggî
);

287 
ƒdóthws
++;

290 i‡(
dóthws
) {

291 
	`waô_f‹_domaö_dóths
(
dóthws
, 
ƒdóthws
);

292 
	`‰ì
(
dóthws
);

295 
	`libxl_domöfo_li°_‰ì
(
domöfo
, 
nb_domaö
);

297 
libxl_evgí_domaö_dóth
 *
dóthw
 = 
NULL
;

298 
uöt32_t
 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

300 
	`‚
(
domid
, 
waô_f‹_ô
 ? &
dóthw
 : 
NULL
, 0, 
ÁŒback_åiggî
);

302 i‡(
waô_f‹_ô
)

303 
	`waô_f‹_domaö_dóths
(&
dóthw
, 1);

307  
EXIT_SUCCESS
;

308 
	}
}

310 
	$maö_shutdown
(
¨gc
, **
¨gv
)

312  
	`maö_shutdown_‹_ªboŸ
(0, 
¨gc
, 
¨gv
);

313 
	}
}

315 
	$maö_ªboŸ
(
¨gc
, **
¨gv
)

317  
	`maö_shutdown_‹_ªboŸ
(1, 
¨gc
, 
¨gv
);

318 
	}
}

320 
	$evdißbÀ_disk_eje˘s
(
libxl_evgí_disk_eje˘
 **
diskws
,

321 
num_disks
)

323 
i
;

325 
i
 = 0; i < 
num_disks
; i++) {

326 i‡(
diskws
[
i
])

327 
	`libxl_evdißbÀ_disk_eje˘
(
˘x
, 
diskws
[
i
]);

328 
diskws
[
i
] = 
NULL
;

330 
	}
}

332 
	$domaö_waô_evít
(
uöt32_t
 
domid
, 
libxl_evít
 **
evít_r
)

334 
ªt
;

336 
ªt
 = 
	`libxl_evít_waô
(
˘x
, 
evít_r
, 
LIBXL_EVENTMASK_ALL
, 0,0);

337 i‡(
ªt
) {

338 
	`LOG
("Domaö %u, faûedÅÿgëÉvít, quôtög (rc=%d)", 
domid
, 
ªt
);

339  
ªt
;

341 i‡((*
evít_r
)->
domid
 != domid) {

342 *
ev°r
 = 
	`libxl_evít_to_js⁄
(
˘x
, *
evít_r
);

343 
	`LOG
("INTERNAL PROBLEM - ignoring unexpectedÉvent for"

345 (*
evít_r
)->
domid
, domid, 
ev°r
);

346 
	`‰ì
(
ev°r
);

347 
	`libxl_evít_‰ì
(
˘x
, *
evít_r
);

350  
ªt
;

352 
	}
}

359 
boﬁ
 
	$‰ìmem
(
uöt32_t
 
domid
, 
libxl_domaö_buûd_öfo
 *
b_öfo
)

361 
rc
, 
ªåõs
 = 3;

362 
uöt64_t
 
√ed_memkb
, 
‰ì_memkb
;

364 i‡(!
autobÆlo⁄
)

365  
åue
;

367 
rc
 = 
	`libxl_domaö_√ed_mem‹y
(
˘x
, 
b_öfo
, &
√ed_memkb
);

368 i‡(
rc
 < 0)

369  
Ál£
;

372 
rc
 = 
	`libxl_gë_‰ì_mem‹y
(
˘x
, &
‰ì_memkb
);

373 i‡(
rc
 < 0)

374  
Ál£
;

376 i‡(
‰ì_memkb
 >
√ed_memkb
)

377  
åue
;

379 
rc
 = 
	`libxl_£t_mem‹y_èrgë
(
˘x
, 0, 
‰ì_memkb
 - 
√ed_memkb
, 1, 0);

380 i‡(
rc
 < 0)

381  
Ál£
;

385 
rc
 = 
	`libxl_waô_f‹_mem‹y_èrgë
(
˘x
, 0, 10);

386 i‡(
rc
 < 0)

387  
Ál£
;

389 
ªåõs
--;

390 } 
ªåõs
 > 0);

392  
Ál£
;

393 
	}
}

395 
	$ªlﬂd_domaö_c⁄fig
(
uöt32_t
 
domid
,

396 
libxl_domaö_c⁄fig
 *
d_c⁄fig
)

398 
rc
;

399 
uöt8_t
 *
t_d©a
;

400 
ªt
, 
t_Àn
;

401 
libxl_domaö_c⁄fig
 
d_c⁄fig_√w
;

406 
ªt
 = 
	`libxl_u£rd©a_ªåõve
(
˘x
, 
domid
, "xl", &
t_d©a
, &
t_Àn
);

407 i‡(
ªt
 && 
î∫o
 !
ENOENT
) {

408 
	`LOG
("\"xl\" configuration found but failedÅoÜoad\n");

410 i‡(
t_Àn
 > 0) {

411 
	`LOG
("\"xl\" configuration found, using it\n");

412 
	`libxl_domaö_c⁄fig_di•o£
(
d_c⁄fig
);

413 
	`libxl_domaö_c⁄fig_öô
(
d_c⁄fig
);

414 
	`∑r£_c⁄fig_d©a
("<upd©ed>", (c⁄° *)
t_d©a
,

415 
t_Àn
, 
d_c⁄fig
, 
NULL
);

416 
	`‰ì
(
t_d©a
);

417 
	`libxl_u£rd©a_u∆ök
(
˘x
, 
domid
, "xl");

421 
	`libxl_domaö_c⁄fig_öô
(&
d_c⁄fig_√w
);

422 
rc
 = 
	`libxl_ªåõve_domaö_c⁄figuøti⁄
(
˘x
, 
domid
, &
d_c⁄fig_√w
);

423 i‡(
rc
) {

424 
	`LOG
("failedÅoÑetrieve guest configuration (rc=%d). "

425 "ªusög old c⁄figuøti⁄", 
rc
);

426 
	`libxl_domaö_c⁄fig_di•o£
(&
d_c⁄fig_√w
);

428 
	`libxl_domaö_c⁄fig_di•o£
(
d_c⁄fig
);

430 
	`mem˝y
(
d_c⁄fig
, &
d_c⁄fig_√w
, (
libxl_domaö_c⁄fig
));

432 
	}
}

435 
domaö_ª°¨t_ty≥
 
	$h™dÀ_domaö_dóth
(
uöt32_t
 *
r_domid
,

436 
libxl_evít
 *
evít
,

437 
libxl_domaö_c⁄fig
 *
d_c⁄fig
)

439 
domaö_ª°¨t_ty≥
 
ª°¨t
 = 
DOMAIN_RESTART_NONE
;

440 
libxl_a˘i⁄_⁄_shutdown
 
a˘i⁄
;

442 
evít
->
u
.
domaö_shutdown
.
shutdown_ªas⁄
) {

443 
LIBXL_SHUTDOWN_REASON_POWEROFF
:

444 
a˘i⁄
 = 
d_c⁄fig
->
⁄_powîoff
;

446 
LIBXL_SHUTDOWN_REASON_REBOOT
:

447 
a˘i⁄
 = 
d_c⁄fig
->
⁄_ªboŸ
;

449 
LIBXL_SHUTDOWN_REASON_SUSPEND
:

450 
	`LOG
("Domain has suspended.");

452 
LIBXL_SHUTDOWN_REASON_CRASH
:

453 
a˘i⁄
 = 
d_c⁄fig
->
⁄_¸ash
;

455 
LIBXL_SHUTDOWN_REASON_WATCHDOG
:

456 
a˘i⁄
 = 
d_c⁄fig
->
⁄_w©chdog
;

458 
LIBXL_SHUTDOWN_REASON_SOFT_RESET
:

459 
a˘i⁄
 = 
d_c⁄fig
->
⁄_so·_ª£t
;

462 
	`LOG
("Unknown shutdownÑeason code %d. Destroying domain.",

463 
evít
->
u
.
domaö_shutdown
.
shutdown_ªas⁄
);

464 
a˘i⁄
 = 
LIBXL_ACTION_ON_SHUTDOWN_DESTROY
;

467 
	`LOG
("Action for shutdownÑeason code %d is %s",

468 
evít
->
u
.
domaö_shutdown
.
shutdown_ªas⁄
,

469 
	`gë_a˘i⁄_⁄_shutdown_«me
(
a˘i⁄
));

471 i‡(
a˘i⁄
 =
LIBXL_ACTION_ON_SHUTDOWN_COREDUMP_DESTROY
 ||á˘i⁄ =
LIBXL_ACTION_ON_SHUTDOWN_COREDUMP_RESTART
) {

472 *
c‹efûe
;

473 
rc
;

475 
	`xa•rötf
(&
c‹efûe
, 
XEN_DUMP_DIR
 "/%s", 
d_c⁄fig
->
c_öfo
.
«me
);

476 
	`LOG
("dumpög c‹êtÿ%s", 
c‹efûe
);

477 
rc
 = 
	`libxl_domaö_c‹e_dump
(
˘x
, *
r_domid
, 
c‹efûe
, 
NULL
);

478 i‡(
rc
Ë
	`LOG
("core dump failed (rc=%d).",Ñc);

479 
	`‰ì
(
c‹efûe
);

482 i‡(
a˘i⁄
 =
LIBXL_ACTION_ON_SHUTDOWN_COREDUMP_DESTROY
)

483 
a˘i⁄
 = 
LIBXL_ACTION_ON_SHUTDOWN_DESTROY
;

485 
a˘i⁄
 = 
LIBXL_ACTION_ON_SHUTDOWN_RESTART
;

488 
a˘i⁄
) {

489 
LIBXL_ACTION_ON_SHUTDOWN_PRESERVE
:

492 
LIBXL_ACTION_ON_SHUTDOWN_RESTART_RENAME
:

493 
	`ªlﬂd_domaö_c⁄fig
(*
r_domid
, 
d_c⁄fig
);

494 
ª°¨t
 = 
DOMAIN_RESTART_RENAME
;

497 
LIBXL_ACTION_ON_SHUTDOWN_RESTART
:

498 
	`ªlﬂd_domaö_c⁄fig
(*
r_domid
, 
d_c⁄fig
);

499 
ª°¨t
 = 
DOMAIN_RESTART_NORMAL
;

501 
LIBXL_ACTION_ON_SHUTDOWN_DESTROY
:

502 
	`LOG
("Domain %dÇeedsÅo be cleaned up: destroyingÅhe domain",

503 *
r_domid
);

504 
	`libxl_domaö_de°roy
(
˘x
, *
r_domid
, 0);

505 *
r_domid
 = 
INVALID_DOMID
;

508 
LIBXL_ACTION_ON_SHUTDOWN_SOFT_RESET
:

509 
	`ªlﬂd_domaö_c⁄fig
(*
r_domid
, 
d_c⁄fig
);

510 
ª°¨t
 = 
DOMAIN_RESTART_SOFT_RESET
;

513 
LIBXL_ACTION_ON_SHUTDOWN_COREDUMP_DESTROY
:

514 
LIBXL_ACTION_ON_SHUTDOWN_COREDUMP_RESTART
:

516 
	`ab‹t
();

519  
ª°¨t
;

520 
	}
}

523 
	$¥e£rve_domaö
(
uöt32_t
 *
r_domid
, 
libxl_evít
 *
evít
,

524 
libxl_domaö_c⁄fig
 *
d_c⁄fig
)

526 
time_t
 
now
;

527 
tm
Åm;

528 
°πime
[24];

530 
libxl_uuid
 
√w_uuid
;

532 
rc
;

534 
now
 = 
	`time
(
NULL
);

535 i‡(
now
 =((
time_t
) -1)) {

536 
	`LOG
("FailedÅo get currentÅime for domainÑename");

540 
	`tz£t
();

541 i‡(
	`gmtime_r
(&
now
, &
tm
Ë=
NULL
) {

542 
	`LOG
("FailedÅo convertÅimeÅo UTC");

546 i‡(!
	`°r·ime
(&
°πime
[0], (°πime), "-%Y%m%dT%H%MZ", &
tm
)) {

547 
	`LOG
("FailedÅo formatÅimeásá string");

551 
	`libxl_uuid_gíî©e
(&
√w_uuid
);

553 
	`LOG
("Preserving domain %u %s with suffix%s",

554 *
r_domid
, 
d_c⁄fig
->
c_öfo
.
«me
, 
°πime
);

555 
rc
 = 
	`libxl_domaö_¥e£rve
(
˘x
, *
r_domid
, &
d_c⁄fig
->
c_öfo
,

556 
°πime
, 
√w_uuid
);

562 *
r_domid
 = 
INVALID_DOMID
;

564  
rc
 == 0 ? 1 : 0;

565 
	}
}

567 
	$c⁄sﬁe_chûd_ªp‹t
(
xlchûdnum
 
chûd
)

569 i‡(
	`xl_chûd_pid
(
chûd
))

570 
	`chûd_ªp‹t
(
chûd
);

571 
	}
}

573 
	$vncvõwî
(
uöt32_t
 
domid
, 
aut›ass
)

575 
	`libxl_vncvõwî_exec
(
˘x
, 
domid
, 
aut›ass
);

576 
	`Ârötf
(
°dîr
, "UnableÅoÉxecute vncviewer\n");

578 
	}
}

580 
	$autoc⁄√˘_vncvõwî
(
uöt32_t
 
domid
, 
aut›ass
)

582 
	`c⁄sﬁe_chûd_ªp‹t
(
chûd_vncvõwî
);

584 
pid_t
 
pid
 = 
	`xl_f‹k
(
chûd_vncvõwî
, "vncviewer child");

585 i‡(
pid
)

588 
	`po°f‹k
();

590 
	`¶ìp
(1);

591 
	`vncvõwî
(
domid
, 
aut›ass
);

592 
	`_exô
(
EXIT_FAILURE
);

593 
	}
}

595 
	$acquúe_lock
()

597 
rc
;

598 
Êock
 
Ê
;

601 i‡(
fd_lock
 >= 0)

602  
ERROR_INVAL
;

604 
Ê
.
l_ty≥
 = 
F_WRLCK
;

605 
Ê
.
l_whí˚
 = 
SEEK_SET
;

606 
Ê
.
l_°¨t
 = 0;

607 
Ê
.
l_Àn
 = 0;

608 
fd_lock
 = 
	`›í
(
lockfûe
, 
O_WRONLY
|
O_CREAT
, 
S_IWUSR
);

609 i‡(
fd_lock
 < 0) {

610 
	`Ârötf
(
°dîr
, "ˇ¬Ÿ o≥¿thêlockfûê%†î∫o=%d\n", 
lockfûe
, 
î∫o
);

611  
ERROR_FAIL
;

613 i‡(
	`f˙é
(
fd_lock
, 
F_SETFD
, 
FD_CLOEXEC
) < 0) {

614 
	`˛o£
(
fd_lock
);

615 
	`Ârötf
(
°dîr
, "ˇ¬Ÿ së cl€xe¯tÿlockfûê%†î∫o=%d\n", 
lockfûe
, 
î∫o
);

616  
ERROR_FAIL
;

618 
gë_lock
:

619 
rc
 = 
	`f˙é
(
fd_lock
, 
F_SETLKW
, &
Ê
);

620 i‡(
rc
 < 0 && 
î∫o
 =
EINTR
)

621 
gë_lock
;

622 i‡(
rc
 < 0) {

623 
	`Ârötf
(
°dîr
, "ˇ¬Ÿácquúêlock %†î∫o=%d\n", 
lockfûe
, 
î∫o
);

624 
rc
 = 
ERROR_FAIL
;

626 
rc
 = 0;

627  
rc
;

628 
	}
}

630 
	$ªÀa£_lock
()

632 
rc
;

633 
Êock
 
Ê
;

636 i‡(
fd_lock
 < 0)

637  
ERROR_INVAL
;

639 
ªÀa£_lock
:

640 
Ê
.
l_ty≥
 = 
F_UNLCK
;

641 
Ê
.
l_whí˚
 = 
SEEK_SET
;

642 
Ê
.
l_°¨t
 = 0;

643 
Ê
.
l_Àn
 = 0;

645 
rc
 = 
	`f˙é
(
fd_lock
, 
F_SETLKW
, &
Ê
);

646 i‡(
rc
 < 0 && 
î∫o
 =
EINTR
)

647 
ªÀa£_lock
;

648 i‡(
rc
 < 0) {

649 
	`Ârötf
(
°dîr
, "ˇ¬ŸÑñó£Üock %s,Éºno=%d\n", 
lockfûe
, 
î∫o
);

650 
rc
 = 
ERROR_FAIL
;

652 
rc
 = 0;

653 
	`˛o£
(
fd_lock
);

654 
fd_lock
 = -1;

656  
rc
;

657 
	}
}

660 
	$autoc⁄√˘_c⁄sﬁe
(
libxl_˘x
 *
˘x_ign‹ed
,

661 
libxl_evít
 *
ev
, *
¥iv
)

663 
uöt32_t
 
bldomid
 = 
ev
->
domid
;

664 
nŸify_fd
 = *(*)
¥iv
;

666 
	`libxl_evít_‰ì
(
˘x
, 
ev
);

668 
	`c⁄sﬁe_chûd_ªp‹t
(
chûd_c⁄sﬁe
);

670 
pid_t
 
pid
 = 
	`xl_f‹k
(
chûd_c⁄sﬁe
, "console child");

671 i‡(
pid
)

674 
	`po°f‹k
();

676 
	`¶ìp
(1);

677 
	`libxl_¥im¨y_c⁄sﬁe_exec
(
˘x
, 
bldomid
, 
nŸify_fd
);

679 
	`≥º‹
("xl: unableÅoÉxec console client");

680 
	`_exô
(1);

681 
	}
}

683 
	$¸óã_domaö
(
domaö_¸óã
 *
dom_öfo
)

685 
uöt32_t
 
domid
 = 
INVALID_DOMID
;

687 
libxl_domaö_c⁄fig
 
d_c⁄fig
;

690 
vnode_öfo_∑ømëî
 
vnode_öfo_∑ø
;

691 
vnode_öfo_∑ø
.
vnode_öfos
 = 
NULL
;

693 
debug
 = 
dom_öfo
->debug;

694 
d´m⁄ize
 = 
dom_öfo
->daemonize;

695 
m⁄ô‹
 = 
dom_öfo
->monitor;

696 
∑u£d
 = 
dom_öfo
->paused;

697 
vnˇut›ass
 = 
dom_öfo
->vncautopass;

698 c⁄° *
c⁄fig_fûe
 = 
dom_öfo
->config_file;

699 c⁄° *
exåa_c⁄fig
 = 
dom_öfo
->extra_config;

700 c⁄° *
ª°‹e_fûe
 = 
dom_öfo
->restore_file;

701 c⁄° *
c⁄fig_sour˚
 = 
NULL
;

702 c⁄° *
ª°‹e_sour˚
 = 
NULL
;

703 
migøã_fd
 = 
dom_öfo
->migrate_fd;

704 
boﬁ
 
c⁄fig_ö_js⁄
;

706 
i
;

707 
√ed_d´m⁄
 = 
d´m⁄ize
;

708 
ªt
, 
rc
;

709 
libxl_evgí_domaö_dóth
 *
dóthw
 = 
NULL
;

710 
libxl_evgí_disk_eje˘
 **
diskws
 = 
NULL
;

711 
num_diskws
 = 0;

712 *
c⁄fig_d©a
 = 0;

713 
c⁄fig_Àn
 = 0;

714 
ª°‹e_fd
 = -1;

715 
ª°‹e_fd_to_˛o£
 = -1;

716 
£nd_back_fd
 = -1;

717 c⁄° 
libxl_asyn˝rogªss_how
 *
autoc⁄√˘_c⁄sﬁe_how
;

718 
nŸify_pùe
[2] = { -1, -1 };

719 
ßve_fûe_hódî
 
hdr
;

720 
uöt32_t
 
domid_so·_ª£t
 = 
INVALID_DOMID
;

722 
ª°‹ög
 = (
ª°‹e_fûe
 || (
migøã_fd
 >= 0));

724 
	`libxl_domaö_c⁄fig_öô
(&
d_c⁄fig
);

725 if(
d_c⁄fig
.
b_öfo
.
max_memkb
)

726 
	`¥ötf
("I'm hîê© cª©e_domaö, maxmem=%lu\n",
d_c⁄fig
.
b_öfo
.
max_memkb
);

727 i‡(
ª°‹ög
) {

728 
uöt8_t
 *
›td©a_begö
 = 0;

729 c⁄° 
uöt8_t
 *
›td©a_hîe
 = 0;

730 uni⁄ { 
uöt32_t
 
u32
; 
b
[4]; } 
u32buf
;

731 
uöt32_t
 
badÊags
;

733 i‡(
migøã_fd
 >= 0) {

734 
ª°‹e_sour˚
 = "<incoming migration stream>";

735 
ª°‹e_fd
 = 
migøã_fd
;

736 
£nd_back_fd
 = 
dom_öfo
->send_back_fd;

738 
ª°‹e_sour˚
 = 
ª°‹e_fûe
;

739 
ª°‹e_fd
 = 
	`›í
(
ª°‹e_fûe
, 
O_RDONLY
);

740 i‡(
ª°‹e_fd
 == -1) {

741 
	`Ârötf
(
°dîr
, "C™'à›íÑe°‹êfûe: %s\n", 
	`°ªº‹
(
î∫o
));

742  
ERROR_INVAL
;

744 
ª°‹e_fd_to_˛o£
 = 
ª°‹e_fd
;

745 
rc
 = 
	`libxl_fd_£t_˛€xec
(
˘x
, 
ª°‹e_fd
, 1);

746 i‡(
rc
) Ñc;

749 
	`CHK_ERRNOVAL
(
	`libxl_ªad_exa˘ly
(

750 
˘x
, 
ª°‹e_fd
, &
hdr
, (hdr),

751 
ª°‹e_sour˚
, "header"));

752 i‡(
	`memcmp
(
hdr
.
magic
, 
ßvefûehódî_magic
, (hdr.magic))) {

753 
	`Ârötf
(
°dîr
, "File has wrong magicÇumber -"

755  
ERROR_INVAL
;

757 i‡(
hdr
.
byã‹dî
 !
SAVEFILE_BYTEORDER_VALUE
) {

758 
	`Ârötf
(
°dîr
, "File has wrong byte order\n");

759  
ERROR_INVAL
;

761 
	`Ârötf
(
°dîr
, "LoadingÇew save file %s"

763 " 0x%"
PRIx32
"/0x%"PRIx32"/%"
PRIu32
")\n",

764 
ª°‹e_sour˚
, 
hdr
.
m™d©‹y_Êags
, hdr.
›ti⁄Æ_Êags
,

765 
hdr
.
›ti⁄Æ_d©a_Àn
);

767 
badÊags
 = 
hdr
.
m™d©‹y_Êags
 & ~
XL_MANDATORY_FLAG_ALL
;

768 i‡(
badÊags
) {

769 
	`Ârötf
(
°dîr
, "Savefûêha†m™d©‹y fœg(sË0x%"
PRIx32
" "

771 
badÊags
);

772  
ERROR_INVAL
;

774 i‡(
hdr
.
›ti⁄Æ_d©a_Àn
) {

775 
›td©a_begö
 = 
	`xmÆloc
(
hdr
.
›ti⁄Æ_d©a_Àn
);

776 
	`CHK_ERRNOVAL
(
	`libxl_ªad_exa˘ly
(

777 
˘x
, 
ª°‹e_fd
, 
›td©a_begö
,

778 
hdr
.
›ti⁄Æ_d©a_Àn
, 
ª°‹e_sour˚
,

782 
	#OPTDATA_LEFT
 (
hdr
.
›ti⁄Æ_d©a_Àn
 - (
›td©a_hîe
 - 
›td©a_begö
))

	)

783 
	#WITH_OPTDATA
(
amt
, 
body
) \

784 i‡(
OPTDATA_LEFT
 < (
amt
)) { \

785 
	`Ârötf
(
°dîr
, "SavefileÅruncated.\n"); \

786  
ERROR_INVAL
; \

788 
body
; \

789 
›td©a_hîe
 +(
amt
); \

790 }

	)

792 
›td©a_hîe
 = 
›td©a_begö
;

794 i‡(
OPTDATA_LEFT
) {

795 
	`Ârötf
(
°dîr
, " Savefile contains xl domain config%s\n",

796 !!(
hdr
.
m™d©‹y_Êags
 & 
XL_MANDATORY_FLAG_JSON
)

798 
	`WITH_OPTDATA
(4, {

799 
	`mem˝y
(
u32buf
.
b
, 
›td©a_hîe
, 4);

800 
c⁄fig_Àn
 = 
u32buf
.
u32
;

802 
	`WITH_OPTDATA
(
c⁄fig_Àn
, {

803 
c⁄fig_d©a
 = 
	`xmÆloc
(
c⁄fig_Àn
);

804 
	`mem˝y
(
c⁄fig_d©a
, 
›td©a_hîe
, 
c⁄fig_Àn
);

810 i‡(
c⁄fig_fûe
) {

811 
	`‰ì
(
c⁄fig_d©a
); config_data = 0;

813 i‡(!
	`°rcmp
(
c⁄fig_fûe
, "/dev/null")) {

814 
c⁄fig_Àn
 = 0;

816 
ªt
 = 
	`libxl_ªad_fûe_c⁄ã¡s
(
˘x
, 
c⁄fig_fûe
,

817 &
c⁄fig_d©a
, &
c⁄fig_Àn
);

818 i‡(
ªt
Ë{ 
	`Ârötf
(
°dîr
, "FailedÅoÑead config file: %s: %s\n",

819 
c⁄fig_fûe
, 
	`°ªº‹
(
î∫o
));  
ERROR_FAIL
; }

821 i‡(!
ª°‹ög
 && 
exåa_c⁄fig
 && 
	`°æí
(extra_config)) {

822 i‡(
c⁄fig_Àn
 > 
INT_MAX
 - (
	`°æí
(
exåa_c⁄fig
) + 2 + 1)) {

823 
	`Ârötf
(
°dîr
, "FailedÅoáttachÉxtra configuration\n");

824  
ERROR_FAIL
;

827 
c⁄fig_d©a
 = 
	`xªÆloc
(c⁄fig_d©a, 
c⁄fig_Àn


828 + 
	`°æí
(
exåa_c⁄fig
) + 2 + 1);

829 
c⁄fig_Àn
 +
	`•rötf
(
c⁄fig_d©a
 + config_len, "\n%s\n",

830 
exåa_c⁄fig
);

832 
c⁄fig_sour˚
=
c⁄fig_fûe
;

833 
c⁄fig_ö_js⁄
 = 
Ál£
;

835 i‡(!
c⁄fig_d©a
) {

836 
	`Ârötf
(
°dîr
, "Config fileÇot specifiedánd"

838  
ERROR_INVAL
;

840 
c⁄fig_sour˚
 = "<saved>";

841 
c⁄fig_ö_js⁄
 = !!(
hdr
.
m™d©‹y_Êags
 & 
XL_MANDATORY_FLAG_JSON
);

844 i‡(!
dom_öfo
->
quõt
)

845 
	`Ârötf
(
°dîr
, "P¨sög c⁄fig from %s\n", 
c⁄fig_sour˚
);

847 if(
d_c⁄fig
.
b_öfo
.
max_memkb
)

848 
	`¥ötf
("I'm hîê© cª©e_domaö 1, maxmem=%lu\n",
d_c⁄fig
.
b_öfo
.
max_memkb
);

850 i‡(
c⁄fig_ö_js⁄
) {

851 
	`libxl_domaö_c⁄fig_‰om_js⁄
(
˘x
, &
d_c⁄fig
,

852 (c⁄° *)
c⁄fig_d©a
);

854 
	`¥ötf
("calledÖarse_config_data\n");

855 
	`∑r£_c⁄fig_d©a
(
c⁄fig_sour˚
, 
c⁄fig_d©a
, 
c⁄fig_Àn
, &
d_c⁄fig
, &
vnode_öfo_∑ø
);

857 if(
d_c⁄fig
.
b_öfo
.
max_memkb
)

858 
	`¥ötf
("I'm hîê© cª©e_domaö 2, maxmem=%lu\n",
d_c⁄fig
.
b_öfo
.
max_memkb
);

860 i‡(
migøã_fd
 >= 0) {

861 i‡(
d_c⁄fig
.
c_öfo
.
«me
) {

864 
	`as£π
(!
comm⁄_dom«me
);

866 
comm⁄_dom«me
 = 
d_c⁄fig
.
c_öfo
.
«me
;

867 
d_c⁄fig
.
c_öfo
.
«me
 = 0;

869 
	`xa•rötf
(&
d_c⁄fig
.
c_öfo
.
«me
, "%s--öcomög", 
comm⁄_dom«me
);

870 *
dom_öfo
->
migøti⁄_dom«me_r
 = 
	`°rdup
(
d_c⁄fig
.
c_öfo
.
«me
);

874 i‡(
debug
 || 
dom_öfo
->
dryrun
) {

875 
FILE
 *
cfg_¥öt_fh
 = (
debug
 && !
dom_öfo
->
dryrun
Ë? 
°dîr
 : 
°dout
;

876 i‡(
deÁu…_ouçut_f‹m©
 =
OUTPUT_FORMAT_SXP
) {

877 
	`¥ötf_öfo_£xp
(-1, &
d_c⁄fig
, 
cfg_¥öt_fh
);

879 *
js⁄
 = 
	`libxl_domaö_c⁄fig_to_js⁄
(
˘x
, &
d_c⁄fig
);

880 i‡(!
js⁄
) {

881 
	`Ârötf
(
°dîr
,

883 
	`exô
(1);

885 
	`Âuts
(
js⁄
, 
cfg_¥öt_fh
);

886 
	`‰ì
(
js⁄
);

887 
	`Êush_°ªam
(
cfg_¥öt_fh
);

892 
ªt
 = 0;

893 i‡(
dom_öfo
->
dryrun
)

894 
out
;

896 
°¨t
:

897 
	`as£π
(
domid
 =
INVALID_DOMID
);

899 
rc
 = 
	`acquúe_lock
();

900 i‡(
rc
 < 0)

901 
îr‹_out
;

903 i‡(
domid_so·_ª£t
 =
INVALID_DOMID
) {

904 i‡(!
	`‰ìmem
(
domid
, &
d_c⁄fig
.
b_öfo
)) {

905 
	`Ârötf
(
°dîr
, "failedÅo free memory forÅhe domain\n");

906 
ªt
 = 
ERROR_FAIL
;

907 
îr‹_out
;

911 
libxl_asyn˝rogªss_how
 
autoc⁄√˘_c⁄sﬁe_how_buf
;

912 i‡–
dom_öfo
->
c⁄sﬁe_autoc⁄√˘
 ) {

913 i‡(
	`libxl_pùe
(
˘x
, 
nŸify_pùe
)) {

914 
ªt
 = 
ERROR_FAIL
;

915 
îr‹_out
;

917 
autoc⁄√˘_c⁄sﬁe_how_buf
.
ˇŒback
 = 
autoc⁄√˘_c⁄sﬁe
;

918 
autoc⁄√˘_c⁄sﬁe_how_buf
.
f‹_ˇŒback
 = &
nŸify_pùe
[1];

919 
autoc⁄√˘_c⁄sﬁe_how
 = &
autoc⁄√˘_c⁄sﬁe_how_buf
;

921 
autoc⁄√˘_c⁄sﬁe_how
 = 0;

924 i‡–
ª°‹ög
 ) {

925 
libxl_domaö_ª°‹e_∑øms
 
∑øms
;

927 
	`libxl_domaö_ª°‹e_∑øms_öô
(&
∑øms
);

929 
∑øms
.
checkpoöãd_°ªam
 = 
dom_öfo
->checkpointed_stream;

930 
∑øms
.
°ªam_vîsi⁄
 =

931 (
hdr
.
m™d©‹y_Êags
 & 
XL_MANDATORY_FLAG_STREAMv2
) ? 2 : 1;

932 
∑øms
.
cﬁo_¥oxy_s¸ùt
 = 
dom_öfo
->colo_proxy_script;

933 
	`libxl_defboﬁ_£t
(&
∑øms
.
u£r•a˚_cﬁo_¥oxy
,

934 
dom_öfo
->
u£r•a˚_cﬁo_¥oxy
);

936 
ªt
 = 
	`libxl_domaö_¸óã_ª°‹e
(
˘x
, &
d_c⁄fig
,

937 &
domid
, 
ª°‹e_fd
,

938 
£nd_back_fd
, &
∑øms
,

939 0, 
autoc⁄√˘_c⁄sﬁe_how
);

941 
	`libxl_domaö_ª°‹e_∑øms_di•o£
(&
∑øms
);

947 
ª°‹ög
 = 0;

948 } i‡(
domid_so·_ª£t
 !
INVALID_DOMID
) {

950 
ªt
 = 
	`libxl_domaö_so·_ª£t
(
˘x
, &
d_c⁄fig
, 
domid_so·_ª£t
,

951 0, 
autoc⁄√˘_c⁄sﬁe_how
);

952 
domid
 = 
domid_so·_ª£t
;

953 
domid_so·_ª£t
 = 
INVALID_DOMID
;

955 
ªt
 = 
	`libxl_domaö_¸óã_√w
(
˘x
, &
d_c⁄fig
, &
domid
,

956 0, 
autoc⁄√˘_c⁄sﬁe_how
);

959 
	`vnuma_wrôe_to_xs
(
domid
, 
vnode_öfo_∑ø
.
num_nodes
, vnode_öfo_∑ø.
vnode_öfos
);

962 
j
 = 0; j < 
vnode_öfo_∑ø
.
num_nodes
; j++){

963 if–
vnode_öfo_∑ø
.
vnode_öfos
 &&

964 
vnode_öfo_∑ø
.
vnode_öfos
[
j
].
v˝u
){

965 
	`‰ì
(
vnode_öfo_∑ø
.
vnode_öfos
[
j
].
v˝u
);

968 i‡(
vnode_öfo_∑ø
.
vnode_öfos
)

969 
	`‰ì
(
vnode_öfo_∑ø
.
vnode_öfos
);

971 i‡–
ªt
 )

972 
îr‹_out
;

974 
	`ªÀa£_lock
();

976 i‡(
ª°‹e_fd_to_˛o£
 >= 0) {

977 i‡(
	`˛o£
(
ª°‹e_fd_to_˛o£
))

978 
	`Ârötf
(
°dîr
, "FailedÅo closeÑestoring file, fd %d,Érrno %d\n",

979 
ª°‹e_fd_to_˛o£
, 
î∫o
);

980 
ª°‹e_fd_to_˛o£
 = -1;

983 i‡(
autoc⁄√˘_c⁄sﬁe_how
) {

984 
buf
[1];

985 
r
;

992 
r
 = 
	`ªad
(
nŸify_pùe
[0], 
buf
, 1);

993 } 
r
 =-1 && 
î∫o
 =
EINTR
);

995 i‡(
r
 == -1)

996 
	`Ârötf
(
°dîr
,

998 
	`°ªº‹
(
î∫o
));

999 i‡(
r
 == 0)

1000 
	`Ârötf
(
°dîr
, "Got EOF from xenconsoleÇotification fd\n");

1001 i‡(
r
 =1 && 
buf
[0] != 0x00)

1002 
	`Ârötf
(
°dîr
, "Got unexpectedÑesponse from xenconsole: %#x\n",

1003 
buf
[0]);

1005 
	`˛o£
(
nŸify_pùe
[0]);

1006 
	`˛o£
(
nŸify_pùe
[1]);

1007 
nŸify_pùe
[0] =Çotify_pipe[1] = -1;

1010 i‡(!
∑u£d
)

1011 
	`libxl_domaö_u≈au£
(
˘x
, 
domid
);

1013 
ªt
 = 
domid
;

1014 i‡(!
d´m⁄ize
 && !
m⁄ô‹
)

1015 
out
;

1017 i‡(
dom_öfo
->
vnc
)

1018 
	`autoc⁄√˘_vncvõwî
(
domid
, 
vnˇut›ass
);

1020 i‡(
√ed_d´m⁄
) {

1021 *
«me
;

1023 
	`xa•rötf
(&
«me
, "xl-%s", 
d_c⁄fig
.
c_öfo
.name);

1024 
ªt
 = 
	`do_d´m⁄ize
(
«me
, 
NULL
);

1025 
	`‰ì
(
«me
);

1026 i‡(
ªt
) {

1027 
ªt
 = (ªà=1Ë? 
domid
 :Ñet;

1028 
out
;

1030 
√ed_d´m⁄
 = 0;

1032 
	`LOG
("Waiting for domain %s (domid %u)Åo die [pid %ld]",

1033 
d_c⁄fig
.
c_öfo
.
«me
, 
domid
, ()
	`gëpid
());

1035 
ªt
 = 
	`libxl_evíabÀ_domaö_dóth
(
˘x
, 
domid
, 0, &
dóthw
);

1036 i‡(
ªt
Ë
out
;

1038 i‡(!
diskws
) {

1039 
diskws
 = 
	`xmÆloc
((*diskwsË* 
d_c⁄fig
.
num_disks
);

1040 
i
 = 0; i < 
d_c⁄fig
.
num_disks
; i++)

1041 
diskws
[
i
] = 
NULL
;

1042 
num_diskws
 = 
d_c⁄fig
.
num_disks
;

1044 
i
 = 0; i < 
num_diskws
; i++) {

1045 i‡(
d_c⁄fig
.
disks
[
i
].
ªmovabÀ
) {

1046 
ªt
 = 
	`libxl_evíabÀ_disk_eje˘
(
˘x
, 
domid
, 
d_c⁄fig
.
disks
[
i
].
vdev
,

1047 0, &
diskws
[
i
]);

1048 i‡(
ªt
Ë
out
;

1052 
libxl_evít
 *
evít
;

1053 
ªt
 = 
	`domaö_waô_evít
(
domid
, &
evít
);

1054 i‡(
ªt
Ë
out
;

1056 
evít
->
ty≥
) {

1058 
LIBXL_EVENT_TYPE_DOMAIN_SHUTDOWN
:

1059 
	`LOG
("Domaö %u ha†shuàdown,Ñós⁄ codê%d 0x%x", 
domid
,

1060 
evít
->
u
.
domaö_shutdown
.
shutdown_ªas⁄
,

1061 
evít
->
u
.
domaö_shutdown
.
shutdown_ªas⁄
);

1062 
	`h™dÀ_domaö_dóth
(&
domid
, 
evít
, &
d_c⁄fig
)) {

1063 
DOMAIN_RESTART_SOFT_RESET
:

1064 
domid_so·_ª£t
 = 
domid
;

1065 
domid
 = 
INVALID_DOMID
;

1067 
DOMAIN_RESTART_RENAME
:

1068 i‡(
domid_so·_ª£t
 =
INVALID_DOMID
 &&

1069 !
	`¥e£rve_domaö
(&
domid
, 
evít
, &
d_c⁄fig
)) {

1070 
	`libxl_evít_‰ì
(
˘x
, 
evít
);

1072 
ªt
 = -1;

1073 
out
;

1077 
DOMAIN_RESTART_NORMAL
:

1078 
	`libxl_evít_‰ì
(
˘x
, 
evít
);

1079 
	`libxl_evdißbÀ_domaö_dóth
(
˘x
, 
dóthw
);

1080 
dóthw
 = 
NULL
;

1081 
	`evdißbÀ_disk_eje˘s
(
diskws
, 
num_diskws
);

1082 
	`‰ì
(
diskws
);

1083 
diskws
 = 
NULL
;

1084 
num_diskws
 = 0;

1086 !(
ªt
 = 
	`libxl_evít_check
(
˘x
, &
evít
,

1087 
LIBXL_EVENTMASK_ALL
, 0,0))) {

1088 
	`libxl_evít_‰ì
(
˘x
, 
evít
);

1090 i‡(
ªt
 !
ERROR_NOT_READY
) {

1091 
	`LOG
("warning,Üibxl_event_check (cleanup) failed (rc=%d)",

1092 
ªt
);

1099 
dom_öfo
->
c⁄sﬁe_autoc⁄√˘
 = 0;

1102 
∑u£d
 = 0;

1103 i‡(
comm⁄_dom«me


1104 && 
	`°rcmp
(
d_c⁄fig
.
c_öfo
.
«me
, 
comm⁄_dom«me
)) {

1105 
d_c⁄fig
.
c_öfo
.
«me
 = 
	`°rdup
(
comm⁄_dom«me
);

1112 
	`LOG
("Done. RebootingÇow");

1113 
	`¶ìp
(2);

1114 
°¨t
;

1116 
DOMAIN_RESTART_NONE
:

1117 
	`LOG
("Done. ExitingÇow");

1118 
	`libxl_evít_‰ì
(
˘x
, 
evít
);

1119 
ªt
 = 0;

1120 
out
;

1123 
	`ab‹t
();

1126 
LIBXL_EVENT_TYPE_DOMAIN_DEATH
:

1127 
	`LOG
("Domaö %u ha†bì¿de°royed.", 
domid
);

1128 
	`libxl_evít_‰ì
(
˘x
, 
evít
);

1129 
ªt
 = 0;

1130 
out
;

1132 
LIBXL_EVENT_TYPE_DISK_EJECT
:

1134 
	`libxl_cdrom_ö£π
(
˘x
, 
domid
, &
evít
->
u
.
disk_eje˘
.
disk
, 
NULL
);

1138 *
ev°r
 = 
	`libxl_evít_to_js⁄
(
˘x
, 
evít
);

1139 
	`LOG
("warning, got unexpectedÉventÅype %d,Évent=%s",

1140 
evít
->
ty≥
, 
ev°r
);

1141 
	`‰ì
(
ev°r
);

1144 
	`libxl_evít_‰ì
(
˘x
, 
evít
);

1147 
îr‹_out
:

1148 
	`ªÀa£_lock
();

1149 i‡(
	`libxl_domid_vÆid_gue°
(
domid
)) {

1150 
	`libxl_domaö_de°roy
(
˘x
, 
domid
, 0);

1151 
domid
 = 
INVALID_DOMID
;

1154 
out
:

1155 i‡(
ª°‹e_fd_to_˛o£
 >= 0) {

1156 i‡(
	`˛o£
(
ª°‹e_fd_to_˛o£
))

1157 
	`Ârötf
(
°dîr
, "FailedÅo closeÑestoring file, fd %d,Érrno %d\n",

1158 
ª°‹e_fd_to_˛o£
, 
î∫o
);

1159 
ª°‹e_fd_to_˛o£
 = -1;

1162 i‡(
logfûe
 != 2)

1163 
	`˛o£
(
logfûe
);

1165 
	`libxl_domaö_c⁄fig_di•o£
(&
d_c⁄fig
);

1167 
	`‰ì
(
c⁄fig_d©a
);

1169 
	`c⁄sﬁe_chûd_ªp‹t
(
chûd_c⁄sﬁe
);

1171 i‡(
dóthw
)

1172 
	`libxl_evdißbÀ_domaö_dóth
(
˘x
, 
dóthw
);

1173 i‡(
diskws
) {

1174 
	`evdißbÀ_disk_eje˘s
(
diskws
, 
d_c⁄fig
.
num_disks
);

1175 
	`‰ì
(
diskws
);

1182 i‡–
d´m⁄ize
 && !
√ed_d´m⁄
 )

1183 
	`exô
(
ªt
);

1185  
ªt
;

1186 
	}
}

1188 
	$maö_¸óã
(
¨gc
, **
¨gv
)

1190 c⁄° *
fûíame
 = 
NULL
;

1191 
domaö_¸óã
 
dom_öfo
;

1192 
∑u£d
 = 0, 
debug
 = 0, 
d´m⁄ize
 = 1, 
c⁄sﬁe_autoc⁄√˘
 = 0,

1193 
quõt
 = 0, 
m⁄ô‹
 = 1, 
vnc
 = 0, 
vnˇut›ass
 = 0;

1194 
›t
, 
rc
;

1195 
›ti⁄
 
›ts
[] = {

1201 
COMMON_LONG_OPTS


1204 
dom_öfo
.
exåa_c⁄fig
 = 
NULL
;

1206 i‡(
¨gv
[1] &&árgv[1][0] !'-' && !
	`°rchr
(argv[1], '=')) {

1207 
fûíame
 = 
¨gv
[1];

1208 
¨gc
--; 
¨gv
++;

1211 
	`SWITCH_FOREACH_OPT
(
›t
, "Fnqf:pcdeVA", 
›ts
, "create", 0) {

1213 
fûíame
 = 
›èrg
;

1216 
∑u£d
 = 1;

1219 
c⁄sﬁe_autoc⁄√˘
 = 1;

1222 
debug
 = 1;

1225 
d´m⁄ize
 = 0;

1228 
d´m⁄ize
 = 0;

1229 
m⁄ô‹
 = 0;

1232 
dryrun_⁄ly
 = 1;

1235 
quõt
 = 1;

1238 
vnc
 = 1;

1241 
vnc
 = 
vnˇut›ass
 = 1;

1245 
	`mem£t
(&
dom_öfo
, 0, (dom_info));

1247 ; 
›töd
 < 
¨gc
; optind++) {

1248 i‡(
	`°rchr
(
¨gv
[
›töd
], '='Ë!
NULL
) {

1249 
	`°rög_ªÆloc_≠≥nd
(&
dom_öfo
.
exåa_c⁄fig
, 
¨gv
[
›töd
]);

1250 
	`°rög_ªÆloc_≠≥nd
(&
dom_öfo
.
exåa_c⁄fig
, "\n");

1251 } i‡(!
fûíame
) {

1252 
fûíame
 = 
¨gv
[
›töd
];

1254 
	`hñp
("create");

1255 
	`‰ì
(
dom_öfo
.
exåa_c⁄fig
);

1260 
dom_öfo
.
debug
 = debug;

1261 
dom_öfo
.
d´m⁄ize
 = daemonize;

1262 
dom_öfo
.
m⁄ô‹
 = monitor;

1263 
dom_öfo
.
∑u£d
 =Öaused;

1264 
dom_öfo
.
dryrun
 = 
dryrun_⁄ly
;

1265 
dom_öfo
.
quõt
 = quiet;

1266 
dom_öfo
.
c⁄fig_fûe
 = 
fûíame
;

1267 
dom_öfo
.
migøã_fd
 = -1;

1268 
dom_öfo
.
£nd_back_fd
 = -1;

1269 
dom_öfo
.
vnc
 = vnc;

1270 
dom_öfo
.
vnˇut›ass
 = vncautopass;

1271 
dom_öfo
.
c⁄sﬁe_autoc⁄√˘
 = console_autoconnect;

1273 
rc
 = 
	`¸óã_domaö
(&
dom_öfo
);

1274 i‡(
rc
 < 0) {

1275 
	`‰ì
(
dom_öfo
.
exåa_c⁄fig
);

1276  -
rc
;

1279 
	`‰ì
(
dom_öfo
.
exåa_c⁄fig
);

1281 
	}
}

	@xl_vtpm.c

15 
	~<°dlib.h
>

17 
	~<libxl.h
>

18 
	~<libxl_utûs.h
>

19 
	~<libxlutû.h
>

21 
	~"xl.h
"

22 
	~"xl_utûs.h
"

23 
	~"xl_∑r£.h
"

25 
	$maö_vçm©èch
(
¨gc
, **
¨gv
)

27 
›t
;

28 
libxl_devi˚_vçm
 
vçm
;

29 *
›¨g
;

30 
uöt32_t
 
domid
;

32 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "vtpm-attach", 1) {

36 i‡(
	`libxl_domaö_quÆifõr_to_domid
(
˘x
, 
¨gv
[
›töd
], &
domid
) < 0) {

37 
	`Ârötf
(
°dîr
, "%†i†™ invÆid domaö idítifõr\n", 
¨gv
[
›töd
]);

40 ++
›töd
;

42 
	`libxl_devi˚_vçm_öô
(&
vçm
);

43 
¨gv
 +
›töd
, 
¨gc
 -= optind;árgc > 0; ++argv, --argc) {

44 i‡(
	`MATCH_OPTION
("uuid", *
¨gv
, 
›¨g
)) {

45 if(
	`libxl_uuid_‰om_°rög
(&(
vçm
.
uuid
), 
›¨g
)) {

46 
	`Ârötf
(
°dîr
, "InvÆid uuid s≥cifõd (%s)\n", 
›¨g
);

49 } i‡(
	`MATCH_OPTION
("backíd", *
¨gv
, 
›¨g
)) {

50 
	`ª∂a˚_°rög
(&
vçm
.
backíd_dom«me
, 
›¨g
);

52 
	`Ârötf
(
°dîr
, "uƒecognizedárgumíà`%s'\n", *
¨gv
);

57 if(
dryrun_⁄ly
) {

58 * 
js⁄
 = 
	`libxl_devi˚_vçm_to_js⁄
(
˘x
, &
vçm
);

59 
	`¥ötf
("vçm: %s\n", 
js⁄
);

60 
	`‰ì
(
js⁄
);

61 
	`libxl_devi˚_vçm_di•o£
(&
vçm
);

62 i‡(
	`„º‹
(
°dout
Ë|| 
	`fÊush
(°dout)Ë{ 
	`≥º‹
("°dout"); 
	`exô
(-1); }

66 i‡(
	`libxl_devi˚_vçm_add
(
˘x
, 
domid
, &
vçm
, 0)) {

67 
	`Ârötf
(
°dîr
, "libxl_device_vtpm_add failed.\n");

70 
	`libxl_devi˚_vçm_di•o£
(&
vçm
);

72 
	}
}

74 
	$maö_vçmli°
(
¨gc
, **
¨gv
)

76 
›t
;

77 
libxl_devi˚_vçm
 *
vçms
;

78 
libxl_vçmöfo
 
vçmöfo
;

79 
nb
, 
i
;

81 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "vtpm-list", 1) {

86 
	`¥ötf
("%-3s %-2s %-36s %-6s %-5s %-6s %-5s %-10s\n",

88 
¨gv
 +
›töd
, 
¨gc
 -= optind;árgc > 0; --argc, ++argv) {

89 
uöt32_t
 
domid
;

90 i‡(
	`libxl_domaö_quÆifõr_to_domid
(
˘x
, *
¨gv
, &
domid
) < 0) {

91 
	`Ârötf
(
°dîr
, "%†i†™ invÆid domaö idítifõr\n", *
¨gv
);

94 i‡(!(
vçms
 = 
	`libxl_devi˚_vçm_li°
(
˘x
, 
domid
, &
nb
))) {

97 
i
 = 0; i < 
nb
; ++i) {

98 if(!
	`libxl_devi˚_vçm_gëöfo
(
˘x
, 
domid
, &
vçms
[
i
], &
vçmöfo
)) {

100 
	`¥ötf
("%-3d %-2d " 
LIBXL_UUID_FMT
 " %6d %5d %6d %8d %-30s\n",

101 
vçmöfo
.
devid
, vçmöfo.
backíd_id
,

102 
	`LIBXL_UUID_BYTES
(
vçmöfo
.
uuid
),

103 
vçmöfo
.
devid
, vçmöfo.
°©e
, vçmöfo.
evtch
,

104 
vçmöfo
.
ºef
, vçmöfo.
backíd
);

106 
	`libxl_vçmöfo_di•o£
(&
vçmöfo
);

109 
	`libxl_devi˚_vçm_li°_‰ì
(
vçms
, 
nb
);

112 
	}
}

114 
	$maö_vçmdëach
(
¨gc
, **
¨gv
)

116 
uöt32_t
 
domid
;

117 
›t
, 
rc
=0;

118 
libxl_devi˚_vçm
 
vçm
;

119 
libxl_uuid
 
uuid
;

121 
	`SWITCH_FOREACH_OPT
(
›t
, "", 
NULL
, "vtpm-detach", 2) {

125 
domid
 = 
	`föd_domaö
(
¨gv
[
›töd
]);

127 i‡–
	`libxl_uuid_‰om_°rög
(&
uuid
, 
¨gv
[
›töd
+1])) {

128 i‡(
	`libxl_devid_to_devi˚_vçm
(
˘x
, 
domid
, 
	`©oi
(
¨gv
[
›töd
+1]), &
vçm
)) {

129 
	`Ârötf
(
°dîr
, "Unknow¿devi˚ %s.\n", 
¨gv
[
›töd
+1]);

133 i‡(
	`libxl_uuid_to_devi˚_vçm
(
˘x
, 
domid
, &
uuid
, &
vçm
)) {

134 
	`Ârötf
(
°dîr
, "Unknow¿devi˚ %s.\n", 
¨gv
[
›töd
+1]);

138 
rc
 = 
	`libxl_devi˚_vçm_ªmove
(
˘x
, 
domid
, &
vçm
, 0);

139 i‡(
rc
) {

140 
	`Ârötf
(
°dîr
, "libxl_device_vtpm_remove failed.\n");

142 
	`libxl_devi˚_vçm_di•o£
(&
vçm
);

143  
rc
;

144 
	}
}

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


91 #i‡
deföed
 
__˝lu•lus


92 
	#as£π
(
ex¥
) \

93 (
°©ic_ˇ°
 <
boﬁ
> (
ex¥
) \

95 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ñi‡!
deföed
 
__GNUC__
 || deföed 
__STRICT_ANSI__


97 
	#as£π
(
ex¥
) \

98 ((
ex¥
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

107 
	#as£π
(
ex¥
) \

108 ((Ë ((
ex¥
Ë? 1 : 0), 
	`__exãnsi⁄__
 ({ \

109 i‡(
ex¥
) \

112 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
); \

113 
	}
}))

	)

116 #ifdef 
__USE_GNU


117 
	#as£π_≥º‹
(
î∫um
) \

118 (!(
î∫um
) \

119 ? 
	`__ASSERT_VOID_CAST
 (0) \

120 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

128 #i‡
deföed
 
__˝lu•lus
 ? 
__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

129 
	#__ASSERT_FUNCTION
 
__exãnsi⁄__
 
__PRETTY_FUNCTION__


	)

131 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

132 
	#__ASSERT_FUNCTION
 
__func__


	)

134 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

141 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


142 #unde‡
°©ic_as£π


143 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

108 
__ex˘y≥
 (
iß um
);

109 
__ex˘y≥
 (
ißÕha
);

110 
__ex˘y≥
 (
is˙ål
);

111 
__ex˘y≥
 (
isdigô
);

112 
__ex˘y≥
 (
i¶owî
);

113 
__ex˘y≥
 (
isgøph
);

114 
__ex˘y≥
 (
i•röt
);

115 
__ex˘y≥
 (
i•un˘
);

116 
__ex˘y≥
 (
is•a˚
);

117 
__ex˘y≥
 (
isuµî
);

118 
__ex˘y≥
 (
isxdigô
);

122 
	$tﬁowî
 (
__c
Ë
__THROW
;

125 
	$touµî
 (
__c
Ë
__THROW
;

129 #ifdef 
__USE_ISOC99


130 
	`__ex˘y≥
 (
isbœnk
);

133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE


173 #ifde‡
__is˘y≥_f


174 
	$__is˘y≥_f
 (
Ænum
)

175 
	$__is˘y≥_f
 (
Æpha
)

176 
	$__is˘y≥_f
 (
˙ål
)

177 
	$__is˘y≥_f
 (
digô
)

178 
	$__is˘y≥_f
 (
lowî
)

179 
	$__is˘y≥_f
 (
gøph
)

180 
	$__is˘y≥_f
 (
¥öt
)

181 
	$__is˘y≥_f
 (
pun˘
)

182 
	$__is˘y≥_f
 (
•a˚
)

183 
	$__is˘y≥_f
 (
uµî
)

184 
	$__is˘y≥_f
 (
xdigô
)

185 #ifde‡
__USE_ISOC99


186 
	$__is˘y≥_f
 (
bœnk
)

188 #ñi‡
deföed
 
__is˘y≥


189 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

190 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

191 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

192 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

193 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

194 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

195 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

196 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

197 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

198 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

199 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

200 #ifde‡
__USE_ISOC99


201 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

205 #ifde‡
__USE_EXTERN_INLINES


206 
__exã∫_ölöe
 

207 
	`__NTH
 (
	$tﬁowî
 (
__c
))

209  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

210 
	}
}

212 
__exã∫_ölöe
 

213 
__NTH
 (
	$touµî
 (
__c
))

215  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

216 
	}
}

219 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


220 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

221 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

224 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


225 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

226 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

228 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

229 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

235 #ifde‡
__USE_XOPEN2K8


237 
	~<bôs/ty≥s/loˇÀ_t.h
>

241 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

242 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

244 
	#__ex˘y≥_l
(
«me
) \

245 
	`«me
 (, 
loˇÀ_t
Ë
__THROW


	)

251 
__ex˘y≥_l
 (
iß um_l
);

252 
__ex˘y≥_l
 (
ißÕha_l
);

253 
__ex˘y≥_l
 (
is˙ål_l
);

254 
__ex˘y≥_l
 (
isdigô_l
);

255 
__ex˘y≥_l
 (
i¶owî_l
);

256 
__ex˘y≥_l
 (
isgøph_l
);

257 
__ex˘y≥_l
 (
i•röt_l
);

258 
__ex˘y≥_l
 (
i•un˘_l
);

259 
__ex˘y≥_l
 (
is•a˚_l
);

260 
__ex˘y≥_l
 (
isuµî_l
);

261 
__ex˘y≥_l
 (
isxdigô_l
);

263 
__ex˘y≥_l
 (
isbœnk_l
);

267 
	$__tﬁowî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$tﬁowî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

271 
	$__touµî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

272 
	$touµî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

274 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


275 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

276 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

277 
	#__touµî_l
(
c
, 
loˇÀ
) \

278 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

279 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

280 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

284 #i‚de‡
__NO_CTYPE


285 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

286 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

287 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

288 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

289 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

290 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

291 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

292 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

293 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

294 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

295 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

297 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

299 #ifde‡
__USE_MISC


300 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

301 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

304 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

305 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

306 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

307 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

308 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

309 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

310 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

311 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

312 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

313 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

314 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

316 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

318 #ifde‡
__USE_MISC


319 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

320 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

327 
__END_DECLS


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #ifde‡
__USE_XOPEN2K8


75 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 
	~<bôs/°©.h
>

80 
	#S_IFMT
 
__S_IFMT


	)

81 
	#S_IFDIR
 
__S_IFDIR


	)

82 
	#S_IFCHR
 
__S_IFCHR


	)

83 
	#S_IFBLK
 
__S_IFBLK


	)

84 
	#S_IFREG
 
__S_IFREG


	)

85 #ifde‡
__S_IFIFO


86 
	#S_IFIFO
 
__S_IFIFO


	)

88 #ifde‡
__S_IFLNK


89 
	#S_IFLNK
 
__S_IFLNK


	)

91 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


92 
	#S_IFSOCK
 
__S_IFSOCK


	)

97 
	#S_ISUID
 
__S_ISUID


	)

98 
	#S_ISGID
 
__S_ISGID


	)

100 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


102 
	#S_ISVTX
 
__S_ISVTX


	)

105 
	#S_IRUSR
 
__S_IREAD


	)

106 
	#S_IWUSR
 
__S_IWRITE


	)

107 
	#S_IXUSR
 
__S_IEXEC


	)

109 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

111 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

112 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

113 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

115 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

117 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

118 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

119 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

121 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

124 #ifdef 
__USE_MISC


125 #i‚de‡
R_OK


128 
	#R_OK
 4

	)

129 
	#W_OK
 2

	)

130 
	#X_OK
 1

	)

131 
	#F_OK
 0

	)

136 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


137 
	#SEEK_SET
 0

	)

138 
	#SEEK_CUR
 1

	)

139 
	#SEEK_END
 2

	)

147 #i‚de‡
__USE_FILE_OFFSET64


148 
f˙é
 (
__fd
, 
__cmd
, ...);

150 #ifde‡
__REDIRECT


151 
__REDIRECT
 (
f˙é
, (
__fd
, 
__cmd
, ...), 
f˙é64
);

153 
	#f˙é
 
f˙é64


	)

156 #ifde‡
__USE_LARGEFILE64


157 
f˙é64
 (
__fd
, 
__cmd
, ...);

167 #i‚de‡
__USE_FILE_OFFSET64


168 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

170 #ifde‡
__REDIRECT


171 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

172 
	`__n⁄nuŒ
 ((1));

174 
	#›í
 
›í64


	)

177 #ifde‡
__USE_LARGEFILE64


178 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

181 #ifde‡
__USE_ATFILE


191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

193 
	`__n⁄nuŒ
 ((2));

195 #ifde‡
__REDIRECT


196 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

197 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

199 
	#›í©
 
›í©64


	)

202 #ifde‡
__USE_LARGEFILE64


203 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

204 
	`__n⁄nuŒ
 ((2));

213 #i‚de‡
__USE_FILE_OFFSET64


214 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

216 #ifde‡
__REDIRECT


217 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

218 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

220 
	#¸ót
 
¸ót64


	)

223 #ifde‡
__USE_LARGEFILE64


224 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

227 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

228 && !
deföed
 
__USE_POSIX
))

237 
	#F_ULOCK
 0

	)

238 
	#F_LOCK
 1

	)

239 
	#F_TLOCK
 2

	)

240 
	#F_TEST
 3

	)

242 #i‚de‡
__USE_FILE_OFFSET64


243 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

245 #ifde‡
__REDIRECT


246 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

248 
	#lockf
 
lockf64


	)

251 #ifde‡
__USE_LARGEFILE64


252 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

256 #ifde‡
__USE_XOPEN2K


259 #i‚de‡
__USE_FILE_OFFSET64


260 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

261 
__advi£
Ë
__THROW
;

263 #ifde‡
__REDIRECT_NTH


264 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

265 
__off64_t
 
__Àn
, 
__advi£
),

266 
posix_Ádvi£64
);

268 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

271 #ifde‡
__USE_LARGEFILE64


272 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

273 
__advi£
Ë
__THROW
;

281 #i‚de‡
__USE_FILE_OFFSET64


282 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

284 #ifde‡
__REDIRECT


285 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

286 
__off64_t
 
__Àn
),

287 
posix_ÁŒoˇã64
);

289 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

292 #ifde‡
__USE_LARGEFILE64


293 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

299 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

300 && 
deföed
 
__va_¨g_∑ck_Àn


301 
	~<bôs/f˙é2.h
>

304 
__END_DECLS


	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


22 
	#_GETOPT_H
 1

	)

24 
	~<„©uªs.h
>

31 #i‚de‡
__gë›t_¨gv_c⁄°


32 
	#__gë›t_¨gv_c⁄°
 c⁄°

	)

35 
	~<bôs/gë›t_c‹e.h
>

36 
	~<bôs/gë›t_ext.h
>

	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

130 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


131 #i‚de‡
LLONG_MIN


132 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

134 #i‚de‡
LLONG_MAX


135 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

137 #i‚de‡
ULLONG_MAX


138 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

145 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

146 #i‚de‡
CHAR_WIDTH


147 
	#CHAR_WIDTH
 8

	)

149 #i‚de‡
SCHAR_WIDTH


150 
	#SCHAR_WIDTH
 8

	)

152 #i‚de‡
UCHAR_WIDTH


153 
	#UCHAR_WIDTH
 8

	)

155 #i‚de‡
SHRT_WIDTH


156 
	#SHRT_WIDTH
 16

	)

158 #i‚de‡
USHRT_WIDTH


159 
	#USHRT_WIDTH
 16

	)

161 #i‚de‡
INT_WIDTH


162 
	#INT_WIDTH
 32

	)

164 #i‚de‡
UINT_WIDTH


165 
	#UINT_WIDTH
 32

	)

167 #i‚de‡
LONG_WIDTH


168 
	#LONG_WIDTH
 
__WORDSIZE


	)

170 #i‚de‡
ULONG_WIDTH


171 
	#ULONG_WIDTH
 
__WORDSIZE


	)

173 #i‚de‡
LLONG_WIDTH


174 
	#LLONG_WIDTH
 64

	)

176 #i‚de‡
ULLONG_WIDTH


177 
	#ULLONG_WIDTH
 64

	)

181 #ifdef 
__USE_POSIX


183 
	~<bôs/posix1_lim.h
>

186 #ifdef 
__USE_POSIX2


187 
	~<bôs/posix2_lim.h
>

190 #ifdef 
__USE_XOPEN


191 
	~<bôs/x›í_lim.h
>

	@/usr/include/regex.h

20 #i‚de‡
_REGEX_H


21 
	#_REGEX_H
 1

	)

23 
	~<sys/ty≥s.h
>

26 #ifde‡
__˝lu•lus


32 #ifde‡
_GNU_SOURCE


33 
	#__USE_GNU
 1

	)

36 #ifde‡
_REGEX_LARGE_OFFSETS


45 
size_t
 
	t__ª_size_t
;

49 
size_t
 
	t__ª_l⁄g_size_t
;

55 
	t__ª_size_t
;

56 
	t__ª_l⁄g_size_t
;

64 
	ts_ªg_t
;

65 
	ta˘ive_ªg_t
;

72 
	tªg_sy¡ax_t
;

74 #ifde‡
__USE_GNU


77 
	#RE_BACKSLASH_ESCAPE_IN_LISTS
 ((Ë1)

	)

82 
	#RE_BK_PLUS_QM
 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 << 1)

	)

88 
	#RE_CHAR_CLASSES
 (
RE_BK_PLUS_QM
 << 1)

	)

102 
	#RE_CONTEXT_INDEP_ANCHORS
 (
RE_CHAR_CLASSES
 << 1)

	)

110 
	#RE_CONTEXT_INDEP_OPS
 (
RE_CONTEXT_INDEP_ANCHORS
 << 1)

	)

114 
	#RE_CONTEXT_INVALID_OPS
 (
RE_CONTEXT_INDEP_OPS
 << 1)

	)

118 
	#RE_DOT_NEWLINE
 (
RE_CONTEXT_INVALID_OPS
 << 1)

	)

122 
	#RE_DOT_NOT_NULL
 (
RE_DOT_NEWLINE
 << 1)

	)

126 
	#RE_HAT_LISTS_NOT_NEWLINE
 (
RE_DOT_NOT_NULL
 << 1)

	)

131 
	#RE_INTERVALS
 (
RE_HAT_LISTS_NOT_NEWLINE
 << 1)

	)

135 
	#RE_LIMITED_OPS
 (
RE_INTERVALS
 << 1)

	)

139 
	#RE_NEWLINE_ALT
 (
RE_LIMITED_OPS
 << 1)

	)

144 
	#RE_NO_BK_BRACES
 (
RE_NEWLINE_ALT
 << 1)

	)

148 
	#RE_NO_BK_PARENS
 (
RE_NO_BK_BRACES
 << 1)

	)

152 
	#RE_NO_BK_REFS
 (
RE_NO_BK_PARENS
 << 1)

	)

156 
	#RE_NO_BK_VBAR
 (
RE_NO_BK_REFS
 << 1)

	)

162 
	#RE_NO_EMPTY_RANGES
 (
RE_NO_BK_VBAR
 << 1)

	)

166 
	#RE_UNMATCHED_RIGHT_PAREN_ORD
 (
RE_NO_EMPTY_RANGES
 << 1)

	)

170 
	#RE_NO_POSIX_BACKTRACKING
 (
RE_UNMATCHED_RIGHT_PAREN_ORD
 << 1)

	)

174 
	#RE_NO_GNU_OPS
 (
RE_NO_POSIX_BACKTRACKING
 << 1)

	)

182 
	#RE_DEBUG
 (
RE_NO_GNU_OPS
 << 1)

	)

187 
	#RE_INVALID_INTERVAL_ORD
 (
RE_DEBUG
 << 1)

	)

191 
	#RE_ICASE
 (
RE_INVALID_INTERVAL_ORD
 << 1)

	)

196 
	#RE_CARET_ANCHORS_HERE
 (
RE_ICASE
 << 1)

	)

200 
	#RE_CONTEXT_INVALID_DUP
 (
RE_CARET_ANCHORS_HERE
 << 1)

	)

204 
	#RE_NO_SUB
 (
RE_CONTEXT_INVALID_DUP
 << 1)

	)

211 
ªg_sy¡ax_t
 
ª_sy¡ax_›ti⁄s
;

213 #ifde‡
__USE_GNU


218 
	#RE_SYNTAX_EMACS
 0

	)

220 
	#RE_SYNTAX_AWK
 \

221 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DOT_NOT_NULL
 \

222 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

223 | 
RE_NO_BK_VBAR
 | 
RE_NO_EMPTY_RANGES
 \

224 | 
RE_DOT_NEWLINE
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

225 | 
RE_CHAR_CLASSES
 \

226 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
 | 
RE_NO_GNU_OPS
)

	)

228 
	#RE_SYNTAX_GNU_AWK
 \

229 ((
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

230 | 
RE_INVALID_INTERVAL_ORD
) \

231 & ~(
RE_DOT_NOT_NULL
 | 
RE_CONTEXT_INDEP_OPS
 \

232 | 
RE_CONTEXT_INVALID_OPS
 ))

	)

234 
	#RE_SYNTAX_POSIX_AWK
 \

235 (
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

236 | 
RE_INTERVALS
 | 
RE_NO_GNU_OPS
 \

237 | 
RE_INVALID_INTERVAL_ORD
)

	)

239 
	#RE_SYNTAX_GREP
 \

240 ((
RE_SYNTAX_POSIX_BASIC
 | 
RE_NEWLINE_ALT
) \

241 & ~(
RE_CONTEXT_INVALID_DUP
 | 
RE_DOT_NOT_NULL
))

	)

243 
	#RE_SYNTAX_EGREP
 \

244 ((
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_INVALID_INTERVAL_ORD
 | 
RE_NEWLINE_ALT
) \

245 & ~(
RE_CONTEXT_INVALID_OPS
 | 
RE_DOT_NOT_NULL
))

	)

248 
	#RE_SYNTAX_POSIX_EGREP
 \

249 
RE_SYNTAX_EGREP


	)

252 
	#RE_SYNTAX_ED
 
RE_SYNTAX_POSIX_BASIC


	)

254 
	#RE_SYNTAX_SED
 
RE_SYNTAX_POSIX_BASIC


	)

257 
	#_RE_SYNTAX_POSIX_COMMON
 \

258 (
RE_CHAR_CLASSES
 | 
RE_DOT_NEWLINE
 | 
RE_DOT_NOT_NULL
 \

259 | 
RE_INTERVALS
 | 
RE_NO_EMPTY_RANGES
)

	)

261 
	#RE_SYNTAX_POSIX_BASIC
 \

262 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_BK_PLUS_QM
 | 
RE_CONTEXT_INVALID_DUP
)

	)

267 
	#RE_SYNTAX_POSIX_MINIMAL_BASIC
 \

268 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_LIMITED_OPS
)

	)

270 
	#RE_SYNTAX_POSIX_EXTENDED
 \

271 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

272 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_NO_BK_BRACES
 \

273 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_VBAR
 \

274 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

278 
	#RE_SYNTAX_POSIX_MINIMAL_EXTENDED
 \

279 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

280 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_NO_BK_BRACES
 \

281 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

282 | 
RE_NO_BK_VBAR
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

288 #ifde‡
_REGEX_INCLUDE_LIMITS_H


289 
	~<limôs.h
>

291 #ifde‡
RE_DUP_MAX


292 #unde‡
RE_DUP_MAX


302 
	#RE_DUP_MAX
 (0x7fff)

	)

310 
	#REG_EXTENDED
 1

	)

314 
	#REG_ICASE
 (1 << 1)

	)

319 
	#REG_NEWLINE
 (1 << 2)

	)

323 
	#REG_NOSUB
 (1 << 3)

	)

333 
	#REG_NOTBOL
 1

	)

336 
	#REG_NOTEOL
 (1 << 1)

	)

340 
	#REG_STARTEND
 (1 << 2)

	)

348 
	g_REG_ENOSYS
 = -1,

349 
	g_REG_NOERROR
 = 0,

350 
	g_REG_NOMATCH
,

354 
	g_REG_BADPAT
,

355 
	g_REG_ECOLLATE
,

356 
	g_REG_ECTYPE
,

357 
	g_REG_EESCAPE
,

358 
	g_REG_ESUBREG
,

359 
	g_REG_EBRACK
,

360 
	g_REG_EPAREN
,

361 
	g_REG_EBRACE
,

362 
	g_REG_BADBR
,

363 
	g_REG_ERANGE
,

364 
	g_REG_ESPACE
,

365 
	g_REG_BADRPT
,

368 
	g_REG_EEND
,

369 
	g_REG_ESIZE
,

370 
	g_REG_ERPAREN


371 } 
	tªg_îrcode_t
;

373 #i‡
deföed
 
_XOPEN_SOURCE
 || deföed 
__USE_XOPEN2K


374 
	#REG_ENOSYS
 
_REG_ENOSYS


	)

376 
	#REG_NOERROR
 
_REG_NOERROR


	)

377 
	#REG_NOMATCH
 
_REG_NOMATCH


	)

378 
	#REG_BADPAT
 
_REG_BADPAT


	)

379 
	#REG_ECOLLATE
 
_REG_ECOLLATE


	)

380 
	#REG_ECTYPE
 
_REG_ECTYPE


	)

381 
	#REG_EESCAPE
 
_REG_EESCAPE


	)

382 
	#REG_ESUBREG
 
_REG_ESUBREG


	)

383 
	#REG_EBRACK
 
_REG_EBRACK


	)

384 
	#REG_EPAREN
 
_REG_EPAREN


	)

385 
	#REG_EBRACE
 
_REG_EBRACE


	)

386 
	#REG_BADBR
 
_REG_BADBR


	)

387 
	#REG_ERANGE
 
_REG_ERANGE


	)

388 
	#REG_ESPACE
 
_REG_ESPACE


	)

389 
	#REG_BADRPT
 
_REG_BADRPT


	)

390 
	#REG_EEND
 
_REG_EEND


	)

391 
	#REG_ESIZE
 
_REG_ESIZE


	)

392 
	#REG_ERPAREN
 
_REG_ERPAREN


	)

400 #i‚de‡
RE_TRANSLATE_TYPE


401 
	#__RE_TRANSLATE_TYPE
 *

	)

402 #ifde‡
__USE_GNU


403 
	#RE_TRANSLATE_TYPE
 
__RE_TRANSLATE_TYPE


	)

407 #ifde‡
__USE_GNU


408 
	#__REPB_PREFIX
(
«me
Ë
	)
name

410 
	#__REPB_PREFIX
(
«me
Ë
__
##
	)
name

413 
	sª_∑âîn_buf„r


417 
ª_dÁ_t
 *
__REPB_PREFIX
(
buf„r
);

420 
__ª_l⁄g_size_t
 
__REPB_PREFIX
(
Æloˇãd
);

423 
__ª_l⁄g_size_t
 
__REPB_PREFIX
(
u£d
);

426 
ªg_sy¡ax_t
 
__REPB_PREFIX
(
sy¡ax
);

431 *
__REPB_PREFIX
(
Á°m≠
);

437 
__RE_TRANSLATE_TYPE
 
__REPB_PREFIX
(
å™¶©e
);

440 
size_t
 
	gª_nsub
;

446 
__REPB_PREFIX
(
ˇn_be_nuŒ
) : 1;

452 #ifde‡
__USE_GNU


453 
	#REGS_UNALLOCATED
 0

	)

454 
	#REGS_REALLOCATE
 1

	)

455 
	#REGS_FIXED
 2

	)

457 
__REPB_PREFIX
(
ªgs_Æloˇãd
) : 2;

461 
__REPB_PREFIX
(
Á°m≠_accuøã
) : 1;

465 
__REPB_PREFIX
(
no_sub
) : 1;

469 
__REPB_PREFIX
(
nŸ_bﬁ
) : 1;

472 
__REPB_PREFIX
(
nŸ_eﬁ
) : 1;

475 
__REPB_PREFIX
(
√wlöe_™ch‹
) : 1;

478 
ª_∑âîn_buf„r
 
	tªgex_t
;

481 #ifde‡
_REGEX_LARGE_OFFSETS


486 
ssize_t
 
	tªgoff_t
;

490 
	tªgoff_t
;

494 #ifde‡
__USE_GNU


497 
	sª_ªgi°îs


499 
__ª_size_t
 
	gnum_ªgs
;

500 
ªgoff_t
 *
	g°¨t
;

501 
ªgoff_t
 *
	gíd
;

508 #i‚de‡
RE_NREGS


509 
	#RE_NREGS
 30

	)

519 
ªgoff_t
 
	grm_so
;

520 
ªgoff_t
 
	grm_eo
;

521 } 
	tªgm©ch_t
;

525 #ifde‡
__USE_GNU


528 
ªg_sy¡ax_t
 
ª_£t_sy¡ax
 (ªg_sy¡ax_à
__sy¡ax
);

538 c⁄° *
ª_compûe_∑âîn
 (c⁄° *
__∑âîn
, 
size_t
 
__Àngth
,

539 
ª_∑âîn_buf„r
 *
__buf„r
);

545 
ª_compûe_Á°m≠
 (
ª_∑âîn_buf„r
 *
__buf„r
);

553 
ªgoff_t
 
ª_£¨ch
 (
ª_∑âîn_buf„r
 *
__buf„r
,

554 c⁄° *
__Såög
, 
ªgoff_t
 
__Àngth
,

555 
ªgoff_t
 
__°¨t
,Ñegoff_à
__ønge
,

556 
ª_ªgi°îs
 *
__ªgs
);

561 
ªgoff_t
 
ª_£¨ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

562 c⁄° *
__°rög1
, 
ªgoff_t
 
__Àngth1
,

563 c⁄° *
__°rög2
, 
ªgoff_t
 
__Àngth2
,

564 
ªgoff_t
 
__°¨t
,Ñegoff_à
__ønge
,

565 
ª_ªgi°îs
 *
__ªgs
,

566 
ªgoff_t
 
__°›
);

571 
ªgoff_t
 
ª_m©ch
 (
ª_∑âîn_buf„r
 *
__buf„r
,

572 c⁄° *
__Såög
, 
ªgoff_t
 
__Àngth
,

573 
ªgoff_t
 
__°¨t
, 
ª_ªgi°îs
 *
__ªgs
);

577 
ªgoff_t
 
ª_m©ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

578 c⁄° *
__°rög1
, 
ªgoff_t
 
__Àngth1
,

579 c⁄° *
__°rög2
, 
ªgoff_t
 
__Àngth2
,

580 
ªgoff_t
 
__°¨t
, 
ª_ªgi°îs
 *
__ªgs
,

581 
ªgoff_t
 
__°›
);

596 
ª_£t_ªgi°îs
 (
ª_∑âîn_buf„r
 *
__buf„r
,

597 
ª_ªgi°îs
 *
__ªgs
,

598 
__ª_size_t
 
__num_ªgs
,

599 
ªgoff_t
 *
__°¨ts
,Ñegoff_à*
__íds
);

602 #i‡
deföed
 
_REGEX_RE_COMP
 || (deföed 
_LIBC
 && deföed 
__USE_MISC
)

603 #i‚de‡
_CRAY


605 *
ª_comp
 (const *);

606 
ª_exec
 (const *);

616 #i‚de‡
_Re°ri˘_


617 #i‡
deföed
 
__ª°ri˘
 || 2 < 
__GNUC__
 + (95 <
__GNUC_MINOR__
)

618 
	#_Re°ri˘_
 
__ª°ri˘


	)

619 #ñi‡199901L <
__STDC_VERSION__
 || 
deföed
 
ª°ri˘


620 
	#_Re°ri˘_
 
ª°ri˘


	)

622 
	#_Re°ri˘_


	)

627 #i‚de‡
_Re°ri˘_¨r_


628 #ifde‡
__ª°ri˘_¨r


629 
	#_Re°ri˘_¨r_
 
__ª°ri˘_¨r


	)

630 #ñi‡((199901L <
__STDC_VERSION__
 || 3 < 
__GNUC__
 + (1 <
__GNUC_MINOR__
)) \

631 && !
deföed
 
	g__GNUG__
)

632 
	#_Re°ri˘_¨r_
 
_Re°ri˘_


	)

634 
	#_Re°ri˘_¨r_


	)

639 
ªgcomp
 (
ªgex_t
 *
_Re°ri˘_
 
__¥eg
,

640 c⁄° *
_Re°ri˘_
 
__∑âîn
,

641 
__cÊags
);

643 
ªgexec
 (c⁄° 
ªgex_t
 *
_Re°ri˘_
 
__¥eg
,

644 c⁄° *
_Re°ri˘_
 
__Såög
, 
size_t
 
__nm©ch
,

645 
ªgm©ch_t
 
__pm©ch
[
_Re°ri˘_¨r_
],

646 
__eÊags
);

648 
size_t
 
ªgîr‹
 (
__îrcode
, c⁄° 
ªgex_t
 *
_Re°ri˘_
 
__¥eg
,

649 *
_Re°ri˘_
 
__îrbuf
, 
size_t
 
__îrbuf_size
);

651 
ªg‰ì
 (
ªgex_t
 *
__¥eg
);

654 #ifde‡
__˝lu•lus


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


23 
	#_SIGNAL_H


	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

30 
	~<bôs/signum.h
>

32 
	~<bôs/ty≥s/sig_©omic_t.h
>

34 #i‡
deföed
 
__USE_POSIX


35 
	~<bôs/ty≥s/sig£t_t.h
>

38 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


39 #i‚de‡
__pid_t_deföed


40 
__pid_t
 
	tpid_t
;

41 
	#__pid_t_deföed


	)

43 #ifde‡
__USE_XOPEN


45 #i‚de‡
__uid_t_deföed


46 
__uid_t
 
	tuid_t
;

47 
	#__uid_t_deföed


	)

51 #ifde‡
__USE_POSIX199309


53 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

56 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


57 
	~<bôs/ty≥s/sigöfo_t.h
>

58 
	~<bôs/sigöfo-c⁄°s.h
>

61 #ifde‡
__USE_MISC


62 
	~<bôs/ty≥s/sigvÆ_t.h
>

65 #ifde‡
__USE_POSIX199309


66 
	~<bôs/ty≥s/sigevít_t.h
>

67 
	~<bôs/sigevít-c⁄°s.h
>

72 (*
	t__sigh™dÀr_t
) ();

77 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

78 
__THROW
;

79 #ifde‡
__USE_GNU


80 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

87 #ifde‡
__USE_MISC


88 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

89 
__THROW
;

92 #ifde‡
__REDIRECT_NTH


93 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

94 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

95 
__sysv_sig«l
);

97 
	#sig«l
 
__sysv_sig«l


	)

101 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8


104 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

105 
__THROW
;

111 #ifde‡
__USE_POSIX


112 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

115 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


119 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

123 
	$øi£
 (
__sig
Ë
__THROW
;

125 #ifde‡
__USE_MISC


127 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

128 
__THROW
;

129 
	$gsig«l
 (
__sig
Ë
__THROW
;

132 #ifde‡
__USE_XOPEN2K8


134 
	`psig«l
 (
__sig
, c⁄° *
__s
);

137 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

149 #ifde‡
__USE_XOPEN_EXTENDED


150 #ifde‡
__GNUC__


151 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

160 #ifde‡
__USE_MISC


167 
	#sigmask
(
sig
Ë(()(1u << ((sigË- 1)))

	)

170 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

173 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

176 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

180 #ifde‡
__USE_MISC


181 
	#NSIG
 
_NSIG


	)

184 #ifde‡
__USE_GNU


185 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

189 #ifde‡
__USE_MISC


190 
__sigh™dÀr_t
 
	tsig_t
;

193 #ifde‡
__USE_POSIX


196 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

202 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

205 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

208 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

209 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #ifde‡
__USE_GNU


213 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

216 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

217 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

220 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

221 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

226 
	~<bôs/siga˘i⁄.h
>

229 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

230 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

237 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

240 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

241 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

244 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__USE_POSIX199506


252 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

253 
	`__n⁄nuŒ
 ((1, 2));

256 #ifde‡
__USE_POSIX199309


261 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

262 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

269 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

270 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

271 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

272 
	`__n⁄nuŒ
 ((1));

276 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

277 
__THROW
;

282 #ifde‡
__USE_MISC


286 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

287 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

291 
	~<bôs/sigc⁄ãxt.h
>

294 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

299 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


300 
	#__√ed_size_t


	)

301 
	~<°ddef.h
>

303 
	~<bôs/ty≥s/°ack_t.h
>

304 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


306 
	~<sys/uc⁄ãxt.h
>

310 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_MISC


314 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

316 
	~<bôs/sig°ack.h
>

317 
	~<bôs/ss_Êags.h
>

321 
	$sigÆt°ack
 (c⁄° 
°ack_t
 *
__ª°ri˘
 
__ss
,

322 
°ack_t
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

325 #i‡((
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

326 || 
deföed
 
__USE_MISC
)

327 
	~<bôs/ty≥s/°ru˘_sig°ack.h
>

330 #i‡((
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

331 || 
deföed
 
__USE_MISC
)

335 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

336 
__THROW
 
__©åibuã_dïªˇãd__
;

339 #ifde‡
__USE_XOPEN_EXTENDED


343 
	$sighﬁd
 (
__sig
Ë
__THROW
;

346 
	$sigªl£
 (
__sig
Ë
__THROW
;

349 
	$sigign‹e
 (
__sig
Ë
__THROW
;

352 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

355 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


358 
	~<bôs/±hªadty≥s.h
>

359 
	~<bôs/sigthªad.h
>

366 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

368 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

370 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

371 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

373 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


24 
	#_STDIO_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	#__√ed___va_li°


	)

36 
	~<°d¨g.h
>

38 
	~<bôs/ty≥s.h
>

39 
	~<bôs/ty≥s/__Âos_t.h
>

40 
	~<bôs/ty≥s/__Âos64_t.h
>

41 
	~<bôs/ty≥s/__FILE.h
>

42 
	~<bôs/ty≥s/FILE.h
>

43 
	~<bôs/ty≥s/°ru˘_FILE.h
>

45 #ifde‡
__USE_GNU


46 
	~<bôs/ty≥s/cookõ_io_fun˘i⁄s_t.h
>

49 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


50 #ifde‡
__GNUC__


51 #i‚de‡
_VA_LIST_DEFINED


52 
__gnuc_va_li°
 
	tva_li°
;

53 
	#_VA_LIST_DEFINED


	)

56 
	~<°d¨g.h
>

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__off_t_deföed


62 #i‚de‡
__USE_FILE_OFFSET64


63 
__off_t
 
	toff_t
;

65 
__off64_t
 
	toff_t
;

67 
	#__off_t_deföed


	)

69 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


70 
__off64_t
 
	toff64_t
;

71 
	#__off64_t_deföed


	)

75 #ifde‡
__USE_XOPEN2K8


76 #i‚de‡
__ssize_t_deföed


77 
__ssize_t
 
	tssize_t
;

78 
	#__ssize_t_deföed


	)

83 #i‚de‡
__USE_FILE_OFFSET64


84 
__Âos_t
 
	tÂos_t
;

86 
__Âos64_t
 
	tÂos_t
;

88 #ifde‡
__USE_LARGEFILE64


89 
__Âos64_t
 
	tÂos64_t
;

93 
	#_IOFBF
 0

	)

94 
	#_IOLBF
 1

	)

95 
	#_IONBF
 2

	)

99 
	#BUFSIZ
 8192

	)

104 
	#EOF
 (-1)

	)

109 
	#SEEK_SET
 0

	)

110 
	#SEEK_CUR
 1

	)

111 
	#SEEK_END
 2

	)

112 #ifde‡
__USE_GNU


113 
	#SEEK_DATA
 3

	)

114 
	#SEEK_HOLE
 4

	)

118 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


120 
	#P_tmpdú
 "/tmp"

	)

133 
	~<bôs/°dio_lim.h
>

137 
FILE
 *
°dö
;

138 
FILE
 *
°dout
;

139 
FILE
 *
°dîr
;

141 
	#°dö
 
°dö


	)

142 
	#°dout
 
°dout


	)

143 
	#°dîr
 
°dîr


	)

146 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

148 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

150 #ifde‡
__USE_ATFILE


152 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

153 c⁄° *
__√w
Ë
__THROW
;

156 #ifde‡
__USE_GNU


158 
	#RENAME_NOREPLACE
 (1 << 0)

	)

159 
	#RENAME_EXCHANGE
 (1 << 1)

	)

160 
	#RENAME_WHITEOUT
 (1 << 2)

	)

164 
	$ª«mót2
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

165 c⁄° *
__√w
, 
__Êags
Ë
__THROW
;

172 #i‚de‡
__USE_FILE_OFFSET64


173 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

175 #ifde‡
__REDIRECT


176 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

178 
	#tmpfûe
 
tmpfûe64


	)

182 #ifde‡
__USE_LARGEFILE64


183 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

187 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

189 #ifde‡
__USE_MISC


192 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

196 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


204 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

205 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

213 
	`f˛o£
 (
FILE
 *
__°ªam
);

218 
	`fÊush
 (
FILE
 *
__°ªam
);

220 #ifde‡
__USE_MISC


227 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

230 #ifde‡
__USE_GNU


237 
	`f˛o£Æl
 ();

241 #i‚de‡
__USE_FILE_OFFSET64


246 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

247 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

252 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

253 c⁄° *
__ª°ri˘
 
__modes
,

254 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

256 #ifde‡
__REDIRECT


257 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

258 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

259 
__wur
;

260 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

261 c⁄° *
__ª°ri˘
 
__modes
,

262 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

263 
__wur
;

265 
	#f›í
 
f›í64


	)

266 
	#‰e›í
 
‰e›í64


	)

269 #ifde‡
__USE_LARGEFILE64


270 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

271 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

272 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
,

274 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

277 #ifdef 
__USE_POSIX


279 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

282 #ifdef 
__USE_GNU


285 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

286 c⁄° *
__ª°ri˘
 
__modes
,

287 
cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

290 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

292 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

293 
__THROW
 
__wur
;

298 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

304 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

308 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

309 
__modes
, 
size_t
 
__n
Ë
__THROW
;

311 #ifdef 
__USE_MISC


314 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

315 
size_t
 
__size
Ë
__THROW
;

318 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

326 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

327 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

332 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

334 
	$•rötf
 (*
__ª°ri˘
 
__s
,

335 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

341 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

342 
__gnuc_va_li°
 
__¨g
);

347 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
);

349 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

350 
__gnuc_va_li°
 
__¨g
Ë
__THROWNL
;

352 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


354 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

355 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

356 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

358 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

359 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

360 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

363 #i‡
	`__GLIBC_USE
 (
LIB_EXT2
)

366 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

367 
__gnuc_va_li°
 
__¨g
)

368 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

369 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

370 c⁄° *
__ª°ri˘
 
__fmt
, ...)

371 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

372 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

373 c⁄° *
__ª°ri˘
 
__fmt
, ...)

374 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

377 #ifde‡
__USE_XOPEN2K8


379 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

380 
__gnuc_va_li°
 
__¨g
)

381 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

382 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

383 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

391 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

392 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

397 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

399 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

400 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

405 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
Ë&& !
deföed
 
__LDBL_COMPAT


406 #ifde‡
__REDIRECT


407 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

408 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

409 
__isoc99_fsˇnf
Ë
__wur
;

410 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

411 
__isoc99_sˇnf
Ë
__wur
;

412 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

413 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

414 
__isoc99_ssˇnf
);

416 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

417 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

418 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

419 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

420 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

421 
	#fsˇnf
 
__isoc99_fsˇnf


	)

422 
	#sˇnf
 
__isoc99_sˇnf


	)

423 
	#ssˇnf
 
__isoc99_ssˇnf


	)

427 #ifdef 
__USE_ISOC99


432 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

433 
__gnuc_va_li°
 
__¨g
)

434 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

440 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

441 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

444 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

445 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

446 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

449 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

450 #i‡
deföed
 
__REDIRECT
 && !deföed 
__LDBL_COMPAT


451 
	`__REDIRECT
 (
vfsˇnf
,

452 (
FILE
 *
__ª°ri˘
 
__s
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
),

454 
__isoc99_vfsˇnf
)

455 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

456 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

457 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

458 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

459 
	`__REDIRECT_NTH
 (
vssˇnf
,

460 (c⁄° *
__ª°ri˘
 
__s
,

461 c⁄° *
__ª°ri˘
 
__f‹m©
,

462 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

463 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

464 #ñi‡!
deföed
 
__REDIRECT


465 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

466 c⁄° *
__ª°ri˘
 
__f‹m©
,

467 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

468 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

469 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

470 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

471 c⁄° *
__ª°ri˘
 
__f‹m©
,

472 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

473 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

474 
	#vsˇnf
 
__isoc99_vsˇnf


	)

475 
	#vssˇnf
 
__isoc99_vssˇnf


	)

485 
	`fgëc
 (
FILE
 *
__°ªam
);

486 
	`gëc
 (
FILE
 *
__°ªam
);

492 
	`gëch¨
 ();

494 #ifde‡
__USE_POSIX199506


499 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

500 
	`gëch¨_u∆ocked
 ();

503 #ifde‡
__USE_MISC


510 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

521 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

522 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

528 
	`putch¨
 (
__c
);

530 #ifde‡
__USE_MISC


537 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

540 #ifde‡
__USE_POSIX199506


545 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

546 
	`putch¨_u∆ocked
 (
__c
);

550 #i‡
deföed
 
__USE_MISC
 \

551 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

553 
	`gëw
 (
FILE
 *
__°ªam
);

556 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

564 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

565 
__wur
;

567 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

577 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

580 #ifde‡
__USE_GNU


587 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

588 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

592 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

603 
__ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

604 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

605 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

606 
__ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

607 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

608 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

616 
__ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

617 
size_t
 *
__ª°ri˘
 
__n
,

618 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

626 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

632 
	`puts
 (c⁄° *
__s
);

639 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

646 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

647 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

652 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

653 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

655 #ifde‡
__USE_GNU


662 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

663 
FILE
 *
__ª°ri˘
 
__°ªam
);

666 #ifde‡
__USE_MISC


673 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

674 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

676 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

684 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

689 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

694 
	`ªwöd
 (
FILE
 *
__°ªam
);

701 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


702 #i‚de‡
__USE_FILE_OFFSET64


707 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

712 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

714 #ifde‡
__REDIRECT


715 
	`__REDIRECT
 (
f£eko
,

716 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

717 
f£eko64
);

718 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

720 
	#f£eko
 
f£eko64


	)

721 
	#·ñlo
 
·ñlo64


	)

726 #i‚de‡
__USE_FILE_OFFSET64


731 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

736 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

738 #ifde‡
__REDIRECT


739 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

740 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

741 
	`__REDIRECT
 (
f£ços
,

742 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

744 
	#fgëpos
 
fgëpos64


	)

745 
	#f£ços
 
f£ços64


	)

749 #ifde‡
__USE_LARGEFILE64


750 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

751 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

752 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

753 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

757 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

759 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

761 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

763 #ifde‡
__USE_MISC


765 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

766 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

767 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

775 
	`≥º‹
 (c⁄° *
__s
);

781 
	~<bôs/sys_îæi°.h
>

784 #ifdef 
__USE_POSIX


786 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

789 #ifde‡
__USE_MISC


791 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

795 #ifde‡
__USE_POSIX2


800 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

806 
	`p˛o£
 (
FILE
 *
__°ªam
);

810 #ifdef 
__USE_POSIX


812 *
	$˘îmid
 (*
__s
Ë
__THROW
;

816 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


818 *
	`cu£rid
 (*
__s
);

822 #ifdef 
__USE_GNU


823 
ob°ack
;

826 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

827 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

828 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

829 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

830 c⁄° *
__ª°ri˘
 
__f‹m©
,

831 
__gnuc_va_li°
 
__¨gs
)

832 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

836 #ifde‡
__USE_POSIX199506


840 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

844 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

847 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

850 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


853 
	~<bôs/gë›t_posix.h
>

858 
	`__uÊow
 (
FILE
 *);

859 
	`__ovîÊow
 (
FILE
 *, );

863 #ifde‡
__USE_EXTERN_INLINES


864 
	~<bôs/°dio.h
>

866 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


867 
	~<bôs/°dio2.h
>

869 #ifde‡
__LDBL_COMPAT


870 
	~<bôs/°dio-ldbl.h
>

873 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

25 
	~<bôs/libc-hódî-°¨t.h
>

28 
	#__√ed_size_t


	)

29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

31 
	~<°ddef.h
>

33 
	g__BEGIN_DECLS


35 
	#_STDLIB_H
 1

	)

37 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


39 
	~<bôs/waôÊags.h
>

40 
	~<bôs/waô°©us.h
>

43 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

44 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

45 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

46 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

47 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

48 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

49 #ifde‡
__WIFCONTINUED


50 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

55 
	~<bôs/Êﬂä.h
>

60 
	mquŸ
;

61 
	mªm
;

62 } 
	tdiv_t
;

65 #i‚de‡
__ldiv_t_deföed


68 
	mquŸ
;

69 
	mªm
;

70 } 
	tldiv_t
;

71 
	#__ldiv_t_deföed
 1

	)

74 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


76 
__exãnsi⁄__
 struct

78 
	mquŸ
;

79 
	mªm
;

80 } 
	tŒdiv_t
;

81 
	#__Œdiv_t_deföed
 1

	)

86 
	#RAND_MAX
 2147483647

	)

91 
	#EXIT_FAILURE
 1

	)

92 
	#EXIT_SUCCESS
 0

	)

96 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

97 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

101 
	$©of
 (c⁄° *
__≈å
)

102 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

104 
	$©oi
 (c⁄° *
__≈å
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

107 
	$©ﬁ
 (c⁄° *
__≈å
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

110 #ifde‡
__USE_ISOC99


112 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

113 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

117 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

118 **
__ª°ri˘
 
__íd±r
)

119 
__THROW
 
	`__n⁄nuŒ
 ((1));

121 #ifdef 
__USE_ISOC99


123 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

124 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

126 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

127 **
__ª°ri˘
 
__íd±r
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1));

133 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

135 **
__ª°ri˘
 
__íd±r
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1));

139 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

140 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

141 **
__ª°ri˘
 
__íd±r
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1));

145 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

146 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

147 **
__ª°ri˘
 
__íd±r
)

148 
__THROW
 
	`__n⁄nuŒ
 ((1));

151 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

152 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

153 **
__ª°ri˘
 
__íd±r
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1));

157 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

158 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

159 **
__ª°ri˘
 
__íd±r
)

160 
__THROW
 
	`__n⁄nuŒ
 ((1));

163 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

164 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

169 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

170 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

171 **
__ª°ri˘
 
__íd±r
)

172 
__THROW
 
	`__n⁄nuŒ
 ((1));

176 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1));

180 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

181 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

182 
__THROW
 
	`__n⁄nuŒ
 ((1));

184 #ifde‡
__USE_MISC


186 
__exãnsi⁄__


187 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

191 
__exãnsi⁄__


192 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

193 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

194 
__THROW
 
	`__n⁄nuŒ
 ((1));

197 #ifde‡
__USE_ISOC99


199 
__exãnsi⁄__


200 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

204 
__exãnsi⁄__


205 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

206 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

207 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

212 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

213 
__f
)

214 
__THROW
 
	`__n⁄nuŒ
 ((3));

216 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

217 
__f
)

218 
__THROW
 
	`__n⁄nuŒ
 ((3));

220 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

221 
__f
)

222 
__THROW
 
	`__n⁄nuŒ
 ((3));

225 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

226 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

227 
_Flﬂt16
 
__f
)

228 
__THROW
 
	`__n⁄nuŒ
 ((3));

231 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

232 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

233 
_Flﬂt32
 
__f
)

234 
__THROW
 
	`__n⁄nuŒ
 ((3));

237 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

238 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

239 
_Flﬂt64
 
__f
)

240 
__THROW
 
	`__n⁄nuŒ
 ((3));

243 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

244 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

245 
_Flﬂt128
 
__f
)

246 
__THROW
 
	`__n⁄nuŒ
 ((3));

249 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

250 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

251 
_Flﬂt32x
 
__f
)

252 
__THROW
 
	`__n⁄nuŒ
 ((3));

255 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

256 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

257 
_Flﬂt64x
 
__f
)

258 
__THROW
 
	`__n⁄nuŒ
 ((3));

261 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

262 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

263 
_Flﬂt128x
 
__f
)

264 
__THROW
 
	`__n⁄nuŒ
 ((3));

268 #ifde‡
__USE_GNU


272 
	~<bôs/ty≥s/loˇÀ_t.h
>

274 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

275 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

276 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

278 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

279 **
__ª°ri˘
 
__íd±r
,

280 
__ba£
, 
loˇÀ_t
 
__loc
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

283 
__exãnsi⁄__


284 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

285 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

286 
loˇÀ_t
 
__loc
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

289 
__exãnsi⁄__


290 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
loˇÀ_t
 
__loc
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

295 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

296 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

299 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

300 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

303 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

304 **
__ª°ri˘
 
__íd±r
,

305 
loˇÀ_t
 
__loc
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

308 #i‡
__HAVE_FLOAT16


309 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

310 **
__ª°ri˘
 
__íd±r
,

311 
loˇÀ_t
 
__loc
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

315 #i‡
__HAVE_FLOAT32


316 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

317 **
__ª°ri˘
 
__íd±r
,

318 
loˇÀ_t
 
__loc
)

319 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

322 #i‡
__HAVE_FLOAT64


323 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

324 **
__ª°ri˘
 
__íd±r
,

325 
loˇÀ_t
 
__loc
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

329 #i‡
__HAVE_FLOAT128


330 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 **
__ª°ri˘
 
__íd±r
,

332 
loˇÀ_t
 
__loc
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

336 #i‡
__HAVE_FLOAT32X


337 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

338 **
__ª°ri˘
 
__íd±r
,

339 
loˇÀ_t
 
__loc
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

343 #i‡
__HAVE_FLOAT64X


344 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

345 **
__ª°ri˘
 
__íd±r
,

346 
loˇÀ_t
 
__loc
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

350 #i‡
__HAVE_FLOAT128X


351 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

352 **
__ª°ri˘
 
__íd±r
,

353 
loˇÀ_t
 
__loc
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

359 #ifde‡
__USE_EXTERN_INLINES


360 
__exã∫_ölöe
 

361 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

363  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

364 
	}
}

365 
__exã∫_ölöe
 

366 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

368  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

369 
	}
}

371 #ifde‡
__USE_ISOC99


372 
__exãnsi⁄__
 
__exã∫_ölöe
 

373 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

375  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

376 
	}
}

381 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


385 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

388 
	$a64l
 (c⁄° *
__s
)

389 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

393 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


394 
	~<sys/ty≥s.h
>

401 
	$øndom
 (Ë
__THROW
;

404 
	$§™dom
 (
__£ed
Ë
__THROW
;

410 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

411 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

415 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

418 #ifde‡
__USE_MISC


423 
	søndom_d©a


425 
öt32_t
 *
Âå
;

426 
öt32_t
 *
Ωå
;

427 
öt32_t
 *
°©e
;

428 
ønd_ty≥
;

429 
ønd_deg
;

430 
ønd_£p
;

431 
öt32_t
 *
íd_±r
;

434 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

435 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

437 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

441 
size_t
 
__°©ñí
,

442 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

446 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

447 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$ønd
 (Ë
__THROW
;

455 
	$§™d
 (
__£ed
Ë
__THROW
;

457 #ifde‡
__USE_POSIX199506


459 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

463 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


467 
	$dønd48
 (Ë
__THROW
;

468 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

471 
	$Ã™d48
 (Ë
__THROW
;

472 
	$ƒ™d48
 (
__xsubi
[3])

473 
__THROW
 
	`__n⁄nuŒ
 ((1));

476 
	$mønd48
 (Ë
__THROW
;

477 
	$jønd48
 (
__xsubi
[3])

478 
__THROW
 
	`__n⁄nuŒ
 ((1));

481 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

482 *
	$£ed48
 (
__£ed16v
[3])

483 
__THROW
 
	`__n⁄nuŒ
 ((1));

484 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

486 #ifde‡
__USE_MISC


490 
	sdønd48_d©a


492 
__x
[3];

493 
__ﬁd_x
[3];

494 
__c
;

495 
__öô
;

496 
__exãnsi⁄__
 
__a
;

501 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

502 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

503 
	$î™d48_r
 (
__xsubi
[3],

504 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

505 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

508 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

509 *
__ª°ri˘
 
__ªsu…
)

510 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

511 
	$ƒ™d48_r
 (
__xsubi
[3],

512 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

513 *
__ª°ri˘
 
__ªsu…
)

514 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

517 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

518 *
__ª°ri˘
 
__ªsu…
)

519 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

520 
	$jønd48_r
 (
__xsubi
[3],

521 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

522 *
__ª°ri˘
 
__ªsu…
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

526 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

527 
__THROW
 
	`__n⁄nuŒ
 ((2));

529 
	$£ed48_r
 (
__£ed16v
[3],

530 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

532 
	$lc⁄g48_r
 (
__∑øm
[7],

533 
dønd48_d©a
 *
__buf„r
)

534 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

539 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

541 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

542 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

549 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

550 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

552 #ifde‡
__USE_MISC


558 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

559 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

563 
	$‰ì
 (*
__±r
Ë
__THROW
;

565 #ifde‡
__USE_MISC


566 
	~<Æloˇ.h
>

569 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

570 || 
deföed
 
__USE_MISC


572 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

575 #ifde‡
__USE_XOPEN2K


577 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

581 #ifde‡
__USE_ISOC11


583 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

584 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

588 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

592 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

594 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


596 #ifde‡
__˝lu•lus


597 "C++" 
	$©_quick_exô
 ((*
__func
) ())

598 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

600 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

604 #ifdef 
__USE_MISC


607 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

608 
__THROW
 
	`__n⁄nuŒ
 ((1));

614 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

616 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


620 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

623 #ifde‡
__USE_ISOC99


626 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

631 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_GNU


636 *
	$£cuª_gëív
 (c⁄° *
__«me
)

637 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

640 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


644 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

647 #ifde‡
__USE_XOPEN2K


650 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

651 
__THROW
 
	`__n⁄nuŒ
 ((2));

654 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

657 #ifdef 
__USE_MISC


661 
	$˛óªnv
 (Ë
__THROW
;

665 #i‡
deföed
 
__USE_MISC
 \

666 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

672 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

675 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


684 #i‚de‡
__USE_FILE_OFFSET64


685 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

687 #ifde‡
__REDIRECT


688 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

689 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

691 
	#mk°emp
 
mk°emp64


	)

694 #ifde‡
__USE_LARGEFILE64


695 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

699 #ifde‡
__USE_MISC


706 #i‚de‡
__USE_FILE_OFFSET64


707 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

711 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

713 
	#mk°emps
 
mk°emps64


	)

716 #ifde‡
__USE_LARGEFILE64


717 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

718 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

722 #ifde‡
__USE_XOPEN2K8


728 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

731 #ifde‡
__USE_GNU


738 #i‚de‡
__USE_FILE_OFFSET64


739 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

741 #ifde‡
__REDIRECT


742 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

743 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

745 
	#mko°emp
 
mko°emp64


	)

748 #ifde‡
__USE_LARGEFILE64


749 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

758 #i‚de‡
__USE_FILE_OFFSET64


759 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

760 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

762 #ifde‡
__REDIRECT


763 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

764 
__Êags
), 
mko°emps64
)

765 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

767 
	#mko°emps
 
mko°emps64


	)

770 #ifde‡
__USE_LARGEFILE64


771 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

772 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

781 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

784 #ifdef 
__USE_GNU


787 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

791 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


797 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

798 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

803 #i‚de‡
__COMPAR_FN_T


804 
	#__COMPAR_FN_T


	)

805 (*
	t__com∑r_‚_t
) (const *, const *);

807 #ifdef 
__USE_GNU


808 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

811 #ifde‡
__USE_GNU


812 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

817 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

818 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

819 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

821 #ifde‡
__USE_EXTERN_INLINES


822 
	~<bôs/°dlib-b£¨ch.h
>

827 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

828 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

829 #ifde‡
__USE_GNU


830 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

831 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

832 
	`__n⁄nuŒ
 ((1, 4));

837 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

838 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

840 #ifde‡
__USE_ISOC99


841 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

842 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

849 
div_t
 
	$div
 (
__numî
, 
__díom
)

850 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

851 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

852 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

854 #ifde‡
__USE_ISOC99


855 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

856 
__díom
)

857 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

861 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

862 || 
deföed
 
__USE_MISC


869 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

870 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

875 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

876 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

881 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

882 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

885 #ifde‡
__USE_MISC


887 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

888 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

889 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

890 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

891 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

892 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

893 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

894 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

899 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

900 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

901 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

902 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

903 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

904 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

906 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

907 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

908 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

909 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

910 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

911 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

912 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

913 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

919 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

922 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

923 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

926 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

930 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

931 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

933 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

934 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

935 
__THROW
;

938 #ifde‡
__USE_MISC


943 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

947 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


954 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

955 *c⁄° *
__ª°ri˘
 
__tokís
,

956 **
__ª°ri˘
 
__vÆuï
)

957 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

963 #ifde‡
__USE_XOPEN2KXSI


965 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

968 #ifde‡
__USE_XOPEN_EXTENDED


973 
	$gø¡±
 (
__fd
Ë
__THROW
;

977 
	$u∆ock±
 (
__fd
Ë
__THROW
;

982 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

985 #ifde‡
__USE_GNU


989 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

990 
__THROW
 
	`__n⁄nuŒ
 ((2));

993 
	`gë±
 ();

996 #ifde‡
__USE_MISC


1000 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1001 
__THROW
 
	`__n⁄nuŒ
 ((1));

1004 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1007 
	$ây¶Ÿ
 (Ë
__THROW
;

1010 
	~<bôs/°dlib-Êﬂt.h
>

1013 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1014 
	~<bôs/°dlib.h
>

1016 #ifde‡
__LDBL_COMPAT


1017 
	~<bôs/°dlib-ldbl.h
>

1020 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

37 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


53 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

54 
__c
, 
size_t
 
__n
)

55 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

63 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

64 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

67 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


70 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

71 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

72 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

75 #ifde‡
__OPTIMIZE__


76 
__exã∫_Æways_ölöe
 *

77 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


79  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

82 
__exã∫_Æways_ölöe
 const *

83 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
	}
}

90 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

91 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

94 #ifde‡
__USE_GNU


97 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


98 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

99 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

100 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

101 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

108 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


109 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

110 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

112 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

122 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

124 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

125 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

129 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

133 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

137 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

139 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

140 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

147 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

148 
__THROW
 
	`__n⁄nuŒ
 ((2));

150 #ifde‡
__USE_XOPEN2K8


152 
	~<bôs/ty≥s/loˇÀ_t.h
>

155 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__l
)

156 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

159 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

160 
loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

163 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8
 \

164 || 
	$__GLIBC_USE
 (
LIB_EXT2
))

166 *
	$°rdup
 (c⁄° *
__s
)

167 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

173 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

174 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

175 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


180 
	#°rdu∑
(
s
) \

181 (
__exãnsi⁄__
 \

183 c⁄° *
__ﬁd
 = (
s
); \

184 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

185 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

186 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

187 
	}
}))

	)

190 
	#°∫du∑
(
s
, 
n
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

196 
__√w
[
__Àn
] = '\0'; \

197 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

198 }))

	)

202 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


205 *
°rchr
 (*
__s
, 
__c
)

206 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

207 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

208 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

210 #ifde‡
__OPTIMIZE__


211 
__exã∫_Æways_ölöe
 *

212 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


214  
__buûtö_°rchr
 (
__s
, 
__c
);

217 
__exã∫_Æways_ölöe
 const *

218 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

225 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

226 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

229 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


232 *
	`°ºchr
 (*
__s
, 
__c
)

233 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

234 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

235 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__OPTIMIZE__


238 
__exã∫_Æways_ölöe
 *

239 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


241  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

244 
__exã∫_Æways_ölöe
 const *

245 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
	}
}

252 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

253 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

256 #ifde‡
__USE_GNU


259 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


260 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

261 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

262 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

263 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

266 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

276 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

279 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


282 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

283 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__OPTIMIZE__


288 
__exã∫_Æways_ölöe
 *

289 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


291  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

294 
__exã∫_Æways_ölöe
 const *

295 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


297  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

300 
	}
}

302 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

303 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

306 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


309 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

310 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

311 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

312 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__OPTIMIZE__


315 
__exã∫_Æways_ölöe
 *

316 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


318  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

321 
__exã∫_Æways_ölöe
 const *

322 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


324  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

327 
	}
}

329 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

330 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

336 
__THROW
 
	`__n⁄nuŒ
 ((2));

340 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

341 c⁄° *
__ª°ri˘
 
__dñim
,

342 **
__ª°ri˘
 
__ßve_±r
)

343 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

344 #ifde‡
__USE_POSIX


345 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

346 **
__ª°ri˘
 
__ßve_±r
)

347 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

350 #ifde‡
__USE_GNU


352 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


353 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

354 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

355 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

356 c⁄° *
__√edÀ
)

357 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

359 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

360 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 #ifde‡
__USE_GNU


368 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

369 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

370 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

374 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

375 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

377 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

378 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

379 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

384 
size_t
 
	$°æí
 (c⁄° *
__s
)

385 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

387 #ifdef 
__USE_XOPEN2K8


390 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

391 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

397 #ifde‡
__USE_XOPEN2K


405 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


408 #ifde‡
__REDIRECT_NTH


409 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

410 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

411 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

413 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

414 
__THROW
 
	`__n⁄nuŒ
 ((2));

415 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

420 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

425 #ifde‡
__USE_XOPEN2K8


427 *
	$°ªº‹_l
 (
__î∫um
, 
loˇÀ_t
 
__l
Ë
__THROW
;

430 #ifde‡
__USE_MISC


431 
	~<°rögs.h
>

435 
	$ex∂icô_bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

439 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

440 c⁄° *
__ª°ri˘
 
__dñim
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 #ifdef 
__USE_XOPEN2K8


446 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

449 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

451 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

452 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

456 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

457 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

458 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

460 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

464 #ifdef 
__USE_GNU


466 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

467 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

470 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

473 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

475 #i‚de‡
ba£«me


480 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


481 "C++" *
	$ba£«me
 (*
__fûíame
)

482 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

483 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

484 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

486 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

491 #i‡
	`__GNUC_PREREQ
 (3,4)

492 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


494 
	~<bôs/°rög_f‹tifõd.h
>

498 
__END_DECLS


	@/usr/include/sys/stat.h

22 #i‚def 
_SYS_STAT_H


23 
	#_SYS_STAT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #ifde‡
__USE_XOPEN2K8


30 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


37 
	~<bôs/ty≥s/time_t.h
>

39 #i‚de‡
__dev_t_deföed


40 
__dev_t
 
	tdev_t
;

41 
	#__dev_t_deföed


	)

44 #i‚de‡
__gid_t_deföed


45 
__gid_t
 
	tgid_t
;

46 
	#__gid_t_deföed


	)

49 #i‚de‡
__öo_t_deföed


50 #i‚de‡
__USE_FILE_OFFSET64


51 
__öo_t
 
	töo_t
;

53 
__öo64_t
 
	töo_t
;

55 
	#__öo_t_deföed


	)

58 #i‚de‡
__mode_t_deföed


59 
__mode_t
 
	tmode_t
;

60 
	#__mode_t_deföed


	)

63 #i‚de‡
__∆ök_t_deföed


64 
__∆ök_t
 
	t∆ök_t
;

65 
	#__∆ök_t_deföed


	)

68 #i‚de‡
__off_t_deföed


69 #i‚de‡
__USE_FILE_OFFSET64


70 
__off_t
 
	toff_t
;

72 
__off64_t
 
	toff_t
;

74 
	#__off_t_deföed


	)

77 #i‚de‡
__uid_t_deföed


78 
__uid_t
 
	tuid_t
;

79 
	#__uid_t_deföed


	)

83 #ifde‡
__USE_UNIX98


84 #i‚de‡
__blk˙t_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__blk˙t_t
 
	tblk˙t_t
;

88 
__blk˙t64_t
 
	tblk˙t_t
;

90 
	#__blk˙t_t_deföed


	)

93 #i‚de‡
__blksize_t_deföed


94 
__blksize_t
 
	tblksize_t
;

95 
	#__blksize_t_deföed


	)

99 
	g__BEGIN_DECLS


101 
	~<bôs/°©.h
>

103 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


104 
	#S_IFMT
 
__S_IFMT


	)

105 
	#S_IFDIR
 
__S_IFDIR


	)

106 
	#S_IFCHR
 
__S_IFCHR


	)

107 
	#S_IFBLK
 
__S_IFBLK


	)

108 
	#S_IFREG
 
__S_IFREG


	)

109 #ifde‡
__S_IFIFO


110 
	#S_IFIFO
 
__S_IFIFO


	)

112 #ifde‡
__S_IFLNK


113 
	#S_IFLNK
 
__S_IFLNK


	)

115 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
) \

116 && 
deföed
 
	g__S_IFSOCK


117 
	#S_IFSOCK
 
__S_IFSOCK


	)

123 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

125 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

126 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

127 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

128 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

129 #ifde‡
__S_IFIFO


130 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

132 #ifde‡
__S_IFLNK


133 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

136 #i‡
deföed
 
__USE_MISC
 && !deföed 
__S_IFLNK


137 
	#S_ISLNK
(
mode
Ë0

	)

140 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K
) \

141 && 
deföed
 
	g__S_IFSOCK


142 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

143 #ñi‡
deföed
 
__USE_XOPEN2K


144 
	#S_ISSOCK
(
mode
Ë0

	)

151 #ifdef 
__USE_POSIX199309


152 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

153 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

154 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

160 
	#S_ISUID
 
__S_ISUID


	)

161 
	#S_ISGID
 
__S_ISGID


	)

163 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


165 
	#S_ISVTX
 
__S_ISVTX


	)

168 
	#S_IRUSR
 
__S_IREAD


	)

169 
	#S_IWUSR
 
__S_IWRITE


	)

170 
	#S_IXUSR
 
__S_IEXEC


	)

172 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

174 #ifde‡
__USE_MISC


175 
	#S_IREAD
 
S_IRUSR


	)

176 
	#S_IWRITE
 
S_IWUSR


	)

177 
	#S_IEXEC
 
S_IXUSR


	)

180 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

181 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

182 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

184 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

186 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

187 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

188 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

190 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

193 #ifdef 
__USE_MISC


195 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

196 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

197 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

199 
	#S_BLKSIZE
 512

	)

203 #i‚de‡
__USE_FILE_OFFSET64


205 
	$°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

206 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

210 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

212 #ifde‡
__REDIRECT_NTH


213 
	`__REDIRECT_NTH
 (
°©
, (c⁄° *
__ª°ri˘
 
__fûe
,

214 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

215 
	`__n⁄nuŒ
 ((1, 2));

216 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

217 
	`__n⁄nuŒ
 ((2));

219 
	#°©
 
°©64


	)

220 
	#f°©
 
f°©64


	)

223 #ifde‡
__USE_LARGEFILE64


224 
	$°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

225 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

226 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

229 #ifde‡
__USE_ATFILE


233 #i‚de‡
__USE_FILE_OFFSET64


234 
	$f°©©
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

235 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

236 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

238 #ifde‡
__REDIRECT_NTH


239 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

240 
°©
 *
__ª°ri˘
 
__buf
,

241 
__Êag
),

242 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

244 
	#f°©©
 
f°©©64


	)

248 #ifde‡
__USE_LARGEFILE64


249 
	$f°©©64
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

250 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

251 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

255 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


256 #i‚de‡
__USE_FILE_OFFSET64


259 
	$l°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

260 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT_NTH


263 
	`__REDIRECT_NTH
 (
l°©
,

264 (c⁄° *
__ª°ri˘
 
__fûe
,

265 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

266 
	`__n⁄nuŒ
 ((1, 2));

268 
	#l°©
 
l°©64


	)

271 #ifde‡
__USE_LARGEFILE64


272 
	$l°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

273 
°©64
 *
__ª°ri˘
 
__buf
)

274 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

280 
	$chmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1));

283 #ifde‡
__USE_MISC


287 
	$lchmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


293 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

296 #ifde‡
__USE_ATFILE


299 
	$fchmod©
 (
__fd
, c⁄° *
__fûe
, 
__mode_t
 
__mode
,

300 
__Êag
)

301 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

308 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

310 #ifdef 
__USE_GNU


313 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

317 
	$mkdú
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1));

320 #ifde‡
__USE_ATFILE


324 
	$mkdú©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

325 
__THROW
 
	`__n⁄nuŒ
 ((2));

331 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


332 
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 #ifde‡
__USE_ATFILE


339 
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

340 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

346 
	$mkfifo
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1));

349 #ifde‡
__USE_ATFILE


353 
	$mkfifﬂt
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

354 
__THROW
 
	`__n⁄nuŒ
 ((2));

357 #ifde‡
__USE_ATFILE


360 
	$utimíßt
 (
__fd
, c⁄° *
__∑th
,

361 c⁄° 
time•ec
 
__times
[2],

362 
__Êags
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 #ifde‡
__USE_XOPEN2K8


368 
	$futimís
 (
__fd
, c⁄° 
time•ec
 
__times
[2]Ë
__THROW
;

386 #i‚de‡
_STAT_VER


387 
	#_STAT_VER
 0

	)

389 #i‚de‡
_MKNOD_VER


390 
	#_MKNOD_VER
 0

	)

394 #i‚de‡
__USE_FILE_OFFSET64


395 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

396 
__THROW
 
	`__n⁄nuŒ
 ((3));

397 
	$__x°©
 (
__vî
, c⁄° *
__fûíame
,

398 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

399 
	$__lx°©
 (
__vî
, c⁄° *
__fûíame
,

400 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

401 
	$__fx°©©
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

402 
°©
 *
__°©_buf
, 
__Êag
)

403 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

405 #ifde‡
__REDIRECT_NTH


406 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

407 
°©
 *
__°©_buf
), 
__fx°©64
)

408 
	`__n⁄nuŒ
 ((3));

409 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, c⁄° *
__fûíame
,

410 
°©
 *
__°©_buf
), 
__x°©64
)

411 
	`__n⁄nuŒ
 ((2, 3));

412 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, c⁄° *
__fûíame
,

413 
°©
 *
__°©_buf
), 
__lx°©64
)

414 
	`__n⁄nuŒ
 ((2, 3));

415 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

416 c⁄° *
__fûíame
,

417 
°©
 *
__°©_buf
, 
__Êag
),

418 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

421 
	#__fx°©
 
__fx°©64


	)

422 
	#__x°©
 
__x°©64


	)

423 
	#__lx°©
 
__lx°©64


	)

427 #ifde‡
__USE_LARGEFILE64


428 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

429 
__THROW
 
	`__n⁄nuŒ
 ((3));

430 
	$__x°©64
 (
__vî
, c⁄° *
__fûíame
,

431 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

432 
	$__lx°©64
 (
__vî
, c⁄° *
__fûíame
,

433 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

434 
	$__fx°©©64
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

435 
°©64
 *
__°©_buf
, 
__Êag
)

436 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

438 
	$__xmknod
 (
__vî
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

439 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

441 
	$__xmknod©
 (
__vî
, 
__fd
, c⁄° *
__∑th
,

442 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

443 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

445 #ifde‡
__USE_GNU


446 
	~<bôs/°©x.h
>

449 #ifde‡
__USE_EXTERN_INLINES


452 
__exã∫_ölöe
 

453 
	`__NTH
 (
	$°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

455  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

456 
	}
}

458 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


459 
__exã∫_ölöe
 

460 
__NTH
 (
	$l°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

462  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

463 
	}
}

466 
__exã∫_ölöe
 

467 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

469  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

470 
	}
}

472 #ifde‡
__USE_ATFILE


473 
__exã∫_ölöe
 

474 
__NTH
 (
	$f°©©
 (
__fd
, c⁄° *
__fûíame
, 
°©
 *
__°©buf
,

475 
__Êag
))

477  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

478 
	}
}

481 #ifde‡
__USE_MISC


482 
__exã∫_ölöe
 

483 
__NTH
 (
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

485  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

486 
	}
}

489 #ifde‡
__USE_ATFILE


490 
__exã∫_ölöe
 

491 
__NTH
 (
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

492 
__dev_t
 
__dev
))

494  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

495 
	}
}

498 #i‡
deföed
 
__USE_LARGEFILE64
 \

499 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

500 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

501 
__exã∫_ölöe
 

502 
__NTH
 (
	$°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

504  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

505 
	}
}

507 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


508 
__exã∫_ölöe
 

509 
__NTH
 (
	$l°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

511  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

512 
	}
}

515 
__exã∫_ölöe
 

516 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

518  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

519 
	}
}

521 #ifde‡
__USE_ATFILE


522 
__exã∫_ölöe
 

523 
__NTH
 (
	$f°©©64
 (
__fd
, c⁄° *
__fûíame
, 
°©64
 *
__°©buf
,

524 
__Êag
))

526  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

527 
	}
}

534 
	g__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

42 
__loff_t
 
	tloff_t
;

45 #i‚de‡
__öo_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__öo_t
 
	töo_t
;

49 
__öo64_t
 
	töo_t
;

51 
	#__öo_t_deföed


	)

53 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


54 
__öo64_t
 
	töo64_t
;

55 
	#__öo64_t_deföed


	)

58 #i‚de‡
__dev_t_deföed


59 
__dev_t
 
	tdev_t
;

60 
	#__dev_t_deföed


	)

63 #i‚de‡
__gid_t_deföed


64 
__gid_t
 
	tgid_t
;

65 
	#__gid_t_deföed


	)

68 #i‚de‡
__mode_t_deföed


69 
__mode_t
 
	tmode_t
;

70 
	#__mode_t_deföed


	)

73 #i‚de‡
__∆ök_t_deföed


74 
__∆ök_t
 
	t∆ök_t
;

75 
	#__∆ök_t_deföed


	)

78 #i‚de‡
__uid_t_deföed


79 
__uid_t
 
	tuid_t
;

80 
	#__uid_t_deföed


	)

83 #i‚de‡
__off_t_deföed


84 #i‚de‡
__USE_FILE_OFFSET64


85 
__off_t
 
	toff_t
;

87 
__off64_t
 
	toff_t
;

89 
	#__off_t_deföed


	)

91 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


92 
__off64_t
 
	toff64_t
;

93 
	#__off64_t_deföed


	)

96 #i‚de‡
__pid_t_deföed


97 
__pid_t
 
	tpid_t
;

98 
	#__pid_t_deföed


	)

101 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

102 && !
deföed
 
__id_t_deföed


103 
__id_t
 
	tid_t
;

104 
	#__id_t_deföed


	)

107 #i‚de‡
__ssize_t_deföed


108 
__ssize_t
 
	tssize_t
;

109 
	#__ssize_t_deföed


	)

112 #ifdef 
__USE_MISC


113 #i‚de‡
__daddr_t_deföed


114 
__daddr_t
 
	tdaddr_t
;

115 
__ˇddr_t
 
	tˇddr_t
;

116 
	#__daddr_t_deföed


	)

120 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


121 
__key_t
 
	tkey_t
;

122 
	#__key_t_deföed


	)

125 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


126 
	~<bôs/ty≥s/˛ock_t.h
>

128 
	~<bôs/ty≥s/˛ockid_t.h
>

129 
	~<bôs/ty≥s/time_t.h
>

130 
	~<bôs/ty≥s/timî_t.h
>

132 #ifde‡
__USE_XOPEN


133 #i‚de‡
__u£c⁄ds_t_deföed


134 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

135 
	#__u£c⁄ds_t_deföed


	)

137 #i‚de‡
__su£c⁄ds_t_deföed


138 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

139 
	#__su£c⁄ds_t_deföed


	)

143 
	#__√ed_size_t


	)

144 
	~<°ddef.h
>

146 #ifde‡
__USE_MISC


148 
	tul⁄g
;

149 
	tush‹t
;

150 
	tuöt
;

155 
	~<bôs/°döt-öä.h
>

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 
	tu_öt8_t
;

161 
	tu_öt16_t
;

162 
	tu_öt32_t
;

163 #i‡
__WORDSIZE
 == 64

164 
	tu_öt64_t
;

166 
__exãnsi⁄__
 
	tu_öt64_t
;

169 
	tªgi°î_t
;

174 
	#__u_ötN_t
(
N
, 
MODE
) \

175 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

177 
	t__u_ötN_t
 (8, 
	t__QI__
);

178 
__u_ötN_t
 (16, 
__HI__
);

179 
__u_ötN_t
 (32, 
__SI__
);

180 
__u_ötN_t
 (64, 
__DI__
);

182 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

188 
	#__BIT_TYPES_DEFINED__
 1

	)

191 #ifdef 
__USE_MISC


193 
	~<ídün.h
>

196 
	~<sys/£À˘.h
>

200 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

201 && !
deföed
 
__blksize_t_deföed


202 
__blksize_t
 
	tblksize_t
;

203 
	#__blksize_t_deföed


	)

207 #i‚de‡
__USE_FILE_OFFSET64


208 #i‚de‡
__blk˙t_t_deföed


209 
__blk˙t_t
 
	tblk˙t_t
;

210 
	#__blk˙t_t_deföed


	)

212 #i‚de‡
__fsblk˙t_t_deföed


213 
__fsblk˙t_t
 
	tfsblk˙t_t
;

214 
	#__fsblk˙t_t_deföed


	)

216 #i‚de‡
__fsfû˙t_t_deföed


217 
__fsfû˙t_t
 
	tfsfû˙t_t
;

218 
	#__fsfû˙t_t_deföed


	)

221 #i‚de‡
__blk˙t_t_deföed


222 
__blk˙t64_t
 
	tblk˙t_t
;

223 
	#__blk˙t_t_deföed


	)

225 #i‚de‡
__fsblk˙t_t_deföed


226 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

227 
	#__fsblk˙t_t_deföed


	)

229 #i‚de‡
__fsfû˙t_t_deföed


230 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

231 
	#__fsfû˙t_t_deföed


	)

235 #ifde‡
__USE_LARGEFILE64


236 
__blk˙t64_t
 
	tblk˙t64_t
;

237 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

238 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

243 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


244 
	~<bôs/±hªadty≥s.h
>

247 
	g__END_DECLS


	@/usr/include/sys/utsname.h

22 #i‚def 
_SYS_UTSNAME_H


23 
	#_SYS_UTSNAME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ut¢ame.h
>

31 #i‚de‡
_UTSNAME_SYSNAME_LENGTH


32 
	#_UTSNAME_SYSNAME_LENGTH
 
_UTSNAME_LENGTH


	)

34 #i‚de‡
_UTSNAME_NODENAME_LENGTH


35 
	#_UTSNAME_NODENAME_LENGTH
 
_UTSNAME_LENGTH


	)

37 #i‚de‡
_UTSNAME_RELEASE_LENGTH


38 
	#_UTSNAME_RELEASE_LENGTH
 
_UTSNAME_LENGTH


	)

40 #i‚de‡
_UTSNAME_VERSION_LENGTH


41 
	#_UTSNAME_VERSION_LENGTH
 
_UTSNAME_LENGTH


	)

43 #i‚de‡
_UTSNAME_MACHINE_LENGTH


44 
	#_UTSNAME_MACHINE_LENGTH
 
_UTSNAME_LENGTH


	)

48 
	sut¢ame


51 
	msy¢ame
[
_UTSNAME_SYSNAME_LENGTH
];

54 
	mnodíame
[
_UTSNAME_NODENAME_LENGTH
];

57 
	mªÀa£
[
_UTSNAME_RELEASE_LENGTH
];

59 
	mvîsi⁄
[
_UTSNAME_VERSION_LENGTH
];

62 
	mmachöe
[
_UTSNAME_MACHINE_LENGTH
];

64 #i‡
_UTSNAME_DOMAIN_LENGTH
 - 0

66 #ifde‡
__USE_GNU


67 
	mdomaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

69 
	m__domaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

74 #ifde‡
__USE_MISC


76 
	#SYS_NMLN
 
_UTSNAME_LENGTH


	)

81 
	$u«me
 (
ut¢ame
 *
__«me
Ë
__THROW
;

84 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


23 
	#_TIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

33 
	~<bôs/time.h
>

37 
	~<bôs/ty≥s/˛ock_t.h
>

38 
	~<bôs/ty≥s/time_t.h
>

39 
	~<bôs/ty≥s/°ru˘_tm.h
>

41 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_ISOC11


42 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

45 #ifde‡
__USE_POSIX199309


46 
	~<bôs/ty≥s/˛ockid_t.h
>

47 
	~<bôs/ty≥s/timî_t.h
>

48 
	~<bôs/ty≥s/°ru˘_ôimî•ec.h
>

49 
	gsigevít
;

52 #ifde‡
__USE_XOPEN2K


53 #i‚de‡
__pid_t_deföed


54 
__pid_t
 
	tpid_t
;

55 
	#__pid_t_deföed


	)

59 #ifde‡
__USE_XOPEN2K8


60 
	~<bôs/ty≥s/loˇÀ_t.h
>

63 #ifde‡
__USE_ISOC11


65 
	#TIME_UTC
 1

	)

68 
__BEGIN_DECLS


72 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

75 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

78 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

79 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

88 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
,

90 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

92 #ifde‡
__USE_XOPEN


95 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

96 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

97 
__THROW
;

100 #ifde‡
__USE_XOPEN2K8


104 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

105 c⁄° *
__ª°ri˘
 
__f‹m©
,

106 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

107 
loˇÀ_t
 
__loc
Ë
__THROW
;

110 #ifde‡
__USE_GNU


111 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

112 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

113 
loˇÀ_t
 
__loc
Ë
__THROW
;

119 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

123 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

125 #ifde‡
__USE_POSIX


128 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

129 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

133 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

134 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

139 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

142 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

144 #ifde‡
__USE_POSIX


149 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

150 *
__ª°ri˘
 
__buf
Ë
__THROW
;

153 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

154 *
__ª°ri˘
 
__buf
Ë
__THROW
;

159 *
__tz«me
[2];

160 
__daylight
;

161 
__timez⁄e
;

164 #ifdef 
__USE_POSIX


166 *
tz«me
[2];

170 
	$tz£t
 (Ë
__THROW
;

173 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


174 
daylight
;

175 
timez⁄e
;

178 #ifde‡
__USE_MISC


181 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

187 
	#__i¶óp
(
yór
) \

188 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

191 #ifde‡
__USE_MISC


196 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

199 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

202 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

206 #ifde‡
__USE_POSIX199309


211 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

212 
time•ec
 *
__ªmaöög
);

216 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

219 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

222 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

223 
__THROW
;

225 #ifde‡
__USE_XOPEN2K


230 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

231 c⁄° 
time•ec
 *
__ªq
,

232 
time•ec
 *
__ªm
);

235 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

240 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

241 
sigevít
 *
__ª°ri˘
 
__evp
,

242 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

245 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

248 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

249 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

250 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

253 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

254 
__THROW
;

257 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

261 #ifde‡
__USE_ISOC11


263 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

264 
__THROW
 
	`__n⁄nuŒ
 ((1));

268 #ifde‡
__USE_XOPEN_EXTENDED


280 
gëd©e_îr
;

289 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

292 #ifde‡
__USE_GNU


303 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

304 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

307 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_MISC


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_MISC


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #ifde‡
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #ifde‡
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_MISC


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #ifde‡
__USE_MISC


784 
	$ây¶Ÿ
 (Ë
__THROW
;

789 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

790 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

792 #ifde‡
__USE_ATFILE


795 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

796 c⁄° *
__to
, 
__Êags
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

800 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


802 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

803 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

808 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

809 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

813 #ifde‡
__USE_ATFILE


815 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

816 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

819 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

820 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

825 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

827 #ifde‡
__USE_ATFILE


829 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

830 
__THROW
 
	`__n⁄nuŒ
 ((2));

834 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

838 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

841 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

848 *
	`gëlogö
 ();

849 #ifde‡
__USE_POSIX199506


856 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

859 #ifdef 
__USE_MISC


861 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

865 #ifdef 
__USE_POSIX2


869 
	~<bôs/gë›t_posix.h
>

873 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


877 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

881 #i‡
deföed
 
__USE_MISC


884 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

895 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

896 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

897 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

904 
	$vh™gup
 (Ë
__THROW
;

907 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

915 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

916 
size_t
 
__off£t
, 
__sˇÀ
)

917 
__THROW
 
	`__n⁄nuŒ
 ((1));

923 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

927 *
	$gëu£rshñl
 (Ë
__THROW
;

928 
	$ídu£rshñl
 (Ë
__THROW
;

929 
	$£tu£rshñl
 (Ë
__THROW
;

935 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

939 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

942 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

946 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

954 
	`fsync
 (
__fd
);

957 #ifde‡
__USE_GNU


960 
	$syncfs
 (
__fd
Ë
__THROW
;

964 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


967 
	`gëho°id
 ();

970 
	$sync
 (Ë
__THROW
;

973 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


976 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

981 
	$gëdèbÀsize
 (Ë
__THROW
;

987 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


990 #i‚de‡
__USE_FILE_OFFSET64


991 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

992 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

994 #ifde‡
__REDIRECT_NTH


995 
	`__REDIRECT_NTH
 (
åunˇã
,

996 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

997 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

999 
	#åunˇã
 
åunˇã64


	)

1002 #ifde‡
__USE_LARGEFILE64


1003 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1009 #i‡
deföed
 
__USE_POSIX199309
 \

1010 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1013 #i‚de‡
__USE_FILE_OFFSET64


1014 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1016 #ifde‡
__REDIRECT_NTH


1017 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1018 
·runˇã64
Ë
__wur
;

1020 
	#·runˇã
 
·runˇã64


	)

1023 #ifde‡
__USE_LARGEFILE64


1024 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1030 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1031 || 
deföed
 
__USE_MISC


1035 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1041 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1045 #ifde‡
__USE_MISC


1056 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1061 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1073 
	#F_ULOCK
 0

	)

1074 
	#F_LOCK
 1

	)

1075 
	#F_TLOCK
 2

	)

1076 
	#F_TEST
 3

	)

1078 #i‚de‡
__USE_FILE_OFFSET64


1079 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1081 #ifde‡
__REDIRECT


1082 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1083 
lockf64
Ë
__wur
;

1085 
	#lockf
 
lockf64


	)

1088 #ifde‡
__USE_LARGEFILE64


1089 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1094 #ifde‡
__USE_GNU


1099 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1100 (
__exãnsi⁄__
 \

1101 ({ 
__ªsu…
; \

1102 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1103 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1104 
__ªsu…
; 
	}
}))

	)

1107 
ssize_t
 
c›y_fûe_ønge
 (
__öfd
, 
__off64_t
 *
__pöoff
,

1108 
__outfd
, 
__off64_t
 *
__poutoff
,

1109 
size_t
 
__Àngth
, 
__Êags
);

1112 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1115 
fd©async
 (
__fûdes
);

1118 #ifde‡
__USE_MISC


1124 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1125 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1128 #ifdef 
__USE_XOPEN


1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1141 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1143 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1146 *
	`cu£rid
 (*
__s
);

1152 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_XOPEN2K


1153 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1154 (*
__∑ª¡
) (),

1155 (*
__chûd
Ë()Ë
__THROW
;

1158 #ifde‡
__USE_MISC


1161 
	$gëíå›y
 (*
__buf„r
, 
size_t
 
__Àngth
Ë
__wur
;

1165 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1166 
	~<bôs/uni°d.h
>

1169 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/fcntl.h

19 #i‚de‡
_FCNTL_H


23 #ifde‡
__x86_64__


24 
	#__O_LARGEFILE
 0

	)

27 #ifde‡
__x86_64__


29 
	#F_GETLK64
 5

	)

30 
	#F_SETLK64
 6

	)

31 
	#F_SETLKW64
 7

	)

35 
	sÊock


37 
	ml_ty≥
;

38 
	ml_whí˚
;

39 #i‚de‡
__USE_FILE_OFFSET64


40 
__off_t
 
	ml_°¨t
;

41 
__off_t
 
	ml_Àn
;

43 
__off64_t
 
	ml_°¨t
;

44 
__off64_t
 
	ml_Àn
;

46 
__pid_t
 
	ml_pid
;

49 #ifde‡
__USE_LARGEFILE64


50 
	sÊock64


52 
	ml_ty≥
;

53 
	ml_whí˚
;

54 
__off64_t
 
	ml_°¨t
;

55 
__off64_t
 
	ml_Àn
;

56 
__pid_t
 
	ml_pid
;

61 
	~<bôs/f˙é-löux.h
>

	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/floatn.h

19 #i‚de‡
_BITS_FLOATN_H


20 
	#_BITS_FLOATN_H


	)

22 
	~<„©uªs.h
>

29 #i‡(
deföed
 
__x86_64__
 \

30 ? 
__GNUC_PREREQ
 (4, 3) \

31 : (
deföed
 
__GNU__
 ? 
	$__GNUC_PREREQ
 (4, 5Ë: 
	`__GNUC_PREREQ
 (4, 4))) \

32 && !
	`deföed
(
__CUDACC__
Ë&& !
	$deföed
(
__ICC
)

33 
	#__HAVE_FLOAT128
 1

	)

35 
	#__HAVE_FLOAT128
 0

	)

40 #i‡
__HAVE_FLOAT128


41 
	#__HAVE_DISTINCT_FLOAT128
 1

	)

43 
	#__HAVE_DISTINCT_FLOAT128
 0

	)

49 
	#__HAVE_FLOAT64X
 1

	)

55 
	#__HAVE_FLOAT64X_LONG_DOUBLE
 1

	)

57 #i‚de‡
__ASSEMBLER__


61 #i‡
__HAVE_FLOAT128


62 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


64 
	#__f128
(
x
Ëx##
q


	)

66 
	#__f128
(
x
Ëx##
f128


	)

71 #i‡
__HAVE_FLOAT128


72 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


75 
_Com∂ex
 
	t__cÊﬂt128
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__TC__
)));

76 
	#__CFLOAT128
 
__cÊﬂt128


	)

78 
	#__CFLOAT128
 
_Com∂ex
 
_Flﬂt128


	)

83 #i‡
__HAVE_FLOAT128


86 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


87 
__Êﬂt128
 
	t_Flﬂt128
;

91 #i‡!
	`__GNUC_PREREQ
 (7, 0)

92 
	#__buûtö_huge_vÆf128
(Ë((
_Flﬂt128
Ë
	`__buûtö_huge_vÆ
 ())

	)

100 #i‡!
	`__GNUC_PREREQ
 (7, 0)

101 
	#__buûtö_c›ysignf128
 
__buûtö_c›ysignq


	)

102 
	#__buûtö_Ábsf128
 
__buûtö_Ábsq


	)

103 
	#__buûtö_öff128
(Ë((
_Flﬂt128
Ë
	`__buûtö_öf
 ())

	)

104 
	#__buûtö_«nf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«n
 (x))

	)

105 
	#__buûtö_«nsf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«ns
 (x))

	)

112 #i‡!
	`__GNUC_PREREQ
 (6, 0)

113 
	#__buûtö_signbôf128
 
__signbôf128


	)

120 
	~<bôs/Êﬂä-comm⁄.h
>

	@/usr/include/bits/getopt_core.h

20 #i‚de‡
_GETOPT_CORE_H


21 
	#_GETOPT_CORE_H
 1

	)

28 
__BEGIN_DECLS


36 *
›èrg
;

50 
›töd
;

55 
›ãº
;

59 
›t›t
;

91 
	$gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

92 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

94 
__END_DECLS


	@/usr/include/bits/getopt_ext.h

20 #i‚de‡
_GETOPT_EXT_H


21 
	#_GETOPT_EXT_H
 1

	)

27 
__BEGIN_DECLS


50 
	s›ti⁄


52 c⁄° *
	m«me
;

55 
	mhas_¨g
;

56 *
	mÊag
;

57 
	mvÆ
;

62 
	#no_¨gumít
 0

	)

63 
	#ªquúed_¨gumít
 1

	)

64 
	#›ti⁄Æ_¨gumít
 2

	)

66 
	$gë›t_l⁄g
 (
___¨gc
, *
__gë›t_¨gv_c⁄°
 *
___¨gv
,

67 c⁄° *
__sh‹t›ts
,

68 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

69 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

70 
	$gë›t_l⁄g_⁄ly
 (
___¨gc
, *
__gë›t_¨gv_c⁄°
 *
___¨gv
,

71 c⁄° *
__sh‹t›ts
,

72 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

73 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

75 
__END_DECLS


	@/usr/include/bits/getopt_posix.h

20 #i‚de‡
_GETOPT_POSIX_H


21 
	#_GETOPT_POSIX_H
 1

	)

23 #i‡!
deföed
 
_UNISTD_H
 && !deföed 
_STDIO_H


27 
	~<bôs/gë›t_c‹e.h
>

29 
	g__BEGIN_DECLS


31 #i‡
deföed
 
__USE_POSIX2
 && !deföed 
__USE_POSIX_IMPLICITLY
 \

32 && !
deföed
 
	g__USE_GNU
 && !deföed 
	g_GETOPT_H


37 #ifde‡
__REDIRECT


38 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

39 c⁄° *
__sh‹t›ts
),

40 
__posix_gë›t
);

42 
	$__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

43 c⁄° *
__sh‹t›ts
)

44 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

45 
	#gë›t
 
__posix_gë›t


	)

49 
__END_DECLS


	@/usr/include/bits/libc-header-start.h

27 #i‚de‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


31 #unde‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


33 
	~<„©uªs.h
>

37 #unde‡
__GLIBC_USE_LIB_EXT2


38 #i‡(
deföed
 
__USE_GNU
 \

39 || (
deföed
 
	g__STDC_WANT_LIB_EXT2__
 && __STDC_WANT_LIB_EXT2__ > 0))

40 
	#__GLIBC_USE_LIB_EXT2
 1

	)

42 
	#__GLIBC_USE_LIB_EXT2
 0

	)

47 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT


48 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_BFP_EXT__


49 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 1

	)

51 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 0

	)

56 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT


57 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_FUNCS_EXT__


58 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 1

	)

60 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 0

	)

65 #unde‡
__GLIBC_USE_IEC_60559_TYPES_EXT


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_TYPES_EXT__


67 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 1

	)

69 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 0

	)

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

27 
	~<bôs/w‹dsize.h
>

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 #ifde‡
__USE_XOPEN2K


139 
	#_POSIX_TZNAME_MAX
 6

	)

141 
	#_POSIX_TZNAME_MAX
 3

	)

144 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


146 
	#_POSIX_QLIMIT
 1

	)

150 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

153 
	#_POSIX_UIO_MAXIOV
 16

	)

157 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

161 
	~<bôs/loˇl_lim.h
>

164 #i‚def 
SSIZE_MAX


168 #i‡
__WORDSIZE
 =64 || 
__WORDSIZE32_SIZE_ULONG


169 
	#SSIZE_MAX
 
LONG_MAX


	)

171 
	#SSIZE_MAX
 
INT_MAX


	)

179 #i‚def 
NGROUPS_MAX


180 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_COMMON_H


20 
	#_BITS_PTHREADTYPES_COMMON_H
 1

	)

23 
	~<bôs/thªad-sh¨ed-ty≥s.h
>

27 
	t±hªad_t
;

34 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

35 
	m__Æign
;

36 } 
	t±hªad_muãx©å_t
;

43 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

44 
	m__Æign
;

45 } 
	t±hªad_c⁄d©å_t
;

49 
	t±hªad_key_t
;

53 
	t__ONCE_ALIGNMENT
 
	t±hªad_⁄˚_t
;

56 
	u±hªad_©å_t


58 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

59 
	m__Æign
;

61 #i‚de‡
__have_±hªad_©å_t


62 
±hªad_©å_t
 
	t±hªad_©å_t
;

63 
	#__have_±hªad_©å_t
 1

	)

69 
__±hªad_muãx_s
 
	m__d©a
;

70 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

71 
	m__Æign
;

72 } 
	t±hªad_muãx_t
;

77 
__±hªad_c⁄d_s
 
	m__d©a
;

78 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

79 
__exãnsi⁄__
 
	m__Æign
;

80 } 
	t±hªad_c⁄d_t
;

83 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


88 
__±hªad_rwlock_¨ch_t
 
	m__d©a
;

89 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

90 
	m__Æign
;

91 } 
	t±hªad_rwlock_t
;

95 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

96 
	m__Æign
;

97 } 
	t±hªad_rwlock©å_t
;

101 #ifde‡
__USE_XOPEN2K


103 vﬁ©ûê
	t±hªad_•ölock_t
;

110 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

111 
	m__Æign
;

112 } 
	t±hªad_b¨rõr_t
;

116 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

117 
	m__Æign
;

118 } 
	t±hªad_b¨rõøâr_t
;

	@/usr/include/bits/sigaction.h

19 #i‚de‡
_BITS_SIGACTION_H


20 
	#_BITS_SIGACTION_H
 1

	)

22 #i‚de‡
_SIGNAL_H


27 
	ssiga˘i⁄


30 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


34 
__sigh™dÀr_t
 
	mß_h™dÀr
;

36 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

38 
	m__siga˘i⁄_h™dÀr
;

39 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

40 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

42 
__sigh™dÀr_t
 
	mß_h™dÀr
;

46 
__sig£t_t
 
	mß_mask
;

49 
	mß_Êags
;

52 (*
	mß_ª°‹î
) ();

56 
	#SA_NOCLDSTOP
 1

	)

57 
	#SA_NOCLDWAIT
 2

	)

58 
	#SA_SIGINFO
 4

	)

60 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_MISC


61 
	#SA_ONSTACK
 0x08000000

	)

63 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


64 
	#SA_RESTART
 0x10000000

	)

65 
	#SA_NODEFER
 0x40000000

	)

67 
	#SA_RESETHAND
 0x80000000

	)

69 #ifde‡
__USE_MISC


70 
	#SA_INTERRUPT
 0x20000000

	)

73 
	#SA_NOMASK
 
SA_NODEFER


	)

74 
	#SA_ONESHOT
 
SA_RESETHAND


	)

75 
	#SA_STACK
 
SA_ONSTACK


	)

79 
	#SIG_BLOCK
 0

	)

80 
	#SIG_UNBLOCK
 1

	)

81 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

18 #i‚de‡
_BITS_SIGCONTEXT_H


19 
	#_BITS_SIGCONTEXT_H
 1

	)

21 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


25 
	~<bôs/ty≥s.h
>

27 
	#FP_XSTATE_MAGIC1
 0x46505853U

	)

28 
	#FP_XSTATE_MAGIC2
 0x46505845U

	)

29 
	#FP_XSTATE_MAGIC2_SIZE
 (
FP_XSTATE_MAGIC2
)

	)

31 
	s_Âx_sw_byãs


33 
__uöt32_t
 
	mmagic1
;

34 
__uöt32_t
 
	mexãnded_size
;

35 
__uöt64_t
 
	mx°©e_bv
;

36 
__uöt32_t
 
	mx°©e_size
;

37 
__uöt32_t
 
	m__glibc_ª£rved1
[7];

40 
	s_Âªg


42 
	msignifiˇnd
[4];

43 
	mexp⁄ít
;

46 
	s_Âxªg


48 
	msignifiˇnd
[4];

49 
	mexp⁄ít
;

50 
	m__glibc_ª£rved1
[3];

53 
	s_xmmªg


55 
__uöt32_t
 
	mñemít
[4];

60 #i‚de‡
__x86_64__


62 
	s_Â°©e


65 
__uöt32_t
 
	mcw
;

66 
__uöt32_t
 
	msw
;

67 
__uöt32_t
 
	mèg
;

68 
__uöt32_t
 
	mùoff
;

69 
__uöt32_t
 
	mcs£l
;

70 
__uöt32_t
 
	md©aoff
;

71 
__uöt32_t
 
	md©a£l
;

72 
_Âªg
 
	m_°
[8];

73 
	m°©us
;

74 
	mmagic
;

77 
__uöt32_t
 
	m_fx§_ív
[6];

78 
__uöt32_t
 
	mmxc§
;

79 
__uöt32_t
 
	m__glibc_ª£rved1
;

80 
_Âxªg
 
	m_fx§_°
[8];

81 
_xmmªg
 
	m_xmm
[8];

82 
__uöt32_t
 
	m__glibc_ª£rved2
[56];

85 #i‚de‡
sigc⁄ãxt_°ru˘


90 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

93 
	#X86_FXSR_MAGIC
 0x0000

	)

95 
	ssigc⁄ãxt


97 
	mgs
, 
	m__gsh
;

98 
	mfs
, 
	m__fsh
;

99 
	mes
, 
	m__esh
;

100 
	mds
, 
	m__dsh
;

101 
	medi
;

102 
	mesi
;

103 
	mebp
;

104 
	me•
;

105 
	mebx
;

106 
	medx
;

107 
	mecx
;

108 
	móx
;

109 
	må≠no
;

110 
	mîr
;

111 
	meù
;

112 
	mcs
, 
	m__csh
;

113 
	meÊags
;

114 
	me•_©_sig«l
;

115 
	mss
, 
	m__ssh
;

116 
_Â°©e
 * 
	mÂ°©e
;

117 
	mﬁdmask
;

118 
	m¸2
;

123 
	s_Â°©e


126 
__uöt16_t
 
	mcwd
;

127 
__uöt16_t
 
	mswd
;

128 
__uöt16_t
 
	m·w
;

129 
__uöt16_t
 
	mf›
;

130 
__uöt64_t
 
	mrù
;

131 
__uöt64_t
 
	mrdp
;

132 
__uöt32_t
 
	mmxc§
;

133 
__uöt32_t
 
	mmx¸_mask
;

134 
_Âxªg
 
	m_°
[8];

135 
_xmmªg
 
	m_xmm
[16];

136 
__uöt32_t
 
	m__glibc_ª£rved1
[24];

139 
	ssigc⁄ãxt


141 
__uöt64_t
 
	mr8
;

142 
__uöt64_t
 
	mr9
;

143 
__uöt64_t
 
	mr10
;

144 
__uöt64_t
 
	mr11
;

145 
__uöt64_t
 
	mr12
;

146 
__uöt64_t
 
	mr13
;

147 
__uöt64_t
 
	mr14
;

148 
__uöt64_t
 
	mr15
;

149 
__uöt64_t
 
	mrdi
;

150 
__uöt64_t
 
	mrsi
;

151 
__uöt64_t
 
	mrbp
;

152 
__uöt64_t
 
	mrbx
;

153 
__uöt64_t
 
	mrdx
;

154 
__uöt64_t
 
	møx
;

155 
__uöt64_t
 
	mrcx
;

156 
__uöt64_t
 
	mr•
;

157 
__uöt64_t
 
	mrù
;

158 
__uöt64_t
 
	meÊags
;

159 
	mcs
;

160 
	mgs
;

161 
	mfs
;

162 
	m__∑d0
;

163 
__uöt64_t
 
	mîr
;

164 
__uöt64_t
 
	må≠no
;

165 
__uöt64_t
 
	mﬁdmask
;

166 
__uöt64_t
 
	m¸2
;

167 
__exãnsi⁄__
 union

169 
_Â°©e
 * 
	mÂ°©e
;

170 
__uöt64_t
 
	m__Â°©e_w‹d
;

172 
__uöt64_t
 
	m__ª£rved1
 [8];

177 
	s_xßve_hdr


179 
__uöt64_t
 
	mx°©e_bv
;

180 
__uöt64_t
 
	m__glibc_ª£rved1
[2];

181 
__uöt64_t
 
	m__glibc_ª£rved2
[5];

184 
	s_ymmh_°©e


186 
__uöt32_t
 
	mymmh_•a˚
[64];

189 
	s_x°©e


191 
_Â°©e
 
	mÂ°©e
;

192 
_xßve_hdr
 
	mx°©e_hdr
;

193 
_ymmh_°©e
 
	mymmh
;

	@/usr/include/bits/sigevent-consts.h

19 #i‚de‡
_BITS_SIGEVENT_CONSTS_H


20 
	#_BITS_SIGEVENT_CONSTS_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_AIO_H


29 
	mSIGEV_SIGNAL
 = 0,

30 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

31 
	mSIGEV_NONE
,

32 
	#SIGEV_NONE
 
SIGEV_NONE


	)

33 
	mSIGEV_THREAD
,

34 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

36 
	mSIGEV_THREAD_ID
 = 4

38 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/siginfo-consts.h

19 #i‚de‡
_BITS_SIGINFO_CONSTS_H


20 
	#_BITS_SIGINFO_CONSTS_H
 1

	)

22 #i‚de‡
_SIGNAL_H


28 
	~<bôs/sigöfo-¨ch.h
>

29 #i‚de‡
__SI_ASYNCIO_AFTER_SIGIO


30 
	#__SI_ASYNCIO_AFTER_SIGIO
 1

	)

37 
	mSI_ASYNCNL
 = -60,

38 
	mSI_DETHREAD
 = -7,

40 
	mSI_TKILL
,

41 
	mSI_SIGIO
,

42 #i‡
__SI_ASYNCIO_AFTER_SIGIO


43 
	mSI_ASYNCIO
,

44 
	mSI_MESGQ
,

45 
	mSI_TIMER
,

47 
	mSI_MESGQ
,

48 
	mSI_TIMER
,

49 
	mSI_ASYNCIO
,

51 
	mSI_QUEUE
,

52 
	mSI_USER
,

53 
	mSI_KERNEL
 = 0x80

55 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

56 
	#SI_DETHREAD
 
SI_DETHREAD


	)

57 
	#SI_TKILL
 
SI_TKILL


	)

58 
	#SI_SIGIO
 
SI_SIGIO


	)

59 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

60 
	#SI_MESGQ
 
SI_MESGQ


	)

61 
	#SI_TIMER
 
SI_TIMER


	)

62 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

63 
	#SI_QUEUE
 
SI_QUEUE


	)

64 
	#SI_USER
 
SI_USER


	)

65 
	#SI_KERNEL
 
SI_KERNEL


	)

69 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


73 
	mILL_ILLOPC
 = 1,

74 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

75 
	mILL_ILLOPN
,

76 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

77 
	mILL_ILLADR
,

78 
	#ILL_ILLADR
 
ILL_ILLADR


	)

79 
	mILL_ILLTRP
,

80 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

81 
	mILL_PRVOPC
,

82 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

83 
	mILL_PRVREG
,

84 
	#ILL_PRVREG
 
ILL_PRVREG


	)

85 
	mILL_COPROC
,

86 
	#ILL_COPROC
 
ILL_COPROC


	)

87 
	mILL_BADSTK
,

88 
	#ILL_BADSTK
 
ILL_BADSTK


	)

89 
	mILL_BADIADDR


90 
	#ILL_BADIADDR
 
ILL_BADIADDR


	)

96 
	mFPE_INTDIV
 = 1,

97 
	#FPE_INTDIV
 
FPE_INTDIV


	)

98 
	mFPE_INTOVF
,

99 
	#FPE_INTOVF
 
FPE_INTOVF


	)

100 
	mFPE_FLTDIV
,

101 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

102 
	mFPE_FLTOVF
,

103 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

104 
	mFPE_FLTUND
,

105 
	#FPE_FLTUND
 
FPE_FLTUND


	)

106 
	mFPE_FLTRES
,

107 
	#FPE_FLTRES
 
FPE_FLTRES


	)

108 
	mFPE_FLTINV
,

109 
	#FPE_FLTINV
 
FPE_FLTINV


	)

110 
	mFPE_FLTSUB
,

111 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

112 
	mFPE_FLTUNK
 = 14,

113 
	#FPE_FLTUNK
 
FPE_FLTUNK


	)

114 
	mFPE_CONDTRAP


115 
	#FPE_CONDTRAP
 
FPE_CONDTRAP


	)

121 
	mSEGV_MAPERR
 = 1,

122 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

123 
	mSEGV_ACCERR
,

124 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

125 
	mSEGV_BNDERR
,

126 
	#SEGV_BNDERR
 
SEGV_BNDERR


	)

127 
	mSEGV_PKUERR
,

128 
	#SEGV_PKUERR
 
SEGV_PKUERR


	)

129 
	mSEGV_ACCADI
,

130 
	#SEGV_ACCADI
 
SEGV_ACCADI


	)

131 
	mSEGV_ADIDERR
,

132 
	#SEGV_ADIDERR
 
SEGV_ADIDERR


	)

133 
	mSEGV_ADIPERR


134 
	#SEGV_ADIPERR
 
SEGV_ADIPERR


	)

140 
	mBUS_ADRALN
 = 1,

141 
	#BUS_ADRALN
 
BUS_ADRALN


	)

142 
	mBUS_ADRERR
,

143 
	#BUS_ADRERR
 
BUS_ADRERR


	)

144 
	mBUS_OBJERR
,

145 
	#BUS_OBJERR
 
BUS_OBJERR


	)

146 
	mBUS_MCEERR_AR
,

147 
	#BUS_MCEERR_AR
 
BUS_MCEERR_AR


	)

148 
	mBUS_MCEERR_AO


149 
	#BUS_MCEERR_AO
 
BUS_MCEERR_AO


	)

153 #ifde‡
__USE_XOPEN_EXTENDED


157 
	mTRAP_BRKPT
 = 1,

158 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

159 
	mTRAP_TRACE
,

160 
	#TRAP_TRACE
 
TRAP_TRACE


	)

161 
	mTRAP_BRANCH
,

162 
	#TRAP_BRANCH
 
TRAP_BRANCH


	)

163 
	mTRAP_HWBKPT
,

164 
	#TRAP_HWBKPT
 
TRAP_HWBKPT


	)

165 
	mTRAP_UNK


166 
	#TRAP_UNK
 
TRAP_UNK


	)

170 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


174 
	mCLD_EXITED
 = 1,

175 
	#CLD_EXITED
 
CLD_EXITED


	)

176 
	mCLD_KILLED
,

177 
	#CLD_KILLED
 
CLD_KILLED


	)

178 
	mCLD_DUMPED
,

179 
	#CLD_DUMPED
 
CLD_DUMPED


	)

180 
	mCLD_TRAPPED
,

181 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

182 
	mCLD_STOPPED
,

183 
	#CLD_STOPPED
 
CLD_STOPPED


	)

184 
	mCLD_CONTINUED


185 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

191 
	mPOLL_IN
 = 1,

192 
	#POLL_IN
 
POLL_IN


	)

193 
	mPOLL_OUT
,

194 
	#POLL_OUT
 
POLL_OUT


	)

195 
	mPOLL_MSG
,

196 
	#POLL_MSG
 
POLL_MSG


	)

197 
	mPOLL_ERR
,

198 
	#POLL_ERR
 
POLL_ERR


	)

199 
	mPOLL_PRI
,

200 
	#POLL_PRI
 
POLL_PRI


	)

201 
	mPOLL_HUP


202 
	#POLL_HUP
 
POLL_HUP


	)

208 #ifde‡
__USE_GNU


209 
	~<bôs/sigöfo-c⁄°s-¨ch.h
>

	@/usr/include/bits/signum.h

19 #i‚de‡
_BITS_SIGNUM_H


20 
	#_BITS_SIGNUM_H
 1

	)

22 #i‚de‡
_SIGNAL_H


26 
	~<bôs/signum-gíîic.h
>

31 
	#SIGSTKFLT
 16

	)

32 
	#SIGPWR
 30

	)

34 #unde‡
SIGBUS


35 
	#SIGBUS
 7

	)

36 #unde‡
SIGUSR1


37 
	#SIGUSR1
 10

	)

38 #unde‡
SIGUSR2


39 
	#SIGUSR2
 12

	)

40 #unde‡
SIGCHLD


41 
	#SIGCHLD
 17

	)

42 #unde‡
SIGCONT


43 
	#SIGCONT
 18

	)

44 #unde‡
SIGSTOP


45 
	#SIGSTOP
 19

	)

46 #unde‡
SIGTSTP


47 
	#SIGTSTP
 20

	)

48 #unde‡
SIGURG


49 
	#SIGURG
 23

	)

50 #unde‡
SIGPOLL


51 
	#SIGPOLL
 29

	)

52 #unde‡
SIGSYS


53 
	#SIGSYS
 31

	)

55 #unde‡
__SIGRTMAX


56 
	#__SIGRTMAX
 64

	)

	@/usr/include/bits/sigstack.h

19 #i‚de‡
_BITS_SIGSTACK_H


20 
	#_BITS_SIGSTACK_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


27 
	#MINSIGSTKSZ
 2048

	)

30 
	#SIGSTKSZ
 8192

	)

	@/usr/include/bits/sigthread.h

19 #i‚de‡
_BITS_SIGTHREAD_H


20 
	#_BITS_SIGTHREAD_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/ty≥s/__sig£t_t.h
>

31 
	$±hªad_sigmask
 (
__how
,

32 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/ss_flags.h

19 #i‚de‡
_BITS_SS_FLAGS_H


20 
	#_BITS_SS_FLAGS_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


29 
	mSS_ONSTACK
 = 1,

30 
	#SS_ONSTACK
 
SS_ONSTACK


	)

31 
	mSS_DISABLE


32 
	#SS_DISABLE
 
SS_DISABLE


	)

	@/usr/include/bits/stat.h

18 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_STAT_H


23 
	#_BITS_STAT_H
 1

	)

26 #i‚de‡
__x86_64__


27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

33 
	#_MKNOD_VER_LINUX
 1

	)

34 
	#_MKNOD_VER_SVR4
 2

	)

35 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

37 
	#_STAT_VER_KERNEL
 0

	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‚de‡
__x86_64__


50 
	m__∑d1
;

52 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‚de‡
__x86_64__


58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #ifde‡
__x86_64__


67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‚de‡
__x86_64__


71 
	m__∑d2
;

73 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #ifde‡
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

105 #ifde‡
__x86_64__


106 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__glibc_ª£rved4
;

110 
	m__glibc_ª£rved5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #ifde‡
__x86_64__


123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #ifde‡
__x86_64__


135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #ifde‡
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

156 
__time_t
 
	m°_©ime
;

157 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

163 #ifde‡
__x86_64__


164 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/statx.h

21 #i‚de‡
_SYS_STAT_H


22 #îr‹ 
Nevî
 
ö˛ude
 <
bôs
/
°©
.
x
.
h
> 
dúe˘ly
, in˛udê<
sys
/°©.h> 
ö°ód
.

25 
	s°©x_time°amp


27 
__öt64_t
 
	mtv_£c
;

28 
__uöt32_t
 
	mtv_n£c
;

29 
__öt32_t
 
	m__°©x_time°amp_∑d1
[1];

36 
	s°©x


38 
__uöt32_t
 
	m°x_mask
;

39 
__uöt32_t
 
	m°x_blksize
;

40 
__uöt64_t
 
	m°x_©åibuãs
;

41 
__uöt32_t
 
	m°x_∆ök
;

42 
__uöt32_t
 
	m°x_uid
;

43 
__uöt32_t
 
	m°x_gid
;

44 
__uöt16_t
 
	m°x_mode
;

45 
__uöt16_t
 
	m__°©x_∑d1
[1];

46 
__uöt64_t
 
	m°x_öo
;

47 
__uöt64_t
 
	m°x_size
;

48 
__uöt64_t
 
	m°x_blocks
;

49 
__uöt64_t
 
	m°x_©åibuãs_mask
;

50 
°©x_time°amp
 
	m°x_©ime
;

51 
°©x_time°amp
 
	m°x_btime
;

52 
°©x_time°amp
 
	m°x_˘ime
;

53 
°©x_time°amp
 
	m°x_mtime
;

54 
__uöt32_t
 
	m°x_rdev_maj‹
;

55 
__uöt32_t
 
	m°x_rdev_mö‹
;

56 
__uöt32_t
 
	m°x_dev_maj‹
;

57 
__uöt32_t
 
	m°x_dev_mö‹
;

58 
__uöt64_t
 
	m__°©x_∑d2
[14];

61 
	#STATX_TYPE
 0x0001U

	)

62 
	#STATX_MODE
 0x0002U

	)

63 
	#STATX_NLINK
 0x0004U

	)

64 
	#STATX_UID
 0x0008U

	)

65 
	#STATX_GID
 0x0010U

	)

66 
	#STATX_ATIME
 0x0020U

	)

67 
	#STATX_MTIME
 0x0040U

	)

68 
	#STATX_CTIME
 0x0080U

	)

69 
	#STATX_INO
 0x0100U

	)

70 
	#STATX_SIZE
 0x0200U

	)

71 
	#STATX_BLOCKS
 0x0400U

	)

72 
	#STATX_BASIC_STATS
 0x07ffU

	)

73 
	#STATX_ALL
 0x0fffU

	)

74 
	#STATX_BTIME
 0x0800U

	)

75 
	#STATX__RESERVED
 0x80000000U

	)

77 
	#STATX_ATTR_COMPRESSED
 0x0004

	)

78 
	#STATX_ATTR_IMMUTABLE
 0x0010

	)

79 
	#STATX_ATTR_APPEND
 0x0020

	)

80 
	#STATX_ATTR_NODUMP
 0x0040

	)

81 
	#STATX_ATTR_ENCRYPTED
 0x0800

	)

82 
	#STATX_ATTR_AUTOMOUNT
 0x1000

	)

84 
__BEGIN_DECLS


87 
	$°©x
 (
__dúfd
, c⁄° *
__ª°ri˘
 
__∑th
, 
__Êags
,

88 
__mask
, 
°©x
 *
__ª°ri˘
 
__buf
)

89 
__THROW
 
	`__n⁄nuŒ
 ((2, 5));

91 
__END_DECLS


	@/usr/include/bits/stdint-intn.h

19 #i‚de‡
_BITS_STDINT_INTN_H


20 
	#_BITS_STDINT_INTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__öt8_t
 
	töt8_t
;

25 
__öt16_t
 
	töt16_t
;

26 
__öt32_t
 
	töt32_t
;

27 
__öt64_t
 
	töt64_t
;

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

24 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

25 
	$__LDBL_REDIR_DECL
 (
•rötf
)

26 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

27 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

28 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

29 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

30 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

31 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

32 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

34 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

35 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

36 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

39 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


40 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

41 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

44 #ifdef 
__USE_ISOC99


45 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

46 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

47 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

48 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

50 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

51 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

52 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

56 #ifde‡
__USE_XOPEN2K8


57 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

58 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

61 #ifde‡
__USE_GNU


62 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

63 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

64 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

65 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

66 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


70 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

72 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


73 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

74 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 1

77 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

79 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

81 #ifde‡
__USE_XOPEN2K8


82 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

85 #ifde‡
__USE_GNU


86 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_BITS_STDIO_H


20 
	#_BITS_STDIO_H
 1

	)

22 #i‚de‡
_STDIO_H


26 #i‚de‡
__exã∫_ölöe


27 
	#__STDIO_INLINE
 
ölöe


	)

29 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

33 #ifde‡
__USE_EXTERN_INLINES


36 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

38 
__STDIO_INLINE
 

39 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

41  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

42 
	}
}

46 
__STDIO_INLINE
 

47 
	$gëch¨
 ()

49  
	`gëc
 (
°dö
);

50 
	}
}

53 #ifde‡
__USE_MISC


55 
__STDIO_INLINE
 

56 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

58  
	`__gëc_u∆ocked_body
 (
__Â
);

59 
	}
}

63 #ifde‡
__USE_POSIX


65 
__STDIO_INLINE
 

66 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

68  
	`__gëc_u∆ocked_body
 (
__Â
);

69 
	}
}

72 
__STDIO_INLINE
 

73 
	$gëch¨_u∆ocked
 ()

75  
	`__gëc_u∆ocked_body
 (
°dö
);

76 
	}
}

81 
__STDIO_INLINE
 

82 
	$putch¨
 (
__c
)

84  
	`putc
 (
__c
, 
°dout
);

85 
	}
}

88 #ifde‡
__USE_MISC


90 
__STDIO_INLINE
 

91 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

93  
	`__putc_u∆ocked_body
 (
__c
, 
__°ªam
);

94 
	}
}

98 #ifde‡
__USE_POSIX


100 
__STDIO_INLINE
 

101 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

103  
	`__putc_u∆ocked_body
 (
__c
, 
__°ªam
);

104 
	}
}

107 
__STDIO_INLINE
 

108 
	$putch¨_u∆ocked
 (
__c
)

110  
	`__putc_u∆ocked_body
 (
__c
, 
°dout
);

111 
	}
}

115 #ifdef 
__USE_GNU


117 
__STDIO_INLINE
 
__ssize_t


118 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

120  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

121 
	}
}

125 #ifde‡
__USE_MISC


127 
__STDIO_INLINE
 

128 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

130  
	`__„of_u∆ocked_body
 (
__°ªam
);

131 
	}
}

134 
__STDIO_INLINE
 

135 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

137  
	`__„º‹_u∆ocked_body
 (
__°ªam
);

138 
	}
}

144 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

145 && !
deföed
 
	g__˝lu•lus


147 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

148 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

149 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

150 && (
size_t
Ë(
size
) != 0) \

151 ? ({ *
__±r
 = (*Ë(
±r
); \

152 
FILE
 *
__°ªam
 = (
°ªam
); \

153 
size_t
 
__˙t
; \

154 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

155 
__˙t
 > 0; --__cnt) \

157 
__c
 = 
	`gëc_u∆ocked
 (
__°ªam
); \

158 i‡(
__c
 =
EOF
) \

160 *
__±r
++ = 
__c
; \

162 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

163 / (
size_t
Ë(
size
); }) \

164 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

165 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

167 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

168 (Ë(
n
), (
size_t
) 0) \

169 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

171 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

172 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

173 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

174 && (
size_t
Ë(
size
) != 0) \

175 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

176 
FILE
 *
__°ªam
 = (
°ªam
); \

177 
size_t
 
__˙t
; \

178 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

179 
__˙t
 > 0; --__cnt) \

180 i‡(
	`putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

182 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

183 / (
size_t
Ë(
size
); }) \

184 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

185 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

187 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

188 (Ë(
n
), (
size_t
) 0) \

189 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

193 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_BITS_STDIO2_H


20 
	#_BITS_STDIO2_H
 1

	)

22 #i‚de‡
_STDIO_H


26 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

28 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

29 c⁄° *
__ª°ri˘
 
__f‹m©
,

30 
__gnuc_va_li°
 
__≠
Ë
__THROW
;

32 #ifde‡
__va_¨g_∑ck


33 
__f‹tify_fun˘i⁄
 

34 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

36  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

37 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

38 
	}
}

39 #ñi‡!
deföed
 
__˝lu•lus


40 
	#•rötf
(
°r
, ...) \

41 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

42 
__VA_ARGS__
)

	)

45 
__f‹tify_fun˘i⁄
 

46 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

47 
__gnuc_va_li°
 
__≠
))

49  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

50 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

51 
	}
}

53 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


55 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 ...Ë
__THROW
;

58 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

59 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

60 
__gnuc_va_li°
 
__≠
Ë
__THROW
;

62 #ifde‡
__va_¨g_∑ck


63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

65 c⁄° *
__ª°ri˘
 
__fmt
, ...))

67  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

68 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

69 
	}
}

70 #ñi‡!
deföed
 
__˝lu•lus


71 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

72 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

73 
__VA_ARGS__
)

	)

76 
__f‹tify_fun˘i⁄
 

77 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

78 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

80  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

81 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

82 
	}
}

86 #i‡
__USE_FORTIFY_LEVEL
 > 1

88 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

90 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

91 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

92 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__≠
);

93 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

94 
__gnuc_va_li°
 
__≠
);

96 #ifde‡
__va_¨g_∑ck


97 
__f‹tify_fun˘i⁄
 

98 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

100  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

101 
	`__va_¨g_∑ck
 ());

102 
	}
}

104 
__f‹tify_fun˘i⁄
 

105 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

107  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

108 
	}
}

109 #ñi‡!
deföed
 
__˝lu•lus


110 
	#¥ötf
(...) \

111 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

112 
	#Ârötf
(
°ªam
, ...) \

113 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

116 
__f‹tify_fun˘i⁄
 

117 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

119 #ifde‡
__USE_EXTERN_INLINES


120  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

124 
	}
}

126 
__f‹tify_fun˘i⁄
 

127 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

128 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

130  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

131 
	}
}

133 #ifde‡
__USE_XOPEN2K8


134 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

135 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

136 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

137 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

138 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

140 #ifde‡
__va_¨g_∑ck


141 
__f‹tify_fun˘i⁄
 

142 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

144  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

145 
	`__va_¨g_∑ck
 ());

146 
	}
}

147 #ñi‡!
deföed
 
__˝lu•lus


148 
	#d¥ötf
(
fd
, ...) \

149 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

152 
__f‹tify_fun˘i⁄
 

153 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

155  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

156 
	}
}

159 #ifde‡
__USE_GNU


161 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, ...)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

164 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

165 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

166 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

167 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

168 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

170 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

171 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

172 
__Êag
,

173 c⁄° *
__ª°ri˘
 
__f‹m©
,

174 
__gnuc_va_li°
 
__¨gs
)

175 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

177 #ifde‡
__va_¨g_∑ck


178 
__f‹tify_fun˘i⁄
 

179 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

181  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

185 
__f‹tify_fun˘i⁄
 

186 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

189  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

190 
	`__va_¨g_∑ck
 ());

191 
	}
}

193 
__f‹tify_fun˘i⁄
 

194 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

195 c⁄° *
__ª°ri˘
 
__fmt
, ...))

197  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

198 
	`__va_¨g_∑ck
 ());

199 
	}
}

200 #ñi‡!
deföed
 
__˝lu•lus


201 
	#a•rötf
(
±r
, ...) \

202 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

203 
	#__a•rötf
(
±r
, ...) \

204 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

205 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

206 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

209 
__f‹tify_fun˘i⁄
 

210 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

211 
__gnuc_va_li°
 
__≠
))

213  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

214 
	}
}

216 
__f‹tify_fun˘i⁄
 

217 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

218 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

220  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

221 
__≠
);

222 
	}
}

228 #i‡
__GLIBC_USE
 (
DEPRECATED_GETS
)

229 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

230 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

231 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

234 
__f‹tify_fun˘i⁄
 
__wur
 *

235 
	$gës
 (*
__°r
)

237 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

238  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

239  
	`__gës_w¨n
 (
__°r
);

240 
	}
}

243 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

244 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

245 *
	`__REDIRECT
 (
__fgës_Æüs
,

246 (*
__ª°ri˘
 
__s
, 
__n
,

247 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

248 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

249 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

250 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

251 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

254 
__f‹tify_fun˘i⁄
 
__wur
 *

255 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

257 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

259 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

260  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

262 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

263  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

265  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

266 
	}
}

268 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

269 
size_t
 
__size
, size_à
__n
,

270 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

271 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

272 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

273 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

274 
‰ód
Ë
__wur
;

275 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

276 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

277 
size_t
 
__size
, size_à
__n
,

278 
FILE
 *
__ª°ri˘
 
__°ªam
),

279 
__‰ód_chk
)

280 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

283 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


284 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

285 
FILE
 *
__ª°ri˘
 
__°ªam
)

287 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

289 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

290 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

291 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

292  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

294 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

295  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

297  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

298 
	}
}

300 #ifde‡
__USE_GNU


301 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

302 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

303 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

304 (*
__ª°ri˘
 
__s
, 
__n
,

305 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

306 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

307 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

308 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

309 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

312 
__f‹tify_fun˘i⁄
 
__wur
 *

313 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

315 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

317 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

318  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

320 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

321  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

323  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

324 
	}
}

327 #ifde‡
__USE_MISC


328 #unde‡
‰ód_u∆ocked


329 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

330 
size_t
 
__size
, size_à
__n
,

331 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

332 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

333 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

334 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

335 
‰ód_u∆ocked
Ë
__wur
;

336 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

337 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

338 
size_t
 
__size
, size_à
__n
,

339 
FILE
 *
__ª°ri˘
 
__°ªam
),

340 
__‰ód_u∆ocked_chk
)

341 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

344 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


345 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

346 
FILE
 *
__ª°ri˘
 
__°ªam
)

348 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

350 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

351 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

352 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

353  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

354 
__°ªam
);

356 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

357  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

358 
__°ªam
);

361 #ifde‡
__USE_EXTERN_INLINES


362 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

363 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

364 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

365 && 
__size
 * 
__n
 <= 8)

367 
size_t
 
__˙t
 = 
__size
 * 
__n
;

368 *
__˝å
 = (*Ë
__±r
;

369 i‡(
__˙t
 == 0)

372 ; 
__˙t
 > 0; --__cnt)

374 
__c
 = 
	`gëc_u∆ocked
 (
__°ªam
);

375 i‡(
__c
 =
EOF
)

377 *
__˝å
++ = 
__c
;

379  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

382  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

383 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‚de‡
_BITS_STDIO_LIM_H


19 
	#_BITS_STDIO_LIM_H
 1

	)

21 #i‚de‡
_STDIO_H


25 
	#L_tm≤am
 20

	)

26 
	#TMP_MAX
 238328

	)

27 
	#FILENAME_MAX
 4096

	)

29 #ifde‡
__USE_POSIX


30 
	#L_˘îmid
 9

	)

31 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


32 
	#L_cu£rid
 9

	)

36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__exã∫_ölöe
 

25 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

27  
	`°πod
 (
__≈å
, (**Ë
NULL
);

28 
	}
}

	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 #ifde‡
__USE_GNU


28 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

31 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

32 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
°r‰omd
)

35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string_fortified.h

18 #i‚de‡
_BITS_STRING_FORTIFIED_H


19 
	#_BITS_STRING_FORTIFIED_H
 1

	)

21 #i‚de‡
_STRING_H


25 #i‡!
__GNUC_PREREQ
 (5,0)

26 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

30 
__f‹tify_fun˘i⁄
 *

31 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

32 
size_t
 
__Àn
))

34  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

35 
	}
}

37 
__f‹tify_fun˘i⁄
 *

38 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

40  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

41 
	}
}

43 #ifde‡
__USE_GNU


44 
__f‹tify_fun˘i⁄
 *

45 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

46 
size_t
 
__Àn
))

48  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

49 
	}
}

58 
__f‹tify_fun˘i⁄
 *

59 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

63 #i‡!
	`__GNUC_PREREQ
 (5,0)

64 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

65 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

67 
	`__w¨n_mem£t_zîo_Àn
 ();

68  
__de°
;

71  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

72 
	}
}

74 #ifde‡
__USE_MISC


75 
	~<bôs/°rögs_f‹tifõd.h
>

77 
	$__ex∂icô_bzîo_chk
 (*
__de°
, 
size_t
 
__Àn
, size_à
__de°Àn
)

78 
__THROW
 
	`__n⁄nuŒ
 ((1));

80 
__f‹tify_fun˘i⁄
 

81 
	`__NTH
 (
	$ex∂icô_bzîo
 (*
__de°
, 
size_t
 
__Àn
))

83 
	`__ex∂icô_bzîo_chk
 (
__de°
, 
__Àn
, 
	`__bos0
 (__dest));

84 
	}
}

87 
__f‹tify_fun˘i⁄
 *

88 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

90  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

91 
	}
}

93 #ifde‡
__USE_GNU


94 
__f‹tify_fun˘i⁄
 *

95 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

97  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

98 
	}
}

102 
__f‹tify_fun˘i⁄
 *

103 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

104 
size_t
 
__Àn
))

106  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

107 
	}
}

110 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

111 
size_t
 
__de°Àn
Ë
__THROW
;

112 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

113 
size_t
 
__n
), 
°≤˝y
);

115 
__f‹tify_fun˘i⁄
 *

116 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

118 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

119 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos
 (
__de°
)))

120  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

121  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

122 
	}
}

125 
__f‹tify_fun˘i⁄
 *

126 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

128  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

129 
	}
}

132 
__f‹tify_fun˘i⁄
 *

133 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

134 
size_t
 
__Àn
))

136  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

137 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_MISC


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

23 #i‚de‡
_BITS_TIME_H


24 
	#_BITS_TIME_H
 1

	)

26 
	~<bôs/ty≥s.h
>

34 
	#CLOCKS_PER_SEC
 ((
__˛ock_t
Ë1000000)

	)

36 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

37 && !
deföed
 
__USE_XOPEN2K


40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

60 
	#CLOCK_BOOTTIME
 7

	)

62 
	#CLOCK_REALTIME_ALARM
 8

	)

64 
	#CLOCK_BOOTTIME_ALARM
 9

	)

66 
	#CLOCK_TAI
 11

	)

69 
	#TIMER_ABSTIME
 1

	)

72 #ifde‡
__USE_GNU


73 
	~<bôs/timex.h
>

75 
__BEGIN_DECLS


78 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

80 
__END_DECLS


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/timesize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 
__öt8_t
 
	t__öt_Àa°8_t
;

53 
__uöt8_t
 
	t__uöt_Àa°8_t
;

54 
__öt16_t
 
	t__öt_Àa°16_t
;

55 
__uöt16_t
 
	t__uöt_Àa°16_t
;

56 
__öt32_t
 
	t__öt_Àa°32_t
;

57 
__uöt32_t
 
	t__uöt_Àa°32_t
;

58 
__öt64_t
 
	t__öt_Àa°64_t
;

59 
__uöt64_t
 
	t__uöt_Àa°64_t
;

62 #i‡
__WORDSIZE
 == 64

63 
	t__quad_t
;

64 
	t__u_quad_t
;

66 
__exãnsi⁄__
 
	t__quad_t
;

67 
__exãnsi⁄__
 
	t__u_quad_t
;

71 #i‡
__WORDSIZE
 == 64

72 
	t__ötmax_t
;

73 
	t__uötmax_t
;

75 
__exãnsi⁄__
 
	t__ötmax_t
;

76 
__exãnsi⁄__
 
	t__uötmax_t
;

109 
	#__S16_TYPE
 

	)

110 
	#__U16_TYPE
 

	)

111 
	#__S32_TYPE
 

	)

112 
	#__U32_TYPE
 

	)

113 
	#__SLONGWORD_TYPE
 

	)

114 
	#__ULONGWORD_TYPE
 

	)

115 #i‡
__WORDSIZE
 == 32

116 
	#__SQUAD_TYPE
 
__quad_t


	)

117 
	#__UQUAD_TYPE
 
__u_quad_t


	)

118 
	#__SWORD_TYPE
 

	)

119 
	#__UWORD_TYPE
 

	)

120 
	#__SLONG32_TYPE
 

	)

121 
	#__ULONG32_TYPE
 

	)

122 
	#__S64_TYPE
 
__quad_t


	)

123 
	#__U64_TYPE
 
__u_quad_t


	)

126 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

127 #ñi‡
__WORDSIZE
 == 64

128 
	t__SQUAD_TYPE
 

	)

129 
	t__UQUAD_TYPE
 

	)

130 
	t__SWORD_TYPE
 

	)

131 
	t__UWORD_TYPE
 

	)

132 
	t__SLONG32_TYPE
 

	)

133 
	t__ULONG32_TYPE
 

	)

134 
	t__S64_TYPE
 

	)

135 
	t__U64_TYPE
 

	)

137 
	t__STD_TYPE
 

	)

141 
	~<bôs/ty≥sizes.h
>

142 
	~<bôs/time64.h
>

145 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

146 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

147 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

148 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

149 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

150 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

151 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

152 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

153 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

154 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

155 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

156 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

157 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

158 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

159 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

160 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

161 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

162 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

164 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

165 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

168 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

171 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

174 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

179 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

180 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

183 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

184 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

187 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

188 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

191 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

193 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

196 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

198 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

202 
__off64_t
 
	t__loff_t
;

203 *
	t__ˇddr_t
;

206 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

209 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

214 
	t__sig_©omic_t
;

216 #i‡
__TIMESIZE
 == 64

217 
	#__time64_t
 
__time_t


	)

219 
__STD_TYPE
 
__TIME64_T_TYPE
 
	g__time64_t
;

222 #unde‡
__STD_TYPE


	@/usr/include/bits/types/FILE.h

1 #i‚de‡
__FILE_deföed


2 
	#__FILE_deföed
 1

	)

4 
	g_IO_FILE
;

7 
_IO_FILE
 
	tFILE
;

	@/usr/include/bits/types/__FILE.h

1 #i‚de‡
____FILE_deföed


2 
	#____FILE_deföed
 1

	)

4 
	g_IO_FILE
;

5 
_IO_FILE
 
	t__FILE
;

	@/usr/include/bits/types/__fpos64_t.h

1 #i‚de‡
_____Âos64_t_deföed


2 
	#_____Âos64_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/__mb°©e_t.h
>

10 
	s_G_Âos64_t


12 
__off64_t
 
	m__pos
;

13 
__mb°©e_t
 
	m__°©e
;

14 } 
	t__Âos64_t
;

	@/usr/include/bits/types/__fpos_t.h

1 #i‚de‡
_____Âos_t_deföed


2 
	#_____Âos_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/__mb°©e_t.h
>

10 
	s_G_Âos_t


12 
__off_t
 
	m__pos
;

13 
__mb°©e_t
 
	m__°©e
;

14 } 
	t__Âos_t
;

	@/usr/include/bits/types/clock_t.h

1 #i‚de‡
__˛ock_t_deföed


2 
	#__˛ock_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ock_t
 
	t˛ock_t
;

	@/usr/include/bits/types/clockid_t.h

1 #i‚de‡
__˛ockid_t_deföed


2 
	#__˛ockid_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ockid_t
 
	t˛ockid_t
;

	@/usr/include/bits/types/cookie_io_functions_t.h

18 #i‚de‡
__cookõ_io_fun˘i⁄s_t_deföed


19 
	#__cookõ_io_fun˘i⁄s_t_deföed
 1

	)

21 
	~<bôs/ty≥s.h
>

27 
__ssize_t
 
	tcookõ_ªad_fun˘i⁄_t
 (*
	t__cookõ
, *
	t__buf
,

28 
	tsize_t
 
	t__nbyãs
);

36 
__ssize_t
 
	tcookõ_wrôe_fun˘i⁄_t
 (*
	t__cookõ
, c⁄° *
	t__buf
,

37 
	tsize_t
 
	t__nbyãs
);

45 
	tcookõ_£ek_fun˘i⁄_t
 (*
	t__cookõ
, 
	t__off64_t
 *
	t__pos
, 
	t__w
);

48 
	tcookõ_˛o£_fun˘i⁄_t
 (*
	t__cookõ
);

55 
	s_IO_cookõ_io_fun˘i⁄s_t


57 
cookõ_ªad_fun˘i⁄_t
 *
	mªad
;

58 
cookõ_wrôe_fun˘i⁄_t
 *
	mwrôe
;

59 
cookõ_£ek_fun˘i⁄_t
 *
	m£ek
;

60 
cookõ_˛o£_fun˘i⁄_t
 *
	m˛o£
;

61 } 
	tcookõ_io_fun˘i⁄s_t
;

	@/usr/include/bits/types/locale_t.h

19 #i‚de‡
_BITS_TYPES_LOCALE_T_H


20 
	#_BITS_TYPES_LOCALE_T_H
 1

	)

22 
	~<bôs/ty≥s/__loˇÀ_t.h
>

24 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/bits/types/sig_atomic_t.h

1 #i‚de‡
__sig_©omic_t_deföed


2 
	#__sig_©omic_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
__sig_©omic_t
 
	tsig_©omic_t
;

	@/usr/include/bits/types/sigevent_t.h

1 #i‚de‡
__sigevít_t_deföed


2 
	#__sigevít_t_deföed
 1

	)

4 
	~<bôs/w‹dsize.h
>

5 
	~<bôs/ty≥s.h
>

6 
	~<bôs/ty≥s/__sigvÆ_t.h
>

8 
	#__SIGEV_MAX_SIZE
 64

	)

9 #i‡
__WORDSIZE
 == 64

10 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

12 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

16 #i‚de‡
__have_±hªad_©å_t


17 
±hªad_©å_t
 
	t±hªad_©å_t
;

18 
	#__have_±hªad_©å_t
 1

	)

22 
	ssigevít


24 
__sigvÆ_t
 
	msigev_vÆue
;

25 
	msigev_signo
;

26 
	msigev_nŸify
;

30 
	m_∑d
[
__SIGEV_PAD_SIZE
];

34 
__pid_t
 
	m_tid
;

38 (*
	m_fun˘i⁄
Ë(
	m__sigvÆ_t
);

39 
±hªad_©å_t
 *
	m_©åibuã
;

40 } 
	m_sigev_thªad
;

41 } 
	m_sigev_un
;

42 } 
	tsigevít_t
;

45 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

46 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

	@/usr/include/bits/types/siginfo_t.h

1 #i‚de‡
__sigöfo_t_deföed


2 
	#__sigöfo_t_deföed
 1

	)

4 
	~<bôs/w‹dsize.h
>

5 
	~<bôs/ty≥s.h
>

6 
	~<bôs/ty≥s/__sigvÆ_t.h
>

8 
	#__SI_MAX_SIZE
 128

	)

9 #i‡
__WORDSIZE
 == 64

10 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

12 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

16 
	~<bôs/sigöfo-¨ch.h
>

17 #i‚de‡
__SI_ALIGNMENT


18 
	#__SI_ALIGNMENT


	)

20 #i‚de‡
__SI_BAND_TYPE


21 
	#__SI_BAND_TYPE
 

	)

23 #i‚de‡
__SI_CLOCK_T


24 
	#__SI_CLOCK_T
 
__˛ock_t


	)

26 #i‚de‡
__SI_ERRNO_THEN_CODE


27 
	#__SI_ERRNO_THEN_CODE
 1

	)

29 #i‚de‡
__SI_HAVE_SIGSYS


30 
	#__SI_HAVE_SIGSYS
 1

	)

32 #i‚de‡
__SI_SIGFAULT_ADDL


33 
	#__SI_SIGFAULT_ADDL


	)

38 
	msi_signo
;

39 #i‡
__SI_ERRNO_THEN_CODE


40 
	msi_î∫o
;

42 
	msi_code
;

44 
	msi_code
;

45 
	msi_î∫o
;

47 #i‡
__WORDSIZE
 == 64

48 
	m__∑d0
;

53 
	m_∑d
[
__SI_PAD_SIZE
];

58 
__pid_t
 
	msi_pid
;

59 
__uid_t
 
	msi_uid
;

60 } 
	m_kûl
;

65 
	msi_tid
;

66 
	msi_ovîrun
;

67 
__sigvÆ_t
 
	msi_sigvÆ
;

68 } 
	m_timî
;

73 
__pid_t
 
	msi_pid
;

74 
__uid_t
 
	msi_uid
;

75 
__sigvÆ_t
 
	msi_sigvÆ
;

76 } 
	m_π
;

81 
__pid_t
 
	msi_pid
;

82 
__uid_t
 
	msi_uid
;

83 
	msi_°©us
;

84 
__SI_CLOCK_T
 
	msi_utime
;

85 
__SI_CLOCK_T
 
	msi_°ime
;

86 } 
	m_sigchld
;

91 *
	msi_addr
;

92 
__SI_SIGFAULT_ADDL


93 
	msi_addr_lsb
;

99 *
	m_lowî
;

100 *
	m_uµî
;

101 } 
	m_addr_bnd
;

103 
__uöt32_t
 
	m_pkey
;

104 } 
	m_bounds
;

105 } 
	m_sigÁu…
;

110 
__SI_BAND_TYPE
 
	msi_b™d
;

111 
	msi_fd
;

112 } 
	m_sigpﬁl
;

115 #i‡
__SI_HAVE_SIGSYS


118 *
	m_ˇŒ_addr
;

119 
	m_sysˇŒ
;

120 
	m_¨ch
;

121 } 
	m_sigsys
;

123 } 
	m_sifõlds
;

124 } 
	tsigöfo_t
 
	t__SI_ALIGNMENT
;

128 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

129 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

130 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

131 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

132 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

133 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

134 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

135 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

136 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

137 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

138 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

139 
	#si_addr_lsb
 
_sifõlds
.
_sigÁu…
.
si_addr_lsb


	)

140 
	#si_lowî
 
_sifõlds
.
_sigÁu…
.
_bounds
.
_addr_bnd
.
_lowî


	)

141 
	#si_uµî
 
_sifõlds
.
_sigÁu…
.
_bounds
.
_addr_bnd
.
_uµî


	)

142 
	#si_pkey
 
_sifõlds
.
_sigÁu…
.
_bounds
.
_pkey


	)

143 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

144 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

145 #i‡
__SI_HAVE_SIGSYS


146 
	#si_ˇŒ_addr
 
_sifõlds
.
_sigsys
.
_ˇŒ_addr


	)

147 
	#si_sysˇŒ
 
_sifõlds
.
_sigsys
.
_sysˇŒ


	)

148 
	#si_¨ch
 
_sifõlds
.
_sigsys
.
_¨ch


	)

	@/usr/include/bits/types/sigset_t.h

1 #i‚de‡
__sig£t_t_deföed


2 
	#__sig£t_t_deföed
 1

	)

4 
	~<bôs/ty≥s/__sig£t_t.h
>

7 
__sig£t_t
 
	tsig£t_t
;

	@/usr/include/bits/types/sigval_t.h

1 #i‚de‡
__sigvÆ_t_deföed


2 
	#__sigvÆ_t_deföed


	)

4 
	~<bôs/ty≥s/__sigvÆ_t.h
>

12 #i‚de‡
__USE_POSIX199309


16 
__sigvÆ_t
 
	tsigvÆ_t
;

	@/usr/include/bits/types/stack_t.h

19 #i‚de‡
__°ack_t_deföed


20 
	#__°ack_t_deföed
 1

	)

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

28 *
	mss_•
;

29 
	mss_Êags
;

30 
size_t
 
	mss_size
;

31 } 
	t°ack_t
;

	@/usr/include/bits/types/struct_FILE.h

18 #i‚de‡
__°ru˘_FILE_deföed


19 
	#__°ru˘_FILE_deföed
 1

	)

25 #i‡
deföed
 
_IO_USE_OLD_IO_FILE
 && !deföed 
_LIBC


29 #i‡
deföed
 
_IO_lock_t_deföed
 && !deföed 
_LIBC


33 
	~<bôs/ty≥s.h
>

35 
	g_IO_FILE
;

36 
	g_IO_m¨kî
;

37 
	g_IO_codecvt
;

38 
	g_IO_wide_d©a
;

42 #i‚de‡
_IO_lock_t_deföed


43 
	t_IO_lock_t
;

49 
	s_IO_FILE


51 
	m_Êags
;

54 *
	m_IO_ªad_±r
;

55 *
	m_IO_ªad_íd
;

56 *
	m_IO_ªad_ba£
;

57 *
	m_IO_wrôe_ba£
;

58 *
	m_IO_wrôe_±r
;

59 *
	m_IO_wrôe_íd
;

60 *
	m_IO_buf_ba£
;

61 *
	m_IO_buf_íd
;

64 *
	m_IO_ßve_ba£
;

65 *
	m_IO_backup_ba£
;

66 *
	m_IO_ßve_íd
;

68 
_IO_m¨kî
 *
	m_m¨kîs
;

70 
_IO_FILE
 *
	m_chaö
;

72 
	m_fûío
;

73 
	m_Êags2
;

74 
__off_t
 
	m_ﬁd_off£t
;

77 
	m_cur_cﬁumn
;

78 sig√d 
	m_vèbÀ_off£t
;

79 
	m_sh‹tbuf
[1];

81 
_IO_lock_t
 *
	m_lock
;

82 #ifde‡
_IO_USE_OLD_IO_FILE


85 
	s_IO_FILE_com∂ëe


87 
_IO_FILE
 
	m_fûe
;

89 
__off64_t
 
	m_off£t
;

91 
_IO_codecvt
 *
	m_codecvt
;

92 
_IO_wide_d©a
 *
	m_wide_d©a
;

93 
_IO_FILE
 *
	m_‰ìªs_li°
;

94 *
	m_‰ìªs_buf
;

95 
size_t
 
	m__∑d5
;

96 
	m_mode
;

98 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

102 
	#__gëc_u∆ocked_body
(
_Â
) \

103 (
	`__glibc_u∆ikñy
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
) \

104 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

106 
	#__putc_u∆ocked_body
(
_ch
, 
_Â
) \

107 (
	`__glibc_u∆ikñy
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
) \

108 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

109 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

111 
	#_IO_EOF_SEEN
 0x0010

	)

112 
	#__„of_u∆ocked_body
(
_Â
Ë(((_Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

114 
	#_IO_ERR_SEEN
 0x0020

	)

115 
	#__„º‹_u∆ocked_body
(
_Â
Ë(((_Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

117 
	#_IO_USER_LOCK
 0x8000

	)

	@/usr/include/bits/types/struct_itimerspec.h

1 #i‚de‡
__ôimî•ec_deföed


2 
	#__ôimî•ec_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

8 
	sôimî•ec


10 
time•ec
 
	mô_öãrvÆ
;

11 
time•ec
 
	mô_vÆue
;

	@/usr/include/bits/types/struct_sigstack.h

19 #i‚de‡
__sig°ack_deföed


20 
	#__sig°ack_deföed
 1

	)

23 
	ssig°ack


25 *
	mss_•
;

26 
	mss_⁄°ack
;

	@/usr/include/bits/types/struct_timespec.h

2 #i‚de‡
_STRUCT_TIMESPEC


3 
	#_STRUCT_TIMESPEC
 1

	)

5 
	~<bôs/ty≥s.h
>

9 
	stime•ec


11 
__time_t
 
	mtv_£c
;

12 
__sysˇŒ_¶⁄g_t
 
	mtv_n£c
;

	@/usr/include/bits/types/struct_tm.h

1 #i‚de‡
__°ru˘_tm_deföed


2 
	#__°ru˘_tm_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
	stm


9 
	mtm_£c
;

10 
	mtm_mö
;

11 
	mtm_hour
;

12 
	mtm_mday
;

13 
	mtm_m⁄
;

14 
	mtm_yór
;

15 
	mtm_wday
;

16 
	mtm_yday
;

17 
	mtm_isd°
;

19 #ifdef 
__USE_MISC


20 
	mtm_gmtoff
;

21 c⁄° *
	mtm_z⁄e
;

23 
	m__tm_gmtoff
;

24 c⁄° *
	m__tm_z⁄e
;

	@/usr/include/bits/types/time_t.h

1 #i‚de‡
__time_t_deföed


2 
	#__time_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__time_t
 
	ttime_t
;

	@/usr/include/bits/types/timer_t.h

1 #i‚de‡
__timî_t_deföed


2 
	#__timî_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__timî_t
 
	ttimî_t
;

	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #ifde‡
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/utsname.h

18 #i‚de‡
_SYS_UTSNAME_H


23 
	#_UTSNAME_LENGTH
 65

	)

28 
	#_UTSNAME_DOMAIN_LENGTH
 
_UTSNAME_LENGTH


	)

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

36 
	#__WNOTHREAD
 0x20000000

	)

38 
	#__WALL
 0x40000000

	)

39 
	#__WCLONE
 0x80000000

	)

42 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


43 #i‚de‡
__ENUM_IDTYPE_T


44 
	#__ENUM_IDTYPE_T
 1

	)

48 #unde‡
P_ALL


49 #unde‡
P_PID


50 #unde‡
P_PGID


54 
	mP_ALL
,

55 
	mP_PID
,

56 
	mP_PGID


57 } 
	tidty≥_t
;

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

7 
	#__WORDSIZE32_SIZE_ULONG
 0

	)

8 
	#__WORDSIZE32_PTRDIFF_LONG
 0

	)

11 #ifde‡
__x86_64__


12 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

14 
	#__SYSCALL_WORDSIZE
 64

	)

16 
	#__WORDSIZE_TIME64_COMPAT32
 0

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

62 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

64 
	~<bôs/uio_lim.h
>

65 #ifde‡
__IOV_MAX


66 
	#IOV_MAX
 
__IOV_MAX


	)

68 #unde‡
IOV_MAX


73 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

76 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

79 
	#NL_MSGMAX
 
INT_MAX


	)

83 #i‡
deföed
 
__USE_GNU
 || !deföed 
__USE_XOPEN2K8


84 
	#NL_NMAX
 
INT_MAX


	)

88 
	#NL_SETMAX
 
INT_MAX


	)

91 
	#NL_TEXTMAX
 
INT_MAX


	)

94 
	#NZERO
 20

	)

98 #ifde‡
INT_MAX


99 #i‡
INT_MAX
 == 32767

100 
	#WORD_BIT
 16

	)

102 #i‡
INT_MAX
 == 2147483647

103 
	#WORD_BIT
 32

	)

106 
	#WORD_BIT
 64

	)

109 #ñi‡
deföed
 
__INT_MAX__


110 #i‡
__INT_MAX__
 == 32767

111 
	#WORD_BIT
 16

	)

113 #i‡
__INT_MAX__
 == 2147483647

114 
	#WORD_BIT
 32

	)

117 
	#WORD_BIT
 64

	)

121 
	#WORD_BIT
 32

	)

125 #ifde‡
LONG_MAX


126 #i‡
LONG_MAX
 == 2147483647

127 
	#LONG_BIT
 32

	)

130 
	#LONG_BIT
 64

	)

132 #ñi‡
deföed
 
__LONG_MAX__


133 #i‡
__LONG_MAX__
 == 2147483647

134 
	#LONG_BIT
 32

	)

137 
	#LONG_BIT
 64

	)

140 
	~<bôs/w‹dsize.h
>

141 #i‡
__WORDSIZE
 == 64

142 
	#LONG_BIT
 64

	)

144 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

61 
	~<bôs/uöä-idítôy.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

80 
	#htobe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

81 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

82 
	#be16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

83 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

85 
	#htobe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

86 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

87 
	#be32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

88 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

90 
	#htobe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

91 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

92 
	#be64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

93 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

119 #unde‡
__USE_ISOC11


120 #unde‡
__USE_ISOC99


121 #unde‡
__USE_ISOC95


122 #unde‡
__USE_ISOCXX11


123 #unde‡
__USE_POSIX


124 #unde‡
__USE_POSIX2


125 #unde‡
__USE_POSIX199309


126 #unde‡
__USE_POSIX199506


127 #unde‡
__USE_XOPEN


128 #unde‡
__USE_XOPEN_EXTENDED


129 #unde‡
__USE_UNIX98


130 #unde‡
__USE_XOPEN2K


131 #unde‡
__USE_XOPEN2KXSI


132 #unde‡
__USE_XOPEN2K8


133 #unde‡
__USE_XOPEN2K8XSI


134 #unde‡
__USE_LARGEFILE


135 #unde‡
__USE_LARGEFILE64


136 #unde‡
__USE_FILE_OFFSET64


137 #unde‡
__USE_MISC


138 #unde‡
__USE_ATFILE


139 #unde‡
__USE_GNU


140 #unde‡
__USE_FORTIFY_LEVEL


141 #unde‡
__KERNEL_STRICT_NAMES


142 #unde‡
__GLIBC_USE_DEPRECATED_GETS


143 #unde‡
__GLIBC_USE_DEPRECATED_SCANF


147 #i‚de‡
_LOOSE_KERNEL_NAMES


148 
	#__KERNEL_STRICT_NAMES


	)

158 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


159 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

160 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

162 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

169 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


170 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

171 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

173 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

177 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

183 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

184 && !
deföed
 
	g_DEFAULT_SOURCE


186 #unde‡
_DEFAULT_SOURCE


187 
	#_DEFAULT_SOURCE
 1

	)

191 #ifde‡
_GNU_SOURCE


192 #unde‡
_ISOC95_SOURCE


193 
	#_ISOC95_SOURCE
 1

	)

194 #unde‡
_ISOC99_SOURCE


195 
	#_ISOC99_SOURCE
 1

	)

196 #unde‡
_ISOC11_SOURCE


197 
	#_ISOC11_SOURCE
 1

	)

198 #unde‡
_POSIX_SOURCE


199 
	#_POSIX_SOURCE
 1

	)

200 #unde‡
_POSIX_C_SOURCE


201 
	#_POSIX_C_SOURCE
 200809L

	)

202 #unde‡
_XOPEN_SOURCE


203 
	#_XOPEN_SOURCE
 700

	)

204 #unde‡
_XOPEN_SOURCE_EXTENDED


205 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

206 #unde‡
_LARGEFILE64_SOURCE


207 
	#_LARGEFILE64_SOURCE
 1

	)

208 #unde‡
_DEFAULT_SOURCE


209 
	#_DEFAULT_SOURCE
 1

	)

210 #unde‡
_ATFILE_SOURCE


211 
	#_ATFILE_SOURCE
 1

	)

216 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

217 || (!
deföed
 
	g__STRICT_ANSI__
 \

218 && !
deföed
 
	g_ISOC99_SOURCE
 && !deföed 
	g_ISOC11_SOURCE
 \

219 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

220 && !
deföed
 
	g_XOPEN_SOURCE
))

221 #unde‡
_DEFAULT_SOURCE


222 
	#_DEFAULT_SOURCE
 1

	)

226 #i‡(
deföed
 
_ISOC11_SOURCE
 \

227 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

228 
	#__USE_ISOC11
 1

	)

232 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

233 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

234 
	#__USE_ISOC99
 1

	)

238 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

239 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

240 
	#__USE_ISOC95
 1

	)

243 #ifde‡
__˝lu•lus


245 #i‡
__˝lu•lus
 >= 201703L

246 
	#__USE_ISOC11
 1

	)

250 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


251 
	#__USE_ISOCXX11
 1

	)

252 
	#__USE_ISOC99
 1

	)

259 #ifde‡
_DEFAULT_SOURCE


260 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


261 
	#__USE_POSIX_IMPLICITLY
 1

	)

263 #unde‡
_POSIX_SOURCE


264 
	#_POSIX_SOURCE
 1

	)

265 #unde‡
_POSIX_C_SOURCE


266 
	#_POSIX_C_SOURCE
 200809L

	)

269 #i‡((!
deföed
 
__STRICT_ANSI__
 \

270 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

271 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

272 
	#_POSIX_SOURCE
 1

	)

273 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

274 
	#_POSIX_C_SOURCE
 2

	)

275 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

276 
	#_POSIX_C_SOURCE
 199506L

	)

277 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

278 
	#_POSIX_C_SOURCE
 200112L

	)

280 
	#_POSIX_C_SOURCE
 200809L

	)

282 
	#__USE_POSIX_IMPLICITLY
 1

	)

291 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

292 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

293 
	#_POSIX_SOURCE
 1

	)

294 #unde‡
_POSIX_C_SOURCE


295 
	#_POSIX_C_SOURCE
 199506L

	)

298 #i‡(
deföed
 
_POSIX_SOURCE
 \

299 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

300 || 
deföed
 
_XOPEN_SOURCE
)

301 
	#__USE_POSIX
 1

	)

304 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


305 
	#__USE_POSIX2
 1

	)

308 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

309 
	#__USE_POSIX199309
 1

	)

312 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

313 
	#__USE_POSIX199506
 1

	)

316 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

317 
	#__USE_XOPEN2K
 1

	)

318 #unde‡
__USE_ISOC95


319 
	#__USE_ISOC95
 1

	)

320 #unde‡
__USE_ISOC99


321 
	#__USE_ISOC99
 1

	)

324 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

325 
	#__USE_XOPEN2K8
 1

	)

326 #unde‡
_ATFILE_SOURCE


327 
	#_ATFILE_SOURCE
 1

	)

330 #ifdef 
_XOPEN_SOURCE


331 
	#__USE_XOPEN
 1

	)

332 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

333 
	#__USE_XOPEN_EXTENDED
 1

	)

334 
	#__USE_UNIX98
 1

	)

335 #unde‡
_LARGEFILE_SOURCE


336 
	#_LARGEFILE_SOURCE
 1

	)

337 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

338 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

339 
	#__USE_XOPEN2K8
 1

	)

340 
	#__USE_XOPEN2K8XSI
 1

	)

342 
	#__USE_XOPEN2K
 1

	)

343 
	#__USE_XOPEN2KXSI
 1

	)

344 #unde‡
__USE_ISOC95


345 
	#__USE_ISOC95
 1

	)

346 #unde‡
__USE_ISOC99


347 
	#__USE_ISOC99
 1

	)

350 #ifde‡
_XOPEN_SOURCE_EXTENDED


351 
	#__USE_XOPEN_EXTENDED
 1

	)

356 #ifde‡
_LARGEFILE_SOURCE


357 
	#__USE_LARGEFILE
 1

	)

360 #ifde‡
_LARGEFILE64_SOURCE


361 
	#__USE_LARGEFILE64
 1

	)

364 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

365 
	#__USE_FILE_OFFSET64
 1

	)

368 #i‡
deföed
 
_DEFAULT_SOURCE


369 
	#__USE_MISC
 1

	)

372 #ifdef 
_ATFILE_SOURCE


373 
	#__USE_ATFILE
 1

	)

376 #ifdef 
_GNU_SOURCE


377 
	#__USE_GNU
 1

	)

380 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

381 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

382 #i‡
_FORTIFY_SOURCE
 > 1

383 
	#__USE_FORTIFY_LEVEL
 2

	)

385 
	#__USE_FORTIFY_LEVEL
 1

	)

388 
	#__USE_FORTIFY_LEVEL
 0

	)

395 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


396 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

398 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

413 #i‡
deföed
 
__USE_GNU
 && \

414 (
deföed
 
	g__˝lu•lus
 \

415 ? (
	g__˝lu•lus
 < 201103L && !
deföed
 
	g__GXX_EXPERIMENTAL_CXX0X__
) \

416 : (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 199901L))

417 
	#__GLIBC_USE_DEPRECATED_SCANF
 1

	)

419 
	#__GLIBC_USE_DEPRECATED_SCANF
 0

	)

424 
	~<°dc-¥edef.h
>

432 #unde‡
__GNU_LIBRARY__


433 
	#__GNU_LIBRARY__
 6

	)

437 
	#__GLIBC__
 2

	)

438 
	#__GLIBC_MINOR__
 29

	)

440 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

441 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

444 #i‚de‡
__ASSEMBLER__


445 #i‚de‡
_SYS_CDEFS_H


446 
	~<sys/cdefs.h
>

451 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


452 
	#__USE_LARGEFILE
 1

	)

453 
	#__USE_LARGEFILE64
 1

	)

459 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

460 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

461 && 
deföed
 
	g__exã∫_ölöe


462 
	#__USE_EXTERN_INLINES
 1

	)

470 
	~<gnu/°ubs.h
>

	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/wch¨.h
>

29 
	~<bôs/w‹dsize.h
>

34 
	~<bôs/°döt-öä.h
>

37 
	~<bôs/°döt-uöä.h
>

43 
__öt_Àa°8_t
 
	töt_Àa°8_t
;

44 
__öt_Àa°16_t
 
	töt_Àa°16_t
;

45 
__öt_Àa°32_t
 
	töt_Àa°32_t
;

46 
__öt_Àa°64_t
 
	töt_Àa°64_t
;

49 
__uöt_Àa°8_t
 
	tuöt_Àa°8_t
;

50 
__uöt_Àa°16_t
 
	tuöt_Àa°16_t
;

51 
__uöt_Àa°32_t
 
	tuöt_Àa°32_t
;

52 
__uöt_Àa°64_t
 
	tuöt_Àa°64_t
;

58 sig√d 
	töt_Á°8_t
;

59 #i‡
__WORDSIZE
 == 64

60 
	töt_Á°16_t
;

61 
	töt_Á°32_t
;

62 
	töt_Á°64_t
;

64 
	töt_Á°16_t
;

65 
	töt_Á°32_t
;

66 
__exãnsi⁄__


67 
	töt_Á°64_t
;

71 
	tuöt_Á°8_t
;

72 #i‡
__WORDSIZE
 == 64

73 
	tuöt_Á°16_t
;

74 
	tuöt_Á°32_t
;

75 
	tuöt_Á°64_t
;

77 
	tuöt_Á°16_t
;

78 
	tuöt_Á°32_t
;

79 
__exãnsi⁄__


80 
	tuöt_Á°64_t
;

85 #i‡
__WORDSIZE
 == 64

86 #i‚de‡
__öçå_t_deföed


87 
	töçå_t
;

88 
	#__öçå_t_deföed


	)

90 
	tuöçå_t
;

92 #i‚de‡
__öçå_t_deföed


93 
	töçå_t
;

94 
	#__öçå_t_deföed


	)

96 
	tuöçå_t
;

101 
__ötmax_t
 
	tötmax_t
;

102 
__uötmax_t
 
	tuötmax_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	#__INT64_C
(
c
Ë¯## 
L


	)

107 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

109 
	#__INT64_C
(
c
Ë¯## 
LL


	)

110 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

116 
	#INT8_MIN
 (-128)

	)

117 
	#INT16_MIN
 (-32767-1)

	)

118 
	#INT32_MIN
 (-2147483647-1)

	)

119 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

121 
	#INT8_MAX
 (127)

	)

122 
	#INT16_MAX
 (32767)

	)

123 
	#INT32_MAX
 (2147483647)

	)

124 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

127 
	#UINT8_MAX
 (255)

	)

128 
	#UINT16_MAX
 (65535)

	)

129 
	#UINT32_MAX
 (4294967295U)

	)

130 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

134 
	#INT_LEAST8_MIN
 (-128)

	)

135 
	#INT_LEAST16_MIN
 (-32767-1)

	)

136 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

137 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

139 
	#INT_LEAST8_MAX
 (127)

	)

140 
	#INT_LEAST16_MAX
 (32767)

	)

141 
	#INT_LEAST32_MAX
 (2147483647)

	)

142 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

145 
	#UINT_LEAST8_MAX
 (255)

	)

146 
	#UINT_LEAST16_MAX
 (65535)

	)

147 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

148 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

152 
	#INT_FAST8_MIN
 (-128)

	)

153 #i‡
__WORDSIZE
 == 64

154 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

155 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

157 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

158 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

160 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

162 
	#INT_FAST8_MAX
 (127)

	)

163 #i‡
__WORDSIZE
 == 64

164 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

165 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

167 
	#INT_FAST16_MAX
 (2147483647)

	)

168 
	#INT_FAST32_MAX
 (2147483647)

	)

170 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

173 
	#UINT_FAST8_MAX
 (255)

	)

174 #i‡
__WORDSIZE
 == 64

175 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

176 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

178 
	#UINT_FAST16_MAX
 (4294967295U)

	)

179 
	#UINT_FAST32_MAX
 (4294967295U)

	)

181 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

185 #i‡
__WORDSIZE
 == 64

186 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

187 
	#INTPTR_MAX
 (9223372036854775807L)

	)

188 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

190 
	#INTPTR_MIN
 (-2147483647-1)

	)

191 
	#INTPTR_MAX
 (2147483647)

	)

192 
	#UINTPTR_MAX
 (4294967295U)

	)

197 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

199 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

202 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

208 #i‡
__WORDSIZE
 == 64

209 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

210 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

212 #i‡
__WORDSIZE32_PTRDIFF_LONG


213 
	#PTRDIFF_MIN
 (-2147483647L-1)

	)

214 
	#PTRDIFF_MAX
 (2147483647L)

	)

216 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

217 
	#PTRDIFF_MAX
 (2147483647)

	)

222 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

223 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

226 #i‡
__WORDSIZE
 == 64

227 
	#SIZE_MAX
 (18446744073709551615UL)

	)

229 #i‡
__WORDSIZE32_SIZE_ULONG


230 
	#SIZE_MAX
 (4294967295UL)

	)

232 
	#SIZE_MAX
 (4294967295U)

	)

237 #i‚de‡
WCHAR_MIN


239 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

240 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

244 
	#WINT_MIN
 (0u)

	)

245 
	#WINT_MAX
 (4294967295u)

	)

248 
	#INT8_C
(
c
Ë
	)
c

249 
	#INT16_C
(
c
Ë
	)
c

250 
	#INT32_C
(
c
Ë
	)
c

251 #i‡
__WORDSIZE
 == 64

252 
	#INT64_C
(
c
Ë¯## 
L


	)

254 
	#INT64_C
(
c
Ë¯## 
LL


	)

258 
	#UINT8_C
(
c
Ë
	)
c

259 
	#UINT16_C
(
c
Ë
	)
c

260 
	#UINT32_C
(
c
Ë¯## 
U


	)

261 #i‡
__WORDSIZE
 == 64

262 
	#UINT64_C
(
c
Ë¯## 
UL


	)

264 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

268 #i‡
__WORDSIZE
 == 64

269 
	#INTMAX_C
(
c
Ë¯## 
L


	)

270 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

272 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

273 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

276 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

278 
	#INT8_WIDTH
 8

	)

279 
	#UINT8_WIDTH
 8

	)

280 
	#INT16_WIDTH
 16

	)

281 
	#UINT16_WIDTH
 16

	)

282 
	#INT32_WIDTH
 32

	)

283 
	#UINT32_WIDTH
 32

	)

284 
	#INT64_WIDTH
 64

	)

285 
	#UINT64_WIDTH
 64

	)

287 
	#INT_LEAST8_WIDTH
 8

	)

288 
	#UINT_LEAST8_WIDTH
 8

	)

289 
	#INT_LEAST16_WIDTH
 16

	)

290 
	#UINT_LEAST16_WIDTH
 16

	)

291 
	#INT_LEAST32_WIDTH
 32

	)

292 
	#UINT_LEAST32_WIDTH
 32

	)

293 
	#INT_LEAST64_WIDTH
 64

	)

294 
	#UINT_LEAST64_WIDTH
 64

	)

296 
	#INT_FAST8_WIDTH
 8

	)

297 
	#UINT_FAST8_WIDTH
 8

	)

298 
	#INT_FAST16_WIDTH
 
__WORDSIZE


	)

299 
	#UINT_FAST16_WIDTH
 
__WORDSIZE


	)

300 
	#INT_FAST32_WIDTH
 
__WORDSIZE


	)

301 
	#UINT_FAST32_WIDTH
 
__WORDSIZE


	)

302 
	#INT_FAST64_WIDTH
 64

	)

303 
	#UINT_FAST64_WIDTH
 64

	)

305 
	#INTPTR_WIDTH
 
__WORDSIZE


	)

306 
	#UINTPTR_WIDTH
 
__WORDSIZE


	)

308 
	#INTMAX_WIDTH
 64

	)

309 
	#UINTMAX_WIDTH
 64

	)

311 
	#PTRDIFF_WIDTH
 
__WORDSIZE


	)

312 
	#SIG_ATOMIC_WIDTH
 32

	)

313 
	#SIZE_WIDTH
 
__WORDSIZE


	)

314 
	#WCHAR_WIDTH
 32

	)

315 
	#WINT_WIDTH
 32

	)

	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

27 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

30 
	g__BEGIN_DECLS


32 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


34 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

38 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

42 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

45 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


48 *
	`ödex
 (*
__s
, 
__c
)

49 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

50 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

51 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

53 #i‡
deföed
 
__OPTIMIZE__


54 
__exã∫_Æways_ölöe
 *

55 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


57  
	`__buûtö_ödex
 (
__s
, 
__c
);

60 
__exã∫_Æways_ölöe
 const *

61 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
	}
}

68 *
	$ödex
 (c⁄° *
__s
, 
__c
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


76 *
	`rödex
 (*
__s
, 
__c
)

77 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

79 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #i‡
deföed
 
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


85  
	`__buûtö_rödex
 (
__s
, 
__c
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
	}
}

96 *
	$rödex
 (c⁄° *
__s
, 
__c
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


104 
	$ffs
 (
__i
Ë
__THROW
 
__©åibuã_c⁄°__
;

109 #ifdef 
__USE_MISC


110 
	$ff¶
 (
__l
Ë
__THROW
 
__©åibuã_c⁄°__
;

111 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

112 
__THROW
 
__©åibuã_c⁄°__
;

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

123 #ifdef 
__USE_XOPEN2K8


125 
	~<bôs/ty≥s/loˇÀ_t.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

134 
size_t
 
__n
, 
loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


140 #i‡
	`__GNUC_PREREQ
 (3,4Ë&& 
__USE_FORTIFY_LEVEL
 > 0 \

141 && 
deföed
 
__f‹tify_fun˘i⁄


143 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


144 
	~<bôs/°rögs_f‹tifõd.h
>

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/ty≥s/sig£t_t.h
>

36 
	~<bôs/ty≥s/time_t.h
>

37 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

38 #ifde‡
__USE_XOPEN2K


39 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

42 #i‚de‡
__su£c⁄ds_t_deföed


43 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

44 
	#__su£c⁄ds_t_deföed


	)

49 
	t__fd_mask
;

52 #unde‡
__NFDBITS


54 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

55 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

56 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

63 #ifde‡
__USE_XOPEN


64 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

65 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

67 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

68 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

70 } 
	tfd_£t
;

73 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

75 #ifde‡
__USE_MISC


77 
__fd_mask
 
	tfd_mask
;

80 
	#NFDBITS
 
__NFDBITS


	)

85 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

86 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

87 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

88 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

91 
__BEGIN_DECLS


101 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

102 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

103 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

104 
timevÆ
 *
__ª°ri˘
 
__timeout
);

106 #ifde‡
__USE_XOPEN2K


113 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

114 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

115 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

116 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

117 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

122 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


123 
	~<bôs/£À˘2.h
>

126 
	g__END_DECLS


	@/usr/include/sys/ucontext.h

18 #i‚de‡
_SYS_UCONTEXT_H


19 
	#_SYS_UCONTEXT_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	~<bôs/ty≥s/sig£t_t.h
>

25 
	~<bôs/ty≥s/°ack_t.h
>

28 #ifde‡
__USE_MISC


29 
	#__˘x
(
Êd
Ë
	)
fld

31 
	#__˘x
(
Êd
Ë
__
 ## 
	)
fld

34 #ifde‡
__x86_64__


37 
__exãnsi⁄__
 
	tgªg_t
;

40 
	#__NGREG
 23

	)

41 #ifde‡
__USE_MISC


42 
	#NGREG
 
__NGREG


	)

46 
gªg_t
 
	tgªg£t_t
[
__NGREG
];

48 #ifde‡
__USE_GNU


52 
	mREG_R8
 = 0,

53 
	#REG_R8
 
REG_R8


	)

54 
	mREG_R9
,

55 
	#REG_R9
 
REG_R9


	)

56 
	mREG_R10
,

57 
	#REG_R10
 
REG_R10


	)

58 
	mREG_R11
,

59 
	#REG_R11
 
REG_R11


	)

60 
	mREG_R12
,

61 
	#REG_R12
 
REG_R12


	)

62 
	mREG_R13
,

63 
	#REG_R13
 
REG_R13


	)

64 
	mREG_R14
,

65 
	#REG_R14
 
REG_R14


	)

66 
	mREG_R15
,

67 
	#REG_R15
 
REG_R15


	)

68 
	mREG_RDI
,

69 
	#REG_RDI
 
REG_RDI


	)

70 
	mREG_RSI
,

71 
	#REG_RSI
 
REG_RSI


	)

72 
	mREG_RBP
,

73 
	#REG_RBP
 
REG_RBP


	)

74 
	mREG_RBX
,

75 
	#REG_RBX
 
REG_RBX


	)

76 
	mREG_RDX
,

77 
	#REG_RDX
 
REG_RDX


	)

78 
	mREG_RAX
,

79 
	#REG_RAX
 
REG_RAX


	)

80 
	mREG_RCX
,

81 
	#REG_RCX
 
REG_RCX


	)

82 
	mREG_RSP
,

83 
	#REG_RSP
 
REG_RSP


	)

84 
	mREG_RIP
,

85 
	#REG_RIP
 
REG_RIP


	)

86 
	mREG_EFL
,

87 
	#REG_EFL
 
REG_EFL


	)

88 
	mREG_CSGSFS
,

89 
	#REG_CSGSFS
 
REG_CSGSFS


	)

90 
	mREG_ERR
,

91 
	#REG_ERR
 
REG_ERR


	)

92 
	mREG_TRAPNO
,

93 
	#REG_TRAPNO
 
REG_TRAPNO


	)

94 
	mREG_OLDMASK
,

95 
	#REG_OLDMASK
 
REG_OLDMASK


	)

96 
	mREG_CR2


97 
	#REG_CR2
 
REG_CR2


	)

101 
	s_libc_Âxªg


103 
__˘x
(
signifiˇnd
)[4];

104 
__˘x
(
exp⁄ít
);

105 
	m__glibc_ª£rved1
[3];

108 
	s_libc_xmmªg


110 
__uöt32_t
 
__˘x
(
ñemít
)[4];

113 
	s_libc_Â°©e


116 
__uöt16_t
 
__˘x
(
cwd
);

117 
__uöt16_t
 
__˘x
(
swd
);

118 
__uöt16_t
 
__˘x
(
·w
);

119 
__uöt16_t
 
__˘x
(
f›
);

120 
__uöt64_t
 
__˘x
(
rù
);

121 
__uöt64_t
 
__˘x
(
rdp
);

122 
__uöt32_t
 
__˘x
(
mxc§
);

123 
__uöt32_t
 
__˘x
(
mx¸_mask
);

124 
_libc_Âxªg
 
	m_°
[8];

125 
_libc_xmmªg
 
	m_xmm
[16];

126 
__uöt32_t
 
	m__glibc_ª£rved1
[24];

130 
_libc_Â°©e
 *
	tÂªg£t_t
;

135 
gªg£t_t
 
__˘x
(
gªgs
);

137 
Âªg£t_t
 
__˘x
(
Âªgs
);

138 
__exãnsi⁄__
 
	m__ª£rved1
 [8];

139 } 
	tmc⁄ãxt_t
;

142 
	suc⁄ãxt_t


144 
__˘x
(
uc_Êags
);

145 
uc⁄ãxt_t
 *
	muc_lök
;

146 
°ack_t
 
	muc_°ack
;

147 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

148 
sig£t_t
 
	muc_sigmask
;

149 
_libc_Â°©e
 
	m__Âªgs_mem
;

150 
__exãnsi⁄__
 
	m__s•
[4];

151 } 
	tuc⁄ãxt_t
;

156 
	tgªg_t
;

159 
	#__NGREG
 19

	)

160 #ifde‡
__USE_MISC


161 
	#NGREG
 
__NGREG


	)

165 
gªg_t
 
	tgªg£t_t
[
__NGREG
];

167 #ifde‡
__USE_GNU


171 
	mREG_GS
 = 0,

172 
	#REG_GS
 
REG_GS


	)

173 
	mREG_FS
,

174 
	#REG_FS
 
REG_FS


	)

175 
	mREG_ES
,

176 
	#REG_ES
 
REG_ES


	)

177 
	mREG_DS
,

178 
	#REG_DS
 
REG_DS


	)

179 
	mREG_EDI
,

180 
	#REG_EDI
 
REG_EDI


	)

181 
	mREG_ESI
,

182 
	#REG_ESI
 
REG_ESI


	)

183 
	mREG_EBP
,

184 
	#REG_EBP
 
REG_EBP


	)

185 
	mREG_ESP
,

186 
	#REG_ESP
 
REG_ESP


	)

187 
	mREG_EBX
,

188 
	#REG_EBX
 
REG_EBX


	)

189 
	mREG_EDX
,

190 
	#REG_EDX
 
REG_EDX


	)

191 
	mREG_ECX
,

192 
	#REG_ECX
 
REG_ECX


	)

193 
	mREG_EAX
,

194 
	#REG_EAX
 
REG_EAX


	)

195 
	mREG_TRAPNO
,

196 
	#REG_TRAPNO
 
REG_TRAPNO


	)

197 
	mREG_ERR
,

198 
	#REG_ERR
 
REG_ERR


	)

199 
	mREG_EIP
,

200 
	#REG_EIP
 
REG_EIP


	)

201 
	mREG_CS
,

202 
	#REG_CS
 
REG_CS


	)

203 
	mREG_EFL
,

204 
	#REG_EFL
 
REG_EFL


	)

205 
	mREG_UESP
,

206 
	#REG_UESP
 
REG_UESP


	)

207 
	mREG_SS


208 
	#REG_SS
 
REG_SS


	)

213 
	s_libc_Âªg


215 
__˘x
(
signifiˇnd
)[4];

216 
__˘x
(
exp⁄ít
);

219 
	s_libc_Â°©e


221 
__˘x
(
cw
);

222 
__˘x
(
sw
);

223 
__˘x
(
èg
);

224 
__˘x
(
ùoff
);

225 
__˘x
(
cs£l
);

226 
__˘x
(
d©aoff
);

227 
__˘x
(
d©a£l
);

228 
_libc_Âªg
 
	m_°
[8];

229 
__˘x
(
°©us
);

233 
_libc_Â°©e
 *
	tÂªg£t_t
;

238 
gªg£t_t
 
__˘x
(
gªgs
);

241 
Âªg£t_t
 
__˘x
(
Âªgs
);

242 
__˘x
(
ﬁdmask
);

243 
__˘x
(
¸2
);

244 } 
	tmc⁄ãxt_t
;

247 
	suc⁄ãxt_t


249 
__˘x
(
uc_Êags
);

250 
uc⁄ãxt_t
 *
	muc_lök
;

251 
°ack_t
 
	muc_°ack
;

252 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

253 
sig£t_t
 
	muc_sigmask
;

254 
_libc_Â°©e
 
	m__Âªgs_mem
;

255 
	m__s•
[4];

256 } 
	tuc⁄ãxt_t
;

260 #unde‡
__˘x


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	#__bsw≠_c⁄°™t_16
(
x
) \

31 ((
__uöt16_t
Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

33 
__ölöe
 
__uöt16_t


34 
	$__bsw≠_16
 (
__uöt16_t
 
__bsx
)

36 #i‡
	`__GNUC_PREREQ
 (4, 8)

37  
	`__buûtö_bsw≠16
 (
__bsx
);

39  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

41 
	}
}

44 
	#__bsw≠_c⁄°™t_32
(
x
) \

45 ((((
x
) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8) \

46 | (((
x
Ë& 0x0000ff00uË<< 8Ë| (((xË& 0x000000ffuË<< 24))

	)

48 
__ölöe
 
__uöt32_t


49 
	$__bsw≠_32
 (
__uöt32_t
 
__bsx
)

51 #i‡
	`__GNUC_PREREQ
 (4, 3)

52  
	`__buûtö_bsw≠32
 (
__bsx
);

54  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

56 
	}
}

59 
	#__bsw≠_c⁄°™t_64
(
x
) \

60 ((((
x
) & 0xff00000000000000ull) >> 56) \

61 | (((
x
) & 0x00ff000000000000ull) >> 40) \

62 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

63 | (((
x
) & 0x000000ff00000000ull) >> 8) \

64 | (((
x
) & 0x00000000ff000000ull) << 8) \

65 | (((
x
) & 0x0000000000ff0000ull) << 24) \

66 | (((
x
) & 0x000000000000ff00ull) << 40) \

67 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

69 
__exãnsi⁄__
 
__ölöe
 
__uöt64_t


70 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

72 #i‡
	`__GNUC_PREREQ
 (4, 3)

73  
	`__buûtö_bsw≠64
 (
__bsx
);

75  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

77 
	}
}

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/fcntl-linux.h

19 #i‚def 
_FCNTL_H


37 #ifde‡
__USE_GNU


38 
	~<bôs/ty≥s/°ru˘_iovec.h
>

42 
	#O_ACCMODE
 0003

	)

43 
	#O_RDONLY
 00

	)

44 
	#O_WRONLY
 01

	)

45 
	#O_RDWR
 02

	)

46 #i‚de‡
O_CREAT


47 
	#O_CREAT
 0100

	)

49 #i‚de‡
O_EXCL


50 
	#O_EXCL
 0200

	)

52 #i‚de‡
O_NOCTTY


53 
	#O_NOCTTY
 0400

	)

55 #i‚de‡
O_TRUNC


56 
	#O_TRUNC
 01000

	)

58 #i‚de‡
O_APPEND


59 
	#O_APPEND
 02000

	)

61 #i‚de‡
O_NONBLOCK


62 
	#O_NONBLOCK
 04000

	)

64 #i‚de‡
O_NDELAY


65 
	#O_NDELAY
 
O_NONBLOCK


	)

67 #i‚de‡
O_SYNC


68 
	#O_SYNC
 04010000

	)

70 
	#O_FSYNC
 
O_SYNC


	)

71 #i‚de‡
O_ASYNC


72 
	#O_ASYNC
 020000

	)

74 #i‚de‡
__O_LARGEFILE


75 
	#__O_LARGEFILE
 0100000

	)

78 #i‚de‡
__O_DIRECTORY


79 
	#__O_DIRECTORY
 0200000

	)

81 #i‚de‡
__O_NOFOLLOW


82 
	#__O_NOFOLLOW
 0400000

	)

84 #i‚de‡
__O_CLOEXEC


85 
	#__O_CLOEXEC
 02000000

	)

87 #i‚de‡
__O_DIRECT


88 
	#__O_DIRECT
 040000

	)

90 #i‚de‡
__O_NOATIME


91 
	#__O_NOATIME
 01000000

	)

93 #i‚de‡
__O_PATH


94 
	#__O_PATH
 010000000

	)

96 #i‚de‡
__O_DSYNC


97 
	#__O_DSYNC
 010000

	)

99 #i‚de‡
__O_TMPFILE


100 
	#__O_TMPFILE
 (020000000 | 
__O_DIRECTORY
)

	)

103 #i‚de‡
F_GETLK


104 #i‚de‡
__USE_FILE_OFFSET64


105 
	#F_GETLK
 5

	)

106 
	#F_SETLK
 6

	)

107 
	#F_SETLKW
 7

	)

109 
	#F_GETLK
 
F_GETLK64


	)

110 
	#F_SETLK
 
F_SETLK64


	)

111 
	#F_SETLKW
 
F_SETLKW64


	)

114 #i‚de‡
F_GETLK64


115 
	#F_GETLK64
 12

	)

116 
	#F_SETLK64
 13

	)

117 
	#F_SETLKW64
 14

	)

131 #ifde‡
__USE_GNU


132 
	#F_OFD_GETLK
 36

	)

133 
	#F_OFD_SETLK
 37

	)

134 
	#F_OFD_SETLKW
 38

	)

137 #ifde‡
__USE_LARGEFILE64


138 
	#O_LARGEFILE
 
__O_LARGEFILE


	)

141 #ifde‡
__USE_XOPEN2K8


142 
	#O_DIRECTORY
 
__O_DIRECTORY


	)

143 
	#O_NOFOLLOW
 
__O_NOFOLLOW


	)

144 
	#O_CLOEXEC
 
__O_CLOEXEC


	)

147 #ifde‡
__USE_GNU


148 
	#O_DIRECT
 
__O_DIRECT


	)

149 
	#O_NOATIME
 
__O_NOATIME


	)

150 
	#O_PATH
 
__O_PATH


	)

151 
	#O_TMPFILE
 
__O_TMPFILE


	)

157 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


158 
	#O_DSYNC
 
__O_DSYNC


	)

159 #i‡
deföed
 
__O_RSYNC


160 
	#O_RSYNC
 
__O_RSYNC


	)

162 
	#O_RSYNC
 
O_SYNC


	)

167 
	#F_DUPFD
 0

	)

168 
	#F_GETFD
 1

	)

169 
	#F_SETFD
 2

	)

170 
	#F_GETFL
 3

	)

171 
	#F_SETFL
 4

	)

173 #i‚de‡
__F_SETOWN


174 
	#__F_SETOWN
 8

	)

175 
	#__F_GETOWN
 9

	)

178 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


179 
	#F_SETOWN
 
__F_SETOWN


	)

180 
	#F_GETOWN
 
__F_GETOWN


	)

183 #i‚de‡
__F_SETSIG


184 
	#__F_SETSIG
 10

	)

185 
	#__F_GETSIG
 11

	)

187 #i‚de‡
__F_SETOWN_EX


188 
	#__F_SETOWN_EX
 15

	)

189 
	#__F_GETOWN_EX
 16

	)

192 #ifde‡
__USE_GNU


193 
	#F_SETSIG
 
__F_SETSIG


	)

194 
	#F_GETSIG
 
__F_GETSIG


	)

195 
	#F_SETOWN_EX
 
__F_SETOWN_EX


	)

196 
	#F_GETOWN_EX
 
__F_GETOWN_EX


	)

199 #ifde‡
__USE_GNU


200 
	#F_SETLEASE
 1024

	)

201 
	#F_GETLEASE
 1025

	)

202 
	#F_NOTIFY
 1026

	)

203 
	#F_SETPIPE_SZ
 1031

	)

204 
	#F_GETPIPE_SZ
 1032

	)

205 
	#F_ADD_SEALS
 1033

	)

206 
	#F_GET_SEALS
 1034

	)

208 
	#F_GET_RW_HINT
 1035

	)

209 
	#F_SET_RW_HINT
 1036

	)

210 
	#F_GET_FILE_RW_HINT
 1037

	)

211 
	#F_SET_FILE_RW_HINT
 1038

	)

213 #ifde‡
__USE_XOPEN2K8


214 
	#F_DUPFD_CLOEXEC
 1030

	)

219 
	#FD_CLOEXEC
 1

	)

221 #i‚de‡
F_RDLCK


223 
	#F_RDLCK
 0

	)

224 
	#F_WRLCK
 1

	)

225 
	#F_UNLCK
 2

	)

230 #i‚de‡
F_EXLCK


231 
	#F_EXLCK
 4

	)

232 
	#F_SHLCK
 8

	)

235 #ifde‡
__USE_MISC


237 
	#LOCK_SH
 1

	)

238 
	#LOCK_EX
 2

	)

239 
	#LOCK_NB
 4

	)

241 
	#LOCK_UN
 8

	)

244 #ifde‡
__USE_GNU


245 
	#LOCK_MAND
 32

	)

246 
	#LOCK_READ
 64

	)

247 
	#LOCK_WRITE
 128

	)

248 
	#LOCK_RW
 192

	)

251 #ifde‡
__USE_GNU


253 
	#DN_ACCESS
 0x00000001

	)

254 
	#DN_MODIFY
 0x00000002

	)

255 
	#DN_CREATE
 0x00000004

	)

256 
	#DN_DELETE
 0x00000008

	)

257 
	#DN_RENAME
 0x00000010

	)

258 
	#DN_ATTRIB
 0x00000020

	)

259 
	#DN_MULTISHOT
 0x80000000

	)

263 #ifde‡
__USE_GNU


265 
	e__pid_ty≥


267 
	mF_OWNER_TID
 = 0,

268 
	mF_OWNER_PID
,

269 
	mF_OWNER_PGRP
,

270 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


274 
	sf_ow√r_ex


276 
__pid_ty≥
 
	mty≥
;

277 
__pid_t
 
	mpid
;

281 #ifde‡
__USE_GNU


283 
	#F_SEAL_SEAL
 0x0001

	)

284 
	#F_SEAL_SHRINK
 0x0002

	)

285 
	#F_SEAL_GROW
 0x0004

	)

286 
	#F_SEAL_WRITE
 0x0008

	)

289 #ifde‡
__USE_GNU


291 
	#RWF_WRITE_LIFE_NOT_SET
 0

	)

292 
	#RWH_WRITE_LIFE_NONE
 1

	)

293 
	#RWH_WRITE_LIFE_SHORT
 2

	)

294 
	#RWH_WRITE_LIFE_MEDIUM
 3

	)

295 
	#RWH_WRITE_LIFE_LONG
 4

	)

296 
	#RWH_WRITE_LIFE_EXTREME
 5

	)

301 #ifdef 
__USE_MISC


302 
	#FAPPEND
 
O_APPEND


	)

303 
	#FFSYNC
 
O_FSYNC


	)

304 
	#FASYNC
 
O_ASYNC


	)

305 
	#FNONBLOCK
 
O_NONBLOCK


	)

306 
	#FNDELAY
 
O_NDELAY


	)

309 #i‚de‡
__POSIX_FADV_DONTNEED


310 
	#__POSIX_FADV_DONTNEED
 4

	)

311 
	#__POSIX_FADV_NOREUSE
 5

	)

314 #ifde‡
__USE_XOPEN2K


315 
	#POSIX_FADV_NORMAL
 0

	)

316 
	#POSIX_FADV_RANDOM
 1

	)

317 
	#POSIX_FADV_SEQUENTIAL
 2

	)

318 
	#POSIX_FADV_WILLNEED
 3

	)

319 
	#POSIX_FADV_DONTNEED
 
__POSIX_FADV_DONTNEED


	)

320 
	#POSIX_FADV_NOREUSE
 
__POSIX_FADV_NOREUSE


	)

324 #ifde‡
__USE_GNU


326 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

329 
	#SYNC_FILE_RANGE_WRITE
 2

	)

332 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

337 
	#SPLICE_F_MOVE
 1

	)

338 
	#SPLICE_F_NONBLOCK
 2

	)

341 
	#SPLICE_F_MORE
 4

	)

342 
	#SPLICE_F_GIFT
 8

	)

346 
	~<löux/ÁŒoc.h
>

350 
	sfûe_h™dÀ


352 
	mh™dÀ_byãs
;

353 
	mh™dÀ_ty≥
;

355 
	mf_h™dÀ
[0];

359 
	#MAX_HANDLE_SZ
 128

	)

363 #ifde‡
__USE_ATFILE


364 
	#AT_FDCWD
 -100

	)

367 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

368 
	#AT_REMOVEDIR
 0x200

	)

370 
	#AT_SYMLINK_FOLLOW
 0x400

	)

371 #ifde‡
__USE_GNU


372 
	#AT_NO_AUTOMOUNT
 0x800

	)

374 
	#AT_EMPTY_PATH
 0x1000

	)

375 
	#AT_STATX_SYNC_TYPE
 0x6000

	)

376 
	#AT_STATX_SYNC_AS_STAT
 0x0000

	)

377 
	#AT_STATX_FORCE_SYNC
 0x2000

	)

378 
	#AT_STATX_DONT_SYNC
 0x4000

	)

380 
	#AT_EACCESS
 0x200

	)

384 
	g__BEGIN_DECLS


386 #ifde‡
__USE_GNU


389 
__ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

390 
__THROW
;

397 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

398 
__Êags
);

405 
__ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

406 
size_t
 
__cou¡
, 
__Êags
);

412 
__ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

413 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

414 
__Êags
);

420 
__ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

421 
__Êags
);

427 #i‚de‡
__USE_FILE_OFFSET64


428 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

430 #ifde‡
__REDIRECT


431 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

432 
__off64_t
 
__Àn
),

433 
ÁŒoˇã64
);

435 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

438 #ifde‡
__USE_LARGEFILE64


439 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

440 
__off64_t
 
__Àn
);

445 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

446 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

447 
__Êags
Ë
__THROW
;

453 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

454 
__Êags
);

458 
__END_DECLS


	@/usr/include/bits/floatn-common.h

20 #i‚de‡
_BITS_FLOATN_COMMON_H


21 
	#_BITS_FLOATN_COMMON_H


	)

23 
	~<„©uªs.h
>

24 
	~<bôs/l⁄g-doubÀ.h
>

34 
	#__HAVE_FLOAT16
 0

	)

35 
	#__HAVE_FLOAT32
 1

	)

36 
	#__HAVE_FLOAT64
 1

	)

37 
	#__HAVE_FLOAT32X
 1

	)

38 
	#__HAVE_FLOAT128X
 0

	)

52 
	#__HAVE_DISTINCT_FLOAT16
 
__HAVE_FLOAT16


	)

53 
	#__HAVE_DISTINCT_FLOAT32
 0

	)

54 
	#__HAVE_DISTINCT_FLOAT64
 0

	)

55 
	#__HAVE_DISTINCT_FLOAT32X
 0

	)

56 
	#__HAVE_DISTINCT_FLOAT64X
 0

	)

57 
	#__HAVE_DISTINCT_FLOAT128X
 
__HAVE_FLOAT128X


	)

63 
	#__HAVE_FLOAT128_UNLIKE_LDBL
 (
__HAVE_DISTINCT_FLOAT128
 \

64 && 
__LDBL_MANT_DIG__
 !113)

	)

69 #i‡
__GNUC_PREREQ
 (7, 0Ë&& !
deföed
 
__˝lu•lus


70 
	#__HAVE_FLOATN_NOT_TYPEDEF
 1

	)

72 
	#__HAVE_FLOATN_NOT_TYPEDEF
 0

	)

75 #i‚de‡
__ASSEMBLER__


80 #i‡
__HAVE_FLOAT16


81 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


83 
	#__f16
(
x
Ë((
_Flﬂt16
Ëx##
f
)

	)

85 
	#__f16
(
x
Ëx##
f16


	)

89 #i‡
__HAVE_FLOAT32


90 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


91 
	#__f32
(
x
Ëx##
f


	)

93 
	#__f32
(
x
Ëx##
f32


	)

97 #i‡
__HAVE_FLOAT64


98 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
	#__f64
(
x
Ëx##
l


	)

102 
	#__f64
(
x
Ë
	)
x

105 
	#__f64
(
x
Ëx##
f64


	)

109 #i‡
__HAVE_FLOAT32X


110 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


111 
	#__f32x
(
x
Ë
	)
x

113 
	#__f32x
(
x
Ëx##
f32x


	)

117 #i‡
__HAVE_FLOAT64X


118 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


119 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


120 
	#__f64x
(
x
Ëx##
l


	)

122 
	#__f64x
(
x
Ë
	`__f128
 (x)

	)

125 
	#__f64x
(
x
Ëx##
f64x


	)

129 #i‡
__HAVE_FLOAT128X


130 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


133 
	#__f128x
(
x
Ëx##
f128x


	)

138 #i‡
__HAVE_FLOAT16


139 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


140 
_Com∂ex
 
	t__cÊﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HC__
)));

141 
	#__CFLOAT16
 
__cÊﬂt16


	)

143 
	#__CFLOAT16
 
_Com∂ex
 
_Flﬂt16


	)

147 #i‡
__HAVE_FLOAT32


148 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


149 
	#__CFLOAT32
 
_Com∂ex
 

	)

151 
	#__CFLOAT32
 
_Com∂ex
 
_Flﬂt32


	)

155 #i‡
__HAVE_FLOAT64


156 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


157 #ifde‡
__NO_LONG_DOUBLE_MATH


158 
	#__CFLOAT64
 
_Com∂ex
 

	)

160 
	#__CFLOAT64
 
_Com∂ex
 

	)

163 
	#__CFLOAT64
 
_Com∂ex
 
_Flﬂt64


	)

167 #i‡
__HAVE_FLOAT32X


168 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


169 
	#__CFLOAT32X
 
_Com∂ex
 

	)

171 
	#__CFLOAT32X
 
_Com∂ex
 
_Flﬂt32x


	)

175 #i‡
__HAVE_FLOAT64X


176 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


177 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


178 
	#__CFLOAT64X
 
_Com∂ex
 

	)

180 
	#__CFLOAT64X
 
__CFLOAT128


	)

183 
	#__CFLOAT64X
 
_Com∂ex
 
_Flﬂt64x


	)

187 #i‡
__HAVE_FLOAT128X


188 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


191 
	#__CFLOAT128X
 
_Com∂ex
 
_Flﬂt128x


	)

196 #i‡
__HAVE_FLOAT16


198 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


199 
	t_Flﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HF__
)));

202 #i‡!
__GNUC_PREREQ
 (7, 0)

203 
	#__buûtö_huge_vÆf16
(Ë((
_Flﬂt16
Ë
	`__buûtö_huge_vÆ
 ())

	)

204 
	#__buûtö_öff16
(Ë((
_Flﬂt16
Ë
	`__buûtö_öf
 ())

	)

205 
	#__buûtö_«nf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«n
 (x))

	)

206 
	#__buûtö_«nsf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«ns
 (x))

	)

211 #i‡
__HAVE_FLOAT32


213 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


214 
	t_Flﬂt32
;

217 #i‡!
__GNUC_PREREQ
 (7, 0)

218 
	#__buûtö_huge_vÆf32
(Ë(
	`__buûtö_huge_vÆf
 ())

	)

219 
	#__buûtö_öff32
(Ë(
	`__buûtö_öff
 ())

	)

220 
	#__buûtö_«nf32
(
x
Ë(
	`__buûtö_«nf
 (x))

	)

221 
	#__buûtö_«nsf32
(
x
Ë(
	`__buûtö_«nsf
 (x))

	)

226 #i‡
__HAVE_FLOAT64


235 #ifde‡
__NO_LONG_DOUBLE_MATH


237 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


238 
	t_Flﬂt64
;

241 #i‡!
__GNUC_PREREQ
 (7, 0)

242 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

243 
	#__buûtö_öff64
(Ë(
	`__buûtö_öÊ
 ())

	)

244 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

245 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

250 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


251 
	t_Flﬂt64
;

254 #i‡!
__GNUC_PREREQ
 (7, 0)

255 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

256 
	#__buûtö_öff64
(Ë(
	`__buûtö_öf
 ())

	)

257 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«n
 (x))

	)

258 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

265 #i‡
__HAVE_FLOAT32X


267 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


268 
	t_Flﬂt32x
;

271 #i‡!
__GNUC_PREREQ
 (7, 0)

272 
	#__buûtö_huge_vÆf32x
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

273 
	#__buûtö_öff32x
(Ë(
	`__buûtö_öf
 ())

	)

274 
	#__buûtö_«nf32x
(
x
Ë(
	`__buûtö_«n
 (x))

	)

275 
	#__buûtö_«nsf32x
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

280 #i‡
__HAVE_FLOAT64X


282 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


284 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


285 
	t_Flﬂt64x
;

288 #i‡!
__GNUC_PREREQ
 (7, 0)

289 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

290 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öÊ
 ())

	)

291 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

292 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

297 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


298 
_Flﬂt128
 
	t_Flﬂt64x
;

301 #i‡!
__GNUC_PREREQ
 (7, 0)

302 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆf128
 ())

	)

303 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öff128
 ())

	)

304 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«nf128
 (x))

	)

305 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«nsf128
 (x))

	)

312 #i‡
__HAVE_FLOAT128X


314 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


318 #i‡!
__GNUC_PREREQ
 (7, 0)

319 
	#__buûtö_huge_vÆf128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_huge_vÆ
 ())

	)

320 
	#__buûtö_öff128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_öf
 ())

	)

321 
	#__buûtö_«nf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«n
 (x))

	)

322 
	#__buûtö_«nsf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«ns
 (x))

	)

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/siginfo-arch.h

2 #i‚de‡
_BITS_SIGINFO_ARCH_H


3 
	#_BITS_SIGINFO_ARCH_H
 1

	)

5 #i‡
deföed
 
__x86_64__
 && 
__WORDSIZE
 == 32

12 
__˛ock_t
 
	t__©åibuã__
 ((
	t__Æig√d__
 (4))Ë
	t__sigchld_˛ock_t
;

13 
	#__SI_ALIGNMENT
 
	`__©åibuã__
 ((
	`__Æig√d__
 (8)))

	)

14 
	#__SI_CLOCK_T
 
__sigchld_˛ock_t


	)

	@/usr/include/bits/siginfo-consts-arch.h

2 #i‚de‡
_BITS_SIGINFO_CONSTS_ARCH_H


3 
	#_BITS_SIGINFO_CONSTS_ARCH_H
 1

	)

	@/usr/include/bits/signum-generic.h

19 #i‚def 
_BITS_SIGNUM_GENERIC_H


20 
	#_BITS_SIGNUM_GENERIC_H
 1

	)

22 #i‚de‡
_SIGNAL_H


28 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

29 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

30 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

32 #ifde‡
__USE_XOPEN


33 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

48 
	#SIGINT
 2

	)

49 
	#SIGILL
 4

	)

50 
	#SIGABRT
 6

	)

51 
	#SIGFPE
 8

	)

52 
	#SIGSEGV
 11

	)

53 
	#SIGTERM
 15

	)

56 
	#SIGHUP
 1

	)

57 
	#SIGQUIT
 3

	)

58 
	#SIGTRAP
 5

	)

59 
	#SIGKILL
 9

	)

60 
	#SIGBUS
 10

	)

61 
	#SIGSYS
 12

	)

62 
	#SIGPIPE
 13

	)

63 
	#SIGALRM
 14

	)

66 
	#SIGURG
 16

	)

67 
	#SIGSTOP
 17

	)

68 
	#SIGTSTP
 18

	)

69 
	#SIGCONT
 19

	)

70 
	#SIGCHLD
 20

	)

71 
	#SIGTTIN
 21

	)

72 
	#SIGTTOU
 22

	)

73 
	#SIGPOLL
 23

	)

74 
	#SIGXCPU
 24

	)

75 
	#SIGXFSZ
 25

	)

76 
	#SIGVTALRM
 26

	)

77 
	#SIGPROF
 27

	)

78 
	#SIGUSR1
 30

	)

79 
	#SIGUSR2
 31

	)

83 
	#SIGWINCH
 28

	)

86 
	#SIGIO
 
SIGPOLL


	)

87 
	#SIGIOT
 
SIGABRT


	)

88 
	#SIGCLD
 
SIGCHLD


	)

96 
	#__SIGRTMIN
 32

	)

97 
	#__SIGRTMAX
 
__SIGRTMIN


	)

100 
	#_NSIG
 (
__SIGRTMAX
 + 1)

	)

	@/usr/include/bits/stdint-uintn.h

19 #i‚de‡
_BITS_STDINT_UINTN_H


20 
	#_BITS_STDINT_UINTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__uöt8_t
 
	tuöt8_t
;

25 
__uöt16_t
 
	tuöt16_t
;

26 
__uöt32_t
 
	tuöt32_t
;

27 
__uöt64_t
 
	tuöt64_t
;

	@/usr/include/bits/strings_fortified.h

19 #i‚de‡
__STRINGS_FORTIFIED


20 
	#__STRINGS_FORTIFIED
 1

	)

22 
__f‹tify_fun˘i⁄
 

23 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

25 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

26 
	}
}

28 
__f‹tify_fun˘i⁄
 

29 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

31 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

32 
	}
}

	@/usr/include/bits/thread-shared-types.h

19 #i‚de‡
_THREAD_SHARED_TYPES_H


20 
	#_THREAD_SHARED_TYPES_H
 1

	)

77 
	~<bôs/±hªadty≥s-¨ch.h
>

81 #i‡!
__PTHREAD_MUTEX_USE_UNION


82 
	s__±hªad_öã∫Æ_li°


84 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

85 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

86 } 
	t__±hªad_li°_t
;

88 
	s__±hªad_öã∫Æ_¶i°


90 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

91 } 
	t__±hªad_¶i°_t
;

95 #i‡
__PTHREAD_MUTEX_LOCK_ELISION


96 #i‡!
__PTHREAD_MUTEX_USE_UNION


97 
	#__PTHREAD_SPINS_DATA
 \

98 
__•ös
; \

99 
__ñisi⁄


	)

100 
	#__PTHREAD_SPINS
 0, 0

	)

102 
	#__PTHREAD_SPINS_DATA
 \

105 
__e•ös
; \

106 
__ìlisi⁄
; \

107 } 
__ñisi⁄_d©a


	)

108 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

109 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

110 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ìlisi⁄


	)

113 
	#__PTHREAD_SPINS_DATA
 
__•ös


	)

115 
	#__PTHREAD_SPINS
 0

	)

118 
	s__±hªad_muãx_s


120 
__lock
 
	m__LOCK_ALIGNMENT
;

121 
	m__cou¡
;

122 
	m__ow√r
;

123 #i‡!
__PTHREAD_MUTEX_NUSERS_AFTER_KIND


124 
	m__nu£rs
;

148 
	m__köd
;

149 
	m__PTHREAD_COMPAT_PADDING_MID


150 #i‡
__PTHREAD_MUTEX_NUSERS_AFTER_KIND


151 
	m__nu£rs
;

153 #i‡!
__PTHREAD_MUTEX_USE_UNION


154 
	m__PTHREAD_SPINS_DATA
;

155 
__±hªad_li°_t
 
	m__li°
;

156 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

158 
__exãnsi⁄__
 union

160 
	m__PTHREAD_SPINS_DATA
;

161 
__±hªad_¶i°_t
 
	m__li°
;

163 
	#__PTHREAD_MUTEX_HAVE_PREV
 0

	)

165 
	m__PTHREAD_COMPAT_PADDING_END


171 
	s__±hªad_c⁄d_s


173 
__exãnsi⁄__
 union

175 
__exãnsi⁄__
 
	m__w£q
;

178 
	m__low
;

179 
	m__high
;

180 } 
	m__w£q32
;

182 
__exãnsi⁄__
 union

184 
__exãnsi⁄__
 
	m__g1_°¨t
;

187 
	m__low
;

188 
	m__high
;

189 } 
	m__g1_°¨t32
;

191 
	m__g_ªfs
[2] 
	m__LOCK_ALIGNMENT
;

192 
	m__g_size
[2];

193 
	m__g1_‹ig_size
;

194 
	m__wªfs
;

195 
	m__g_sig«ls
[2];

	@/usr/include/bits/time64.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TIME64_H


24 
	#_BITS_TIME64_H
 1

	)

28 #i‡
__TIMESIZE
 == 64

30 
	#__TIME64_T_TYPE
 
__TIME_T_TYPE


	)

33 
	#__TIME64_T_TYPE
 
__SQUAD_TYPE


	)

	@/usr/include/bits/timesize.h

19 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


21 
	#__TIMESIZE
 64

	)

24 
	#__TIMESIZE
 
__WORDSIZE


	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

22 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

26 
	stimex


28 
	mmodes
;

29 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

30 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

31 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

32 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

33 
	m°©us
;

34 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

35 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

36 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

37 
timevÆ
 
	mtime
;

38 
__sysˇŒ_¶⁄g_t
 
	mtick
;

39 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

40 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

41 
	mshi·
;

42 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

43 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

46 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

48 
	mèi
;

57 
	#ADJ_OFFSET
 0x0001

	)

58 
	#ADJ_FREQUENCY
 0x0002

	)

59 
	#ADJ_MAXERROR
 0x0004

	)

60 
	#ADJ_ESTERROR
 0x0008

	)

61 
	#ADJ_STATUS
 0x0010

	)

62 
	#ADJ_TIMECONST
 0x0020

	)

63 
	#ADJ_TAI
 0x0080

	)

64 
	#ADJ_SETOFFSET
 0x0100

	)

65 
	#ADJ_MICRO
 0x1000

	)

66 
	#ADJ_NANO
 0x2000

	)

67 
	#ADJ_TICK
 0x4000

	)

68 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

69 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

72 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

73 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

74 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

75 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

76 
	#MOD_STATUS
 
ADJ_STATUS


	)

77 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

78 
	#MOD_CLKB
 
ADJ_TICK


	)

79 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

80 
	#MOD_TAI
 
ADJ_TAI


	)

81 
	#MOD_MICRO
 
ADJ_MICRO


	)

82 
	#MOD_NANO
 
ADJ_NANO


	)

86 
	#STA_PLL
 0x0001

	)

87 
	#STA_PPSFREQ
 0x0002

	)

88 
	#STA_PPSTIME
 0x0004

	)

89 
	#STA_FLL
 0x0008

	)

91 
	#STA_INS
 0x0010

	)

92 
	#STA_DEL
 0x0020

	)

93 
	#STA_UNSYNC
 0x0040

	)

94 
	#STA_FREQHOLD
 0x0080

	)

96 
	#STA_PPSSIGNAL
 0x0100

	)

97 
	#STA_PPSJITTER
 0x0200

	)

98 
	#STA_PPSWANDER
 0x0400

	)

99 
	#STA_PPSERROR
 0x0800

	)

101 
	#STA_CLOCKERR
 0x1000

	)

102 
	#STA_NANO
 0x2000

	)

103 
	#STA_MODE
 0x4000

	)

104 
	#STA_CLK
 0x8000

	)

107 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

108 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/types/__locale_t.h

20 #i‚de‡
_BITS_TYPES___LOCALE_T_H


21 
	#_BITS_TYPES___LOCALE_T_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

42 
__loˇÀ_°ru˘
 *
	t__loˇÀ_t
;

	@/usr/include/bits/types/__mbstate_t.h

1 #i‚de‡
____mb°©e_t_deföed


2 
	#____mb°©e_t_deföed
 1

	)

8 #i‚de‡
__WINT_TYPE__


9 
	#__WINT_TYPE__
 

	)

15 
	m__cou¡
;

18 
__WINT_TYPE__
 
	m__wch
;

19 
	m__wchb
[4];

20 } 
	m__vÆue
;

21 } 
	t__mb°©e_t
;

	@/usr/include/bits/types/__sigset_t.h

1 #i‚de‡
____sig£t_t_deföed


2 
	#____sig£t_t_deföed


	)

4 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

7 
	m__vÆ
[
_SIGSET_NWORDS
];

8 } 
	t__sig£t_t
;

	@/usr/include/bits/types/__sigval_t.h

19 #i‚de‡
____sigvÆ_t_deföed


20 
	#____sigvÆ_t_deföed


	)

23 #ifde‡
__USE_POSIX199309


24 
	usigvÆ


26 
	msivÆ_öt
;

27 *
	msivÆ_±r
;

30 
sigvÆ
 
	t__sigvÆ_t
;

32 
	u__sigvÆ


34 
	m__sivÆ_öt
;

35 *
	m__sivÆ_±r
;

38 
__sigvÆ
 
	t__sigvÆ_t
;

	@/usr/include/bits/types/struct_timeval.h

1 #i‚de‡
__timevÆ_deföed


2 
	#__timevÆ_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
	stimevÆ


10 
__time_t
 
	mtv_£c
;

11 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

74 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

76 #ifde‡
__x86_64__


80 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

83 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__RLIM_T_MATCHES_RLIM64_T
 1

	)

88 
	#__RLIM_T_MATCHES_RLIM64_T
 0

	)

92 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uintn-identity.h

19 #i‡!
deföed
 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_UINTN_IDENTITY_H


24 
	#_BITS_UINTN_IDENTITY_H
 1

	)

26 
	~<bôs/ty≥s.h
>

32 
__ölöe
 
__uöt16_t


33 
	$__uöt16_idítôy
 (
__uöt16_t
 
__x
)

35  
__x
;

36 
	}
}

38 
__ölöe
 
__uöt32_t


39 
	$__uöt32_idítôy
 (
__uöt32_t
 
__x
)

41  
__x
;

42 
	}
}

44 
__ölöe
 
__uöt64_t


45 
	$__uöt64_idítôy
 (
__uöt64_t
 
__x
)

47  
__x
;

48 
	}
}

	@/usr/include/bits/uio_lim.h

19 #i‚de‡
_BITS_UIO_LIM_H


20 
	#_BITS_UIO_LIM_H
 1

	)

30 
	#__IOV_MAX
 1024

	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

58 
	#__STDC_ISO_10646__
 201706L

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

58 
	#__NTHNL
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

60 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

61 
	#__THROW
 
	`throw
 ()

	)

62 
	#__THROWNL
 
	`throw
 ()

	)

63 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__NTHNL
(
f˘
Ëf˘ 
	`throw
 ()

	)

66 
	#__THROW


	)

67 
	#__THROWNL


	)

68 
	#__NTH
(
f˘
Ë
	)
fct

69 
	#__NTHNL
(
f˘
Ë
	)
fct

75 #i‡(
deföed
 
__˝lu•lus
 \

76 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

77 
	#__ölöe
 
ölöe


	)

79 
	#__ölöe


	)

82 
	#__THROW


	)

83 
	#__THROWNL


	)

84 
	#__NTH
(
f˘
Ë
	)
fct

91 #i‡
deföed
 
__˛™g__
 && deföed 
__has_exãnsi⁄


92 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë
	`__has_exãnsi⁄
 (ext)

	)

94 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë0

	)

99 
	#__P
(
¨gs
Ë
	)
args

100 
	#__PMT
(
¨gs
Ë
	)
args

105 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

106 
	#__STRING
(
x
Ë#x

	)

109 
	#__±r_t
 *

	)

113 #ifdef 
__˝lu•lus


114 
	#__BEGIN_DECLS
 "C" {

	)

115 
	#__END_DECLS
 }

	)

117 
	#__BEGIN_DECLS


	)

118 
	#__END_DECLS


	)

123 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

124 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

126 #i‡
__GNUC_PREREQ
 (4,3)

127 
	#__w¨nde˛
(
«me
, 
msg
) \

128 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

129 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

130 
	#__îr‹de˛
(
«me
, 
msg
) \

131 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

133 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

134 
	#__w¨«âr
(
msg
)

	)

135 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

142 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

143 
	#__Êex¨r
 []

	)

144 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

145 #ñi‡
__GNUC_PREREQ
 (2,97)

148 
	#__Êex¨r
 []

	)

149 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

150 #ñi‡
deföed
 
__GNUC__


153 
	#__Êex¨r
 [0]

	)

154 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

157 
	#__Êex¨r
 [1]

	)

158 
	#__glibc_c99_Êex¨r_avaûabÀ
 0

	)

172 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

174 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

175 #ifde‡
__˝lu•lus


176 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

177 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

178 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

179 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

182 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

183 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

184 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

186 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

187 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

200 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

201 
	#__©åibuã__
(
xyz
Ë

	)

207 #i‡
__GNUC_PREREQ
 (2,96)

208 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

210 
	#__©åibuã_mÆloc__


	)

215 #i‡
__GNUC_PREREQ
 (4, 3)

216 
	#__©åibuã_Æloc_size__
(
∑øms
) \

217 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

219 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

225 #i‡
__GNUC_PREREQ
 (2,96)

226 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

228 
	#__©åibuã_puª__


	)

232 #i‡
__GNUC_PREREQ
 (2,5)

233 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

235 
	#__©åibuã_c⁄°__


	)

241 #i‡
__GNUC_PREREQ
 (3,1)

242 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

243 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

245 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

246 
	#__©åibuã_noölöe__


	)

250 #i‡
__GNUC_PREREQ
 (3,2)

251 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

253 
	#__©åibuã_dïªˇãd__


	)

259 #i‡
__GNUC_PREREQ
 (4,5) || \

260 
	$__glibc_˛™g_has_exãnsi⁄
 (
__©åibuã_dïªˇãd_wôh_mesßge__
)

261 
	#__©åibuã_dïªˇãd_msg__
(
msg
) \

262 
	`__©åibuã__
 ((
	`__dïªˇãd__
 (
msg
)))

	)

264 
	#__©åibuã_dïªˇãd_msg__
(
msg
Ë
__©åibuã_dïªˇãd__


	)

273 #i‡
	`__GNUC_PREREQ
 (2,8)

274 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

276 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

283 #i‡
	`__GNUC_PREREQ
 (2,97)

284 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

285 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

287 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

292 #i‡
	`__GNUC_PREREQ
 (3,3)

293 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

295 
	#__n⁄nuŒ
(
∑øms
)

	)

300 #i‡
	`__GNUC_PREREQ
 (3,4)

301 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

302 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

303 #i‡
__USE_FORTIFY_LEVEL
 > 0

304 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

307 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

309 #i‚de‡
__wur


310 
	#__wur


	)

314 #i‡
	`__GNUC_PREREQ
 (3,2)

318 #unde‡
__Æways_ölöe


319 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

321 #unde‡
__Æways_ölöe


322 
	#__Æways_ölöe
 
__ölöe


	)

327 #i‡
	`__GNUC_PREREQ
 (4,3)

328 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

330 
	#__©åibuã_¨tificül__


	)

342 #i‡(!
deföed
 
__˝lu•lus
 || 
	`__GNUC_PREREQ
 (4,3) \

343 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

344 || 
deföed
 
__GNUC_GNU_INLINE__
)))

345 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


346 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

347 
	#__exã∫_Æways_ölöe
 \

348 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

350 
	#__exã∫_ölöe
 
__ölöe


	)

351 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

355 #ifde‡
__exã∫_Æways_ölöe


356 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

361 #i‡
	`__GNUC_PREREQ
 (4,3)

362 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

363 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

370 #i‡!
	`__GNUC_PREREQ
 (2,8)

371 
	#__exãnsi⁄__


	)

375 #i‡!
	`__GNUC_PREREQ
 (2,92)

376 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

377 
	#__ª°ri˘
 
ª°ri˘


	)

379 
	#__ª°ri˘


	)

386 #i‡
	`__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


387 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

389 #ifde‡
__GNUC__


390 
	#__ª°ri˘_¨r


	)

392 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

393 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

396 
	#__ª°ri˘_¨r


	)

401 #i‡
__GNUC__
 >= 3

402 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

403 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

405 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

406 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

409 #ifde‡
__has_©åibuã


410 
	#__glibc_has_©åibuã
(
©å
Ë
	`__has_©åibuã
 (©å)

	)

412 
	#__glibc_has_©åibuã
(
©å
Ë0

	)

415 #i‡(!
deföed
 
_N‹ëu∫
 \

416 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

417 && !
	$__GNUC_PREREQ
 (4,7))

418 #i‡
	`__GNUC_PREREQ
 (2,8)

419 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

421 
	#_N‹ëu∫


	)

425 #i‡
	`__GNUC_PREREQ
 (8, 0)

429 
	#__©åibuã_n⁄°rög__
 
	`__©åibuã__
 ((
__n⁄°rög__
))

	)

431 
	#__©åibuã_n⁄°rög__


	)

435 #unde‡
__©åibuã_c›y__


436 #i‡
	`__GNUC_PREREQ
 (9, 0)

439 
	#__©åibuã_c›y__
(
¨g
Ë
	`__©åibuã__
 ((
	`__c›y__
 (¨g)))

	)

441 
	#__©åibuã_c›y__
(
¨g
)

	)

444 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

445 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

446 && (!
	`__GNUC_PREREQ
 (4, 6Ë|| 
deföed
 
__STRICT_ANSI__
))

447 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

448 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

449 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

452 
	~<bôs/w‹dsize.h
>

453 
	~<bôs/l⁄g-doubÀ.h
>

455 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


456 
	#__LDBL_COMPAT
 1

	)

457 #ifde‡
__REDIRECT


458 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

459 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

460 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

461 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

462 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

463 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

464 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

465 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

466 
	#__LDBL_REDIR_DECL
(
«me
) \

467 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

468 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

469 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

470 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

471 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

474 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


475 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

476 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

477 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

478 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

479 
	#__LDBL_REDIR_DECL
(
«me
)

	)

480 #ifde‡
__REDIRECT


481 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

482 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

483 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

492 #i‡
	`__GNUC_PREREQ
 (4,8Ë|| 
	`__glibc_˛™g_¥îeq
 (3,5)

493 
	#__glibc_ma¸o_w¨nög1
(
mesßge
Ë
	`_Pøgma
 (#mesßge)

	)

494 
	#__glibc_ma¸o_w¨nög
(
mesßge
) \

495 
	`__glibc_ma¸o_w¨nög1
 (
GCC
 
w¨nög
 
mesßge
)

	)

497 
	#__glibc_ma¸o_w¨nög
(
msg
)

	)

507 #i‡!
deföed
 
__˝lu•lus
 \

508 && (
	`__GNUC_PREREQ
 (4, 9) \

509 || 
	`__glibc_˛™g_has_exãnsi⁄
 (
c_gíîic_£À˘i⁄s
) \

510 || (!
deföed
 
__GNUC__
 && deföed 
__STDC_VERSION__
 \

511 && 
__STDC_VERSION__
 >= 201112L))

512 
	#__HAVE_GENERIC_SELECTION
 1

	)

514 
	#__HAVE_GENERIC_SELECTION
 0

	)

	@/usr/include/bits/long-double.h

	@/usr/include/bits/pthreadtypes-arch.h

18 #i‚de‡
_BITS_PTHREADTYPES_ARCH_H


19 
	#_BITS_PTHREADTYPES_ARCH_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

29 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

31 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

32 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

33 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

34 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

35 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

38 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

39 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

40 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

45 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

46 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

47 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

48 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

51 
	#__PTHREAD_COMPAT_PADDING_MID


	)

52 
	#__PTHREAD_COMPAT_PADDING_END


	)

53 
	#__PTHREAD_MUTEX_LOCK_ELISION
 1

	)

54 #ifde‡
__x86_64__


55 
	#__PTHREAD_MUTEX_NUSERS_AFTER_KIND
 0

	)

56 
	#__PTHREAD_MUTEX_USE_UNION
 0

	)

58 
	#__PTHREAD_MUTEX_NUSERS_AFTER_KIND
 1

	)

59 
	#__PTHREAD_MUTEX_USE_UNION
 1

	)

62 
	#__LOCK_ALIGNMENT


	)

63 
	#__ONCE_ALIGNMENT


	)

65 
	s__±hªad_rwlock_¨ch_t


67 
	m__ªadîs
;

68 
	m__wrôîs
;

69 
	m__wΩha£_fuãx
;

70 
	m__wrôîs_fuãx
;

71 
	m__∑d3
;

72 
	m__∑d4
;

73 #ifde‡
__x86_64__


74 
	m__cur_wrôî
;

75 
	m__sh¨ed
;

76 sig√d 
	m__rwñisi⁄
;

77 #ifde‡ 
__ILP32__


78 
	m__∑d1
[3];

79 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

81 
	m__∑d1
[7];

82 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

84 
	m__∑d2
;

87 
	m__Êags
;

88 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

92 
	m__Êags
;

93 
	m__sh¨ed
;

94 sig√d 
	m__rwñisi⁄
;

95 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0

	)

96 
	m__∑d2
;

97 
	m__cur_wrôî
;

101 #i‚de‡
__x86_64__


103 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/types/struct_iovec.h

19 #i‚de‡
__iovec_deföed


20 
	#__iovec_deföed
 1

	)

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 
	siovec


28 *
	miov_ba£
;

29 
size_t
 
	miov_Àn
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub___com∑t_¸óã_moduÀ


	)

12 
	#__°ub___com∑t_gë_kî√l_syms


	)

13 
	#__°ub___com∑t_nfs£rv˘l


	)

14 
	#__°ub___com∑t_quîy_moduÀ


	)

15 
	#__°ub___com∑t_u£lib


	)

16 
	#__°ub_chÊags


	)

17 
	#__°ub_Áâach


	)

18 
	#__°ub_fchÊags


	)

19 
	#__°ub_fdëach


	)

20 
	#__°ub_gëmsg


	)

21 
	#__°ub_gây


	)

22 
	#__°ub_lchmod


	)

23 
	#__°ub_putmsg


	)

24 
	#__°ub_ªvoke


	)

25 
	#__°ub_£éogö


	)

26 
	#__°ub_sigªtu∫


	)

27 
	#__°ub_s°k


	)

28 
	#__°ub_°ty


	)

	@/usr/include/linux/falloc.h

2 #i‚de‡
_FALLOC_H_


3 
	#_FALLOC_H_


	)

5 
	#FALLOC_FL_KEEP_SIZE
 0x01

	)

6 
	#FALLOC_FL_PUNCH_HOLE
 0x02

	)

7 
	#FALLOC_FL_NO_HIDE_STALE
 0x04

	)

29 
	#FALLOC_FL_COLLAPSE_RANGE
 0x08

	)

43 
	#FALLOC_FL_ZERO_RANGE
 0x10

	)

60 
	#FALLOC_FL_INSERT_RANGE
 0x20

	)

78 
	#FALLOC_FL_UNSHARE_RANGE
 0x40

	)

	@/usr/include/linux/limits.h

2 #i‚de‡
_LINUX_LIMITS_H


3 
	#_LINUX_LIMITS_H


	)

5 
	#NR_OPEN
 1024

	)

7 
	#NGROUPS_MAX
 65536

	)

8 
	#ARG_MAX
 131072

	)

9 
	#LINK_MAX
 127

	)

10 
	#MAX_CANON
 255

	)

11 
	#MAX_INPUT
 255

	)

12 
	#NAME_MAX
 255

	)

13 
	#PATH_MAX
 4096

	)

14 
	#PIPE_BUF
 4096

	)

15 
	#XATTR_NAME_MAX
 255

	)

16 
	#XATTR_SIZE_MAX
 65536

	)

17 
	#XATTR_LIST_MAX
 65536

	)

19 
	#RTSIG_MAX
 32

	)

	@
1
.
1
/usr/include
151
4018
_paths.h
xl.c
xl.h
xl_block.c
xl_cdrom.c
xl_cmdtable.c
xl_console.c
xl_cpupool.c
xl_flask.c
xl_info.c
xl_mem.c
xl_migrate.c
xl_misc.c
xl_nic.c
xl_parse.c
xl_parse.h
xl_pci.c
xl_psr.c
xl_saverestore.c
xl_sched.c
xl_sxp.c
xl_tmem.c
xl_usb.c
xl_utils.c
xl_utils.h
xl_vcpu.c
xl_vdispl.c
xl_vmcontrol.c
xl_vtpm.c
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/regex.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/stat.h
/usr/include/sys/types.h
/usr/include/sys/utsname.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/floatn.h
/usr/include/bits/getopt_core.h
/usr/include/bits/getopt_ext.h
/usr/include/bits/getopt_posix.h
/usr/include/bits/libc-header-start.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/sigevent-consts.h
/usr/include/bits/siginfo-consts.h
/usr/include/bits/signum.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/ss_flags.h
/usr/include/bits/stat.h
/usr/include/bits/statx.h
/usr/include/bits/stdint-intn.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string_fortified.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/types/FILE.h
/usr/include/bits/types/__FILE.h
/usr/include/bits/types/__fpos64_t.h
/usr/include/bits/types/__fpos_t.h
/usr/include/bits/types/clock_t.h
/usr/include/bits/types/clockid_t.h
/usr/include/bits/types/cookie_io_functions_t.h
/usr/include/bits/types/locale_t.h
/usr/include/bits/types/sig_atomic_t.h
/usr/include/bits/types/sigevent_t.h
/usr/include/bits/types/siginfo_t.h
/usr/include/bits/types/sigset_t.h
/usr/include/bits/types/sigval_t.h
/usr/include/bits/types/stack_t.h
/usr/include/bits/types/struct_FILE.h
/usr/include/bits/types/struct_itimerspec.h
/usr/include/bits/types/struct_sigstack.h
/usr/include/bits/types/struct_timespec.h
/usr/include/bits/types/struct_tm.h
/usr/include/bits/types/time_t.h
/usr/include/bits/types/timer_t.h
/usr/include/bits/unistd.h
/usr/include/bits/utsname.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/stdint.h
/usr/include/strings.h
/usr/include/sys/select.h
/usr/include/sys/ucontext.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/fcntl-linux.h
/usr/include/bits/floatn-common.h
/usr/include/bits/local_lim.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/siginfo-arch.h
/usr/include/bits/siginfo-consts-arch.h
/usr/include/bits/signum-generic.h
/usr/include/bits/stdint-uintn.h
/usr/include/bits/strings_fortified.h
/usr/include/bits/thread-shared-types.h
/usr/include/bits/time64.h
/usr/include/bits/timesize.h
/usr/include/bits/timex.h
/usr/include/bits/types/__locale_t.h
/usr/include/bits/types/__mbstate_t.h
/usr/include/bits/types/__sigset_t.h
/usr/include/bits/types/__sigval_t.h
/usr/include/bits/types/struct_timeval.h
/usr/include/bits/typesizes.h
/usr/include/bits/uintn-identity.h
/usr/include/bits/uio_lim.h
/usr/include/bits/wchar.h
/usr/include/gnu/stubs.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/bits/long-double.h
/usr/include/bits/pthreadtypes-arch.h
/usr/include/bits/types/struct_iovec.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
/usr/include/linux/falloc.h
/usr/include/linux/limits.h
