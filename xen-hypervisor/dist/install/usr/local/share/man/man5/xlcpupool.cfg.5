.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "xlcpupool.cfg 5"
.TH xlcpupool.cfg 5 "2019-10-18" "4.11.0" "Xen"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
xlcpupool.cfg \- XL Cpupool Configuration File Syntax
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& /etc/xen/xlcpupool
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
To create a Cpupool with xl requires the provision of a cpupool config
file.  Typically these live in `/etc/xen/CPUPOOL.cfg` where \s-1CPUPOOL\s0 is
the name of the cpupool.
.SH "SYNTAX"
.IX Header "SYNTAX"
A cpupool config file consists of a series of \f(CW\*(C`KEY=VALUE\*(C'\fR pairs.
.PP
A value \f(CW\*(C`VALUE\*(C'\fR is one of:
.ie n .IP "\fB""\s-1STRING""\s0\fR" 4
.el .IP "\fB``\s-1STRING''\s0\fR" 4
.IX Item "STRING"
A string, surrounded by either single or double quotes.
.IP "\fB\s-1NUMBER\s0\fR" 4
.IX Item "NUMBER"
A number, in either decimal, octal (using a \f(CW0\fR prefix) or
hexadecimal (using an \f(CW\*(C`0x\*(C'\fR prefix).
.IP "\fB[ \s-1VALUE, VALUE, ...\s0 ]\fR" 4
.IX Item "[ VALUE, VALUE, ... ]"
A list of \f(CW\*(C`VALUES\*(C'\fR of the above types. Lists are homogeneous and are
not nested.
.PP
The semantics of each \f(CW\*(C`KEY\*(C'\fR defines which form of \f(CW\*(C`VALUE\*(C'\fR is required.
.SH "OPTIONS"
.IX Header "OPTIONS"
.SS "Mandatory Configuration Items"
.IX Subsection "Mandatory Configuration Items"
The following key is mandatory for any cpupool:
.ie n .IP "\fBname=""\s-1NAME""\s0\fR" 4
.el .IP "\fBname=``\s-1NAME''\s0\fR" 4
.IX Item "name=NAME"
Specifies the name of the cpupool.  Names of cpupools existing on a
single host must be unique.
.SS "Optional Configuration Items"
.IX Subsection "Optional Configuration Items"
The following options apply to guests of any type.
.ie n .IP "\fBsched=""\s-1SCHED""\s0\fR" 4
.el .IP "\fBsched=``\s-1SCHED''\s0\fR" 4
.IX Item "sched=SCHED"
Specifies the scheduler which is used for the cpupool. Valid
values for \f(CW\*(C`SCHED\*(C'\fR are:
.RS 4
.IP "\fBcredit\fR" 4
.IX Item "credit"
the credit scheduler
.IP "\fBcredit2\fR" 4
.IX Item "credit2"
the credit2 scheduler
.IP "\fBrtds\fR" 4
.IX Item "rtds"
the \s-1RTDS\s0 scheduler
.RE
.RS 4
.Sp
The default scheduler is the one used for \f(CW\*(C`Pool\-0\*(C'\fR specified as
boot parameter of the hypervisor.
.RE
.ie n .IP "\fBnodes=""\s-1NODES""\s0\fR" 4
.el .IP "\fBnodes=``\s-1NODES''\s0\fR" 4
.IX Item "nodes=NODES"
Specifies the cpus of the NUMA-nodes given in \f(CW\*(C`NODES\*(C'\fR (an integer or
a list of integers) to be member of the cpupool. The free cpus in the
specified nodes are allocated in the new cpupool.
.ie n .IP "\fBcpus=""\s-1CPU\-LIST""\s0\fR" 4
.el .IP "\fBcpus=``\s-1CPU\-LIST''\s0\fR" 4
.IX Item "cpus=CPU-LIST"
Specifies the cpus that will be member of the cpupool. All the specified
cpus must be free, or creation will fail. \f(CW\*(C`CPU\-LIST\*(C'\fR may be specified
as follows:
.RS 4
.ie n .IP "[""2"", ""3"", ""5""]" 4
.el .IP "[``2'', ``3'', ``5'']" 4
.IX Item "[2, 3, 5]"
means that cpus 2,3,5 will be member of the cpupool.
.ie n .IP """0\-3,5,^1""" 4
.el .IP "``0\-3,5,^1''" 4
.IX Item "0-3,5,^1"
means that cpus 0,2,3 and 5 will be member of the cpupool. A \*(L"node:\*(R" or
\&\*(L"nodes:\*(R" modifier can be used. E.g., \*(L"0,node:1,nodes:2\-3,^10\-13\*(R" means
that pcpus 0, plus all the cpus of \s-1NUMA\s0 nodes 1,2,3 with the exception
of cpus 10,11,12,13 will be memeber of the cpupool.
.RE
.RS 4
.Sp
If neither \fBnodes\fR nor \fBcpus\fR are specified only the first free cpu
found will be allocated in the new cpupool.
.RE
.SH "FILES"
.IX Header "FILES"
\&\fI/etc/xen/CPUPOOL.cfg\fR
.SH "BUGS"
.IX Header "BUGS"
This document is a work in progress and contains items which require
further documentation and which are generally incomplete (marked with
\&\s-1XXX\s0).  However all options are included here whether or not they are
fully documented.
.PP
Patches to improve incomplete items (or any other item) would be
gratefully received on the xen\-devel@lists.xen.org mailing
list. Please see <http://wiki.xen.org/wiki/SubmittingXenPatches> for
information on how to submit a patch to Xen.
