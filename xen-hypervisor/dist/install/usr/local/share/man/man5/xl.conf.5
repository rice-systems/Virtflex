.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "xl.conf 5"
.TH xl.conf 5 "2019-10-18" "4.11.0" "Xen"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
/etc/xen/xl.conf \- XL Global/Host Configuration
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \fIxl.conf\fR file allows configuration of hostwide \f(CW\*(C`xl\*(C'\fR toolstack
options.
.PP
For details of per-domain configuration options please see
\&\fBxl.cfg\fR\|(5).
.SH "SYNTAX"
.IX Header "SYNTAX"
The config file consists of a series of \f(CW\*(C`KEY=VALUE\*(C'\fR pairs.
.PP
A value \f(CW\*(C`VALUE\*(C'\fR is one of:
.ie n .IP "\fB""\s-1STRING""\s0\fR" 4
.el .IP "\fB``\s-1STRING''\s0\fR" 4
.IX Item "STRING"
A string, surrounded by either single or double quotes.
.IP "\fB\s-1NUMBER\s0\fR" 4
.IX Item "NUMBER"
A number, in either decimal, octal (using a \f(CW0\fR prefix) or
hexadecimal (using an \f(CW\*(C`0x\*(C'\fR prefix).
.IP "\fB\s-1BOOLEAN\s0\fR" 4
.IX Item "BOOLEAN"
A \f(CW\*(C`NUMBER\*(C'\fR interpreted as \f(CW\*(C`False\*(C'\fR (\f(CW0\fR) or \f(CW\*(C`True\*(C'\fR (any other
value).
.IP "\fB[ \s-1VALUE, VALUE, ...\s0 ]\fR" 4
.IX Item "[ VALUE, VALUE, ... ]"
A list of \f(CW\*(C`VALUES\*(C'\fR of the above types. Lists are homogeneous and are
not nested.
.PP
The semantics of each \f(CW\*(C`KEY\*(C'\fR defines which form of \f(CW\*(C`VALUE\*(C'\fR is required.
.SH "OPTIONS"
.IX Header "OPTIONS"
.ie n .IP "\fBautoballoon=""off""|""on""|""auto""\fR" 4
.el .IP "\fBautoballoon=``off''|``on''|``auto''\fR" 4
.IX Item "autoballoon=off|on|auto"
If set to \*(L"on\*(R" then \f(CW\*(C`xl\*(C'\fR will automatically reduce the amount of
memory assigned to domain 0 in order to free memory for new domains.
.Sp
If set to \*(L"off\*(R" then \f(CW\*(C`xl\*(C'\fR will not automatically reduce the amount of
domain 0 memory.
.Sp
If set to \*(L"auto\*(R" then auto-ballooning will be disabled if the
\&\f(CW\*(C`dom0_mem\*(C'\fR option was provided on the Xen command line.
.Sp
You are strongly recommended to set this to \f(CW"off"\fR (or \f(CW"auto"\fR) if
you use the \f(CW\*(C`dom0_mem\*(C'\fR hypervisor command line to reduce the amount
of memory given to domain 0 by default.
.Sp
Default: \f(CW"auto"\fR
.IP "\fBrun_hotplug_scripts=BOOLEAN\fR" 4
.IX Item "run_hotplug_scripts=BOOLEAN"
If disabled hotplug scripts will be called from udev, as it used to
be in the previous releases. With the default option, hotplug scripts
will be launched by xl directly.
.Sp
Default: \f(CW1\fR
.ie n .IP "\fBlockfile=""\s-1PATH""\s0\fR" 4
.el .IP "\fBlockfile=``\s-1PATH''\s0\fR" 4
.IX Item "lockfile=PATH"
Sets the path to the lock file used by xl to serialise certain
operations (primarily domain creation).
.Sp
Default: \f(CW\*(C`/var/lock/xl\*(C'\fR
.IP "\fBmax_grant_frames=NUMBER\fR" 4
.IX Item "max_grant_frames=NUMBER"
Sets the default value for the \f(CW\*(C`max_grant_frames\*(C'\fR domain config value.
.Sp
Default: \f(CW32\fR on hosts up to 16TB of memory, \f(CW64\fR on hosts larger than 16TB
.IP "\fBmax_maptrack_frames=NUMBER\fR" 4
.IX Item "max_maptrack_frames=NUMBER"
Sets the default value for the \f(CW\*(C`max_maptrack_frames\*(C'\fR domain config value.
.Sp
Default: \f(CW1024\fR
.ie n .IP "\fBvif.default.script=""\s-1PATH""\s0\fR" 4
.el .IP "\fBvif.default.script=``\s-1PATH''\s0\fR" 4
.IX Item "vif.default.script=PATH"
Configures the default hotplug script used by virtual network devices.
.Sp
The old \fBvifscript\fR option is deprecated and should not be used.
.Sp
Default: \f(CW\*(C`/etc/xen/scripts/vif\-bridge\*(C'\fR
.ie n .IP "\fBvif.default.bridge=""\s-1NAME""\s0\fR" 4
.el .IP "\fBvif.default.bridge=``\s-1NAME''\s0\fR" 4
.IX Item "vif.default.bridge=NAME"
Configures the default bridge to set for virtual network devices.
.Sp
The old \fBdefaultbridge\fR option is deprecated and should not be used.
.Sp
Default: \f(CW\*(C`xenbr0\*(C'\fR
.ie n .IP "\fBvif.default.backend=""\s-1NAME""\s0\fR" 4
.el .IP "\fBvif.default.backend=``\s-1NAME''\s0\fR" 4
.IX Item "vif.default.backend=NAME"
Configures the default backend to set for virtual network devices.
.Sp
Default: \f(CW0\fR
.ie n .IP "\fBvif.default.gatewaydev=""\s-1NAME""\s0\fR" 4
.el .IP "\fBvif.default.gatewaydev=``\s-1NAME''\s0\fR" 4
.IX Item "vif.default.gatewaydev=NAME"
Configures the default gateway device to set for virtual network devices.
.Sp
Default: \f(CW\*(C`None\*(C'\fR
.ie n .IP "\fBremus.default.netbufscript=""\s-1PATH""\s0\fR" 4
.el .IP "\fBremus.default.netbufscript=``\s-1PATH''\s0\fR" 4
.IX Item "remus.default.netbufscript=PATH"
Configures the default script used by Remus to setup network buffering.
.Sp
Default: \f(CW\*(C`/etc/xen/scripts/remus\-netbuf\-setup\*(C'\fR
.ie n .IP "\fBcolo.default.proxyscript=""\s-1PATH""\s0\fR" 4
.el .IP "\fBcolo.default.proxyscript=``\s-1PATH''\s0\fR" 4
.IX Item "colo.default.proxyscript=PATH"
Configures the default script used by \s-1COLO\s0 to setup colo-proxy.
.Sp
Default: \f(CW\*(C`/etc/xen/scripts/colo\-proxy\-setup\*(C'\fR
.ie n .IP "\fBoutput_format=""json|sxp""\fR" 4
.el .IP "\fBoutput_format=``json|sxp''\fR" 4
.IX Item "output_format=json|sxp"
Configures the default output format used by xl when printing \*(L"machine
readable\*(R" information. The default is to use the \f(CW\*(C`JSON\*(C'\fR
<http://www.json.org/> syntax. However for compatibility with the
previous \f(CW\*(C`xm\*(C'\fR toolstack this can be configured to use the old \f(CW\*(C`SXP\*(C'\fR
(S\-Expression-like) syntax instead.
.Sp
Default: \f(CW\*(C`json\*(C'\fR
.ie n .IP "\fBblkdev_start=""\s-1NAME""\s0\fR" 4
.el .IP "\fBblkdev_start=``\s-1NAME''\s0\fR" 4
.IX Item "blkdev_start=NAME"
Configures the name of the first block device to be used for temporary
block device allocations by the toolstack.
The default choice is \*(L"xvda\*(R".
.IP "\fBclaim_mode=BOOLEAN\fR" 4
.IX Item "claim_mode=BOOLEAN"
If this option is enabled then when a guest is created there will be an
guarantee that there is memory available for the guest. This is an
particularly acute problem on hosts with memory over-provisioned guests
that use tmem and have self-balloon enabled (which is the default
option). The self-balloon mechanism can deflate/inflate the balloon
quickly and the amount of free memory (which \f(CW\*(C`xl info\*(C'\fR can show) is
stale the moment it is printed. When claim is enabled a reservation for
the amount of memory (see 'memory' in \fBxl.conf\fR\|(5)) is set, which is then
reduced as the domain's memory is populated and eventually reaches zero.
The free memory in \f(CW\*(C`xl info\*(C'\fR is the combination of the hypervisor's
free heap memory minus the outstanding claims value.
.Sp
If the reservation cannot be meet the guest creation fails immediately
instead of taking seconds/minutes (depending on the size of the guest)
while the guest is populated.
.Sp
Note that to enable tmem type guests, one needs to provide \f(CW\*(C`tmem\*(C'\fR on the
Xen hypervisor argument and as well on the Linux kernel command line.
.Sp
Default: \f(CW1\fR
.RS 4
.ie n .IP "0" 4
.el .IP "\f(CW0\fR" 4
.IX Item "0"
No claim is made. Memory population during guest creation will be
attempted as normal and may fail due to memory exhaustion.
.ie n .IP "1" 4
.el .IP "\f(CW1\fR" 4
.IX Item "1"
Normal memory and freeable pool of ephemeral pages (tmem) is used when
calculating whether there is enough memory free to launch a guest.
This guarantees immediate feedback whether the guest can be launched due
to memory exhaustion (which can take a long time to find out if launching
massively huge guests).
.RE
.RS 4
.RE
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "\fBxl\fR\|(1)" 4
.IX Item "xl"
.PD 0
.IP "\fBxl.cfg\fR\|(5)" 4
.IX Item "xl.cfg"
.IP "http://www.json.org/" 4
.IX Item "http://www.json.org/"
