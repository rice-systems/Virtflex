.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "xen-pv-channel 7"
.TH xen-pv-channel 7 "2019-10-18" "4.11.0" "Xen"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Xen PV Channels
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
A channel is a low-bandwidth private byte stream similar to a serial
link. Typical uses of channels are
.IP "1." 4
to provide initial configuration information to a \s-1VM\s0 on boot
(example use: CloudStack's cloud-early-config service)
.IP "2." 4
to signal/query an in-guest agent
(example use: oVirt's guest agent)
.PP
Channels are similar to virtio-serial devices and emulated serial links.
Channels are intended to be used in the implementation of libvirt s
when running on Xen.
.PP
Note: if an application requires a high-bandwidth link then it should use
vchan instead.
.SS "How to use channels: an example"
.IX Subsection "How to use channels: an example"
Consider a cloud deployment where VMs are cloned from pre-made templates,
and customised on first boot by an in-guest agent which sets the \s-1IP\s0 address,
hostname, ssh keys etc. To install the system the cloud administrator would
first:
.IP "1." 4
Install a guest as normal (no channel configuration necessary)
.IP "2." 4
Install the in-guest agent specific to the cloud software. This will
prepare the guest to communicate over the channel, and also prepare
the guest to be cloned safely (sometimes known as \*(L"sysprepping\*(R")
.IP "3." 4
Shutdown the guest
.IP "4." 4
Register the guest as a template with the cloud orchestration software
.IP "5." 4
Install the cloud orchestration agent in dom0
.PP
At runtime, when a cloud tenant requests that a \s-1VM\s0 is created from the template,
the sequence of events would be: (assuming a Linux domU)
.IP "1." 4
A \s-1VM\s0 is \*(L"cloned\*(R" from the template
.IP "2." 4
A unique Unix domain socket path in dom0 is allocated
(e.g. /my/cloud/software/talk/to/domain/)
.IP "3." 4
Domain configuration is created for the \s-1VM,\s0 listing the channel
name expected by the in-guest agent. In xl syntax this would be:
.Sp
channel = [ \*(L"connection=socket, name=org.my.cloud.software.agent.version1, path = /my/cloud/software/talk/to/domain/\*(R" ]
.IP "4." 4
The \s-1VM\s0 is started
.IP "5." 4
In dom0 the cloud orchestration agent connects to the Unix domain
socket, writes a handshake message and waits for a reply
.IP "6." 4
Assuming the guest kernel has \s-1CONFIG_HVC_XEN_FRONTEND\s0 set then the console
driver will generate a hotplug event
.IP "7." 4
A udev rule is activated by the hotplug event.
.Sp
The udev rule would look something like:
.Sp
SUBSYSTEM==\*(L"xen\*(R", DEVPATH==\*(L"/devices/console\-[0\-9]\*(R", RUN+=\*(L"xen\-console\-setup\*(R"
.Sp
where the \*(L"xen-console-setup\*(R" script would read the channel name and
make a symlink in /dev/xen\-channel/org.my.cloud.software.agent.version1
pointing to /dev/hvcN. N is the same number as the number in \*(L"/devices/console\-[0\-9]\*(R".
In other words, \*(L"/devices/console\-2\*(R" maps to /dev/hvc2.
.IP "8." 4
The in-guest agent uses inotify to see the creation of the /dev/xen\-channel
symlink and opens the device.
.IP "9." 4
The in-guest agent completes the handshake with the dom0 agent
.IP "10." 4
The dom0 agent transmits the unique \s-1VM\s0 configuration: hostname, \s-1IP\s0
address, ssh keys etc etc
.IP "11." 4
The in-guest agent receives the configuration and applies it.
.PP
Using channels avoids having to use a temporary disk device or network
connection.
.SS "Design recommendations and pitfalls"
.IX Subsection "Design recommendations and pitfalls"
It's necessary to install channel-specific software (an \*(L"agent\*(R") into the guest
before you can use a channel. By default a channel will appear as a device
which could be mistaken for a serial port or regular console. It is known
that some software will proactively seek out serial ports and issue \s-1AT\s0 commands
at them; make sure such software is disabled!
.PP
Since channels are identified by names, application authors must ensure their
channel names are unique to avoid clashes. We recommend that channel names
include parts unique to the application such as a domain names. To assist
prevent clashes we recommend authors add their names to our global channel
registry at the end of this document.
.SS "Limitations"
.IX Subsection "Limitations"
Hotplug and unplug of channels is not currently implemented.
.SS "Channel name registry"
.IX Subsection "Channel name registry"
It is important that channel names are globally unique. To help ensure
that no-one's name clashes with yours, please add yours to this list.
.PP
.Vb 4
\&    Key:
\&    N: Name
\&    C: Contact
\&    D: Short description of use, possibly including a URL to your software or API
\&
\&    N: org.xenproject.guest.clipboard.0.1
\&    C: David Scott <dave.scott@citrix.com>
\&    D: Share clipboard data via an in\-guest agent. See:
\&       http://wiki.xenproject.org/wiki/Clipboard_sharing_protocol
.Ve
