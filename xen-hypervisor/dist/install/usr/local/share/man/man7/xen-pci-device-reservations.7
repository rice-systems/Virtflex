.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "xen-pci-device-reservations 7"
.TH xen-pci-device-reservations 7 "2019-10-18" "4.11.0" "Xen"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "Description"
.IX Header "Description"
\&\s-1PCI\s0 vendor \s-1ID\s0 0x5853 has been reserved for use by Xen systems in order to
advertise certain virtual hardware to guest virtual machines. The primary
use of this is with device \s-1ID\s0 0x0001 to advertise the Xen Platform \s-1PCI\s0
device \- the presence of this virtual device enables a guest Operating
System (subject to the availability of suitable drivers) to make use of
paravirtualisation features such as disk and network devices etc.
.PP
Some Xen vendors wish to provide alternative and/or additional guest drivers
that can bind to virtual devices[1]. This may be done using the Xen \s-1PCI\s0
vendor \s-1ID\s0 of 0x5853 and Xen\-vendor/device specific \s-1PCI\s0 device IDs. This file
records reservations made within the device \s-1ID\s0 range in order to avoid
multiple Xen vendors using conflicting IDs.
.SH "Guidelines"
.IX Header "Guidelines"
.IP "1. A vendor may request a range of device IDs by submitting a patch to this file." 4
.IX Item "1. A vendor may request a range of device IDs by submitting a patch to this file."
.PD 0
.IP "2. Vendor allocations should be in the range 0xc000\-0xfffe to reduce the possibility of clashes with community IDs assigned from the bottom up." 4
.IX Item "2. Vendor allocations should be in the range 0xc000-0xfffe to reduce the possibility of clashes with community IDs assigned from the bottom up."
.IP "3. The vendor is responsible for allocations within the range and should try to record specific device IDs in \s-1PCI ID\s0 databases such as http://pciids.sourceforge.net and http//www.pcidatabase.com" 4
.IX Item "3. The vendor is responsible for allocations within the range and should try to record specific device IDs in PCI ID databases such as http://pciids.sourceforge.net and http//www.pcidatabase.com"
.PD
.SH "Reservations"
.IX Header "Reservations"
.Vb 6
\&        range     | vendor/product
\&    \-\-\-\-\-\-\-\-\-\-\-\-\-\-+\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-\-
\&    0x0001        | (Xen Platform PCI device)
\&    0x0002        | Citrix XenServer (grandfathered allocation for XenServer 6.1)
\&    0xc000\-0xc0ff | Citrix XenServer
\&    0xc100\-0xc1ff | Citrix XenClient
.Ve
.SH "Notes"
.IX Header "Notes"
.IP "1." 4
Upstream \s-1QEMU\s0 provides a parameterized device called xen-pvdevice that
can be used to host guest drivers. Execute:
.Sp
.Vb 1
\&    qemu\-system\-i386 \-device xen\-pvdevice,help
.Ve
.Sp
for a list of all parameters. The following parameters are relevant to
driver binding:
.RS 4
.IP "vendor-id (default 0x5853)" 4
.IX Item "vendor-id (default 0x5853)"
The \s-1PCI\s0 vendor \s-1ID\s0 and subsystem vendor \s-1ID\s0 of the device.
.IP "device-id (must be specified)" 4
.IX Item "device-id (must be specified)"
The \s-1PCI\s0 device \s-1ID\s0 and subsystem device \s-1ID\s0 of the device.
.IP "revision (default 0x01)" 4
.IX Item "revision (default 0x01)"
The \s-1PCI\s0 revision of the device
.RE
.RS 4
.Sp
Also the size parameter (default 0x400000) can be used to specify the
size of the single \s-1MMIO BAR\s0 that the device exposes. This area may be
used by drivers for mapping grant tables, etc.
.Sp
Note that the presence of the Xen Platform \s-1PCI\s0 device is generally a
pre-requisite for an additional xen-pvdevice as it is the platform
device that provides that \s-1IO\s0 ports necessary for unplugging emulated
devices. See hvm\-emulated\-unplug.markdown for details of the \s-1IO\s0 ports
and unplug protocol.
.Sp
libxl provides support for creation of a single additional xen-pvdevice.
See the vendor_device parameter in \fBxl.cfg\fR\|(5).
.RE
