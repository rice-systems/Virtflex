.\" Automatically generated by Pod::Man 4.10 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "xentrace 8"
.TH xentrace 8 "2019-10-18" "4.11.0" "Xen"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
xentrace \- capture Xen trace buffer data
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBxentrace\fR [ \fI\s-1OPTIONS\s0\fR ] [ \fI\s-1FILE\s0\fR ]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBxentrace\fR is used to capture trace buffer data from Xen.  The data is
output in the following binary format (host endian):
.PP
.Vb 1
\&    CPU(uint) TSC(u64) EVENT(u32) D1 D2 D3 D4 D5 (all u32)
.Ve
.PP
Where \s-1CPU\s0 is the processor number, \s-1TSC\s0 is the record's timestamp
(the value of the \s-1CPU\s0 cycle counter), \s-1EVENT\s0 is the event \s-1ID\s0 and
D1...D5 are the trace data.
.PP
Data is dumped onto the standard output (which must not be a \s-1TTY\s0) or a
\&\fI\s-1FILE\s0\fR specified on the command line.
.PP
The output should be parsed using the tool xentrace_format, which can
produce human-readable output in \s-1ASCII\s0 format.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-t\fR \fIl\fR, \fB\-\-log\-thresh\fR=\fIl\fR" 4
.IX Item "-t l, --log-thresh=l"
set the threshold number, \fIl\fR, of new records required to trigger a write of
all new records to the output
.IP "\fB\-s\fR \fIp\fR, \fB\-\-poll\-sleep\fR=\fIp\fR" 4
.IX Item "-s p, --poll-sleep=p"
set the time, \fIp\fR, (in milliseconds) to sleep between polling the buffers
for new data.
.IP "\fB\-c\fR [\fIc\fR|\fICPU-LIST\fR|\fIall\fR], \fB\-\-cpu\-mask\fR=[\fIc\fR|\fICPU-LIST\fR|\fIall\fR]" 4
.IX Item "-c [c|CPU-LIST|all], --cpu-mask=[c|CPU-LIST|all]"
This can be: a hex value (of the form 0xNNNN...), or a set of cpu
ranges as described below, or the string \fIall\fR. Hex values are limited
to 32 bits. If not specified, the cpu-mask as set during bootup will be
constructed. If using the \fICPU-LIST\fR it expects decimal numbers, which
may be specified as follows:
.Sp
.Vb 2
\&  "0\-3"
\&      Trace only on CPUs 0 through 3
\&
\&  "0,2,5\-7"
\&      Trace only on CPUs 0, 2, and 5 through 7
\&
\&  "\-3"
\&      Trace only on CPUs 0 through 3
\&
\&  "\-3,7"
\&      Trace only on CPUs 0 through 3 and 7
\&
\&  "3\-"
\&      Trace only on CPUs 3 up to maximum numbers of CPUs the host has
.Ve
.Sp
If using \fIall\fR it will use all of the CPUs the host has.
.IP "\fB\-e\fR \fImask\fR, \fB\-\-evt\-mask\fR=\fImask\fR" 4
.IX Item "-e mask, --evt-mask=mask"
set event capture mask. If not specified the \s-1TRC_ALL\s0 will be used.
.IP "\fB\-?\fR, \fB\-\-help\fR" 4
.IX Item "-?, --help"
Give this help list
.IP "\fB\-\-usage\fR" 4
.IX Item "--usage"
Give a short usage message
.IP "\fB\-V\fR, \fB\-\-version\fR" 4
.IX Item "-V, --version"
Print program version
.SS "Event Classes (Masks)"
.IX Subsection "Event Classes (Masks)"
The following event classes (masks) can be used to filter the events being
gathered by xentrace:
.PP
.Vb 1
\&        ID                  Description
\&
\&        0x0001f000          TRC_GEN
\&        0x0002f000          TRC_SCHED
\&        0x0004f000          TRC_DOM0OP
\&        0x0008f000          TRC_HVM
\&        0x0010f000          TRC_MEM
\&        0xfffff000          TRC_ALL
.Ve
.SS "Event Subclasses (More Masks)"
.IX Subsection "Event Subclasses (More Masks)"
The following event subclasses (masks) can also be used to filter the events being
gathered by xentrace:
.PP
.Vb 1
\&        ID                  Description
\&
\&        0x00081000          TRC_HVM_ENTRYEXIT
\&        0x00082000          TRC_HVM_HANDLER
.Ve
.SS "Events"
.IX Subsection "Events"
\&\fBxentrace\fR collects the following events from the trace buffer:
.PP
.Vb 1
\&        ID                 Description
\&
\&        0x0001f001         TRC_LOST_RECORDS
\&        0x0002f001         TRC_SCHED_DOM_ADD
\&        0x0002f002         TRC_SCHED_DOM_REM
\&        0x0002f003         TRC_SCHED_SLEEP
\&        0x0002f004         TRC_SCHED_WAKE
\&        0x0002f005         TRC_SCHED_YIELD
\&        0x0002f006         TRC_SCHED_BLOCK
\&        0x0002f007         TRC_SCHED_SHUTDOWN
\&        0x0002f008         TRC_SCHED_CTL
\&        0x0002f009         TRC_SCHED_ADJDOM
\&        0x0002f010         TRC_SCHED_SWITCH
\&        0x0002f011         TRC_SCHED_S_TIMER_FN
\&        0x0002f012         TRC_SCHED_T_TIMER_FN
\&        0x0002f013         TRC_SCHED_DOM_TIMER_FN
\&        0x0002f014         TRC_SCHED_SWITCH_INFPREV
\&        0x0002f015         TRC_SCHED_SWITCH_INFNEXT
\&
\&        0x00081001         TRC_HVM_VMENTRY
\&        0x00081002         TRC_HVM_VMEXIT
\&        0x00082001         TRC_HVM_PF_XEN
\&        0x00082002         TRC_HVM_PF_INJECT
\&        0x00082003         TRC_HVM_INJ_EXC
\&        0x00082004         TRC_HVM_INJ_VIRQ
\&        0x00082005         TRC_HVM_REINJ_VIRQ
\&        0x00082006         TRC_HVM_IO_READ
\&        0x00082007         TRC_HVM_IO_WRITE
\&        0x00082008         TRC_HVM_CR_READ
\&        0x00082009         TRC_HVM_CR_WRITE
\&        0x0008200A         TRC_HVM_DR_READ
\&        0x0008200B         TRC_HVM_DR_WRITE
\&        0x0008200C         TRC_HVM_MSR_READ
\&        0x0008200D         TRC_HVM_MSR_WRITE
\&        0x0008200E         TRC_HVM_CPUID
\&        0x0008200F         TRC_HVM_INTR
\&        0x00082010         TRC_HVM_NMI
\&        0x00082011         TRC_HVM_SMI
\&        0x00082012         TRC_HVM_VMMCALL
\&        0x00082013         TRC_HVM_HLT
\&        0x00082014         TRC_HVM_INVLPG
\&
\&        0x0010f001         TRC_MEM_PAGE_GRANT_MAP
\&        0x0010f002         TRC_MEM_PAGE_GRANT_UNMAP
\&        0x0010f003         TRC_MEM_PAGE_GRANT_TRANSFER
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Mark A. Williamson <mark.a.williamson@intel.com>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBxentrace_format\fR\|(1)
